{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "target/release/examples/mlp_4d",
"pid": 6100,
"tg": 3130931,
"te": 4741618,
"pps": [
{
"tb": 48,
"tbk": 1,
"tl": 2590,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3499400,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 24,
"tbk": 1,
"tl": 106,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542878,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
53,
54,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542869,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
59,
60,
8,
9,
55,
37
]
},
{
"tb": 576,
"tbk": 2,
"tl": 45,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 149093,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
100,
101,
102,
103,
104,
105,
106,
11
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2945408,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1196,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903375,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222752,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
161,
162,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170684,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 16384,
"tbk": 16,
"tl": 75857692,
"mb": 16384,
"mbk": 16,
"gb": 16384,
"gbk": 16,
"eb": 16384,
"ebk": 16,
"fs": [
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9068,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480327,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370945,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
229,
228,
219,
218,
219,
220,
221,
222
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543014,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
230,
231,
8,
9,
55,
37
]
},
{
"tb": 262016,
"tbk": 11,
"tl": 1836,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269
]
},
{
"tb": 1507328,
"tbk": 23,
"tl": 3412033,
"mb": 1507328,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
270,
271,
272,
273,
274,
275,
276,
277,
278,
106,
11
]
},
{
"tb": 2291520,
"tbk": 100,
"tl": 17895667,
"mb": 1146880,
"mbk": 10,
"gb": 1146880,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
285,
286,
287,
288,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3542106,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
299,
300,
301,
302,
303,
304,
305,
306,
307,
308,
309,
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
322,
323,
324,
325,
326,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 1696,
"tbk": 1,
"tl": 6543,
"mb": 1696,
"mbk": 1,
"gb": 1696,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
329,
330,
331,
332,
333,
334,
335,
336,
37
]
},
{
"tb": 448,
"tbk": 7,
"tl": 6325228,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
162,
162,
162,
162
]
},
{
"tb": 480,
"tbk": 10,
"tl": 8852,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
343,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
8,
9,
10,
11
]
},
{
"tb": 655360,
"tbk": 8,
"tl": 2036,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903449,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9076,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480483,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
218,
218,
218,
219,
220,
221,
222
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543014,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
398,
399,
8,
9,
55,
37
]
},
{
"tb": 262016,
"tbk": 11,
"tl": 1929,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
400,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 709632,
"tbk": 693,
"tl": 27190,
"mb": 6144,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
425,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958725,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 148,
"tbk": 1,
"tl": 41,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
11
]
},
{
"tb": 480,
"tbk": 10,
"tl": 42605004,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
220,
221,
486,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2051,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
487,
488,
489,
490,
491,
492,
493,
494,
495,
222,
11
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 188453,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
498,
499,
500,
501,
8,
9,
10,
11
]
},
{
"tb": 768,
"tbk": 16,
"tl": 35564452,
"mb": 768,
"mbk": 16,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
218,
218,
218,
218,
219,
220,
221
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8917,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542898,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
508,
509,
8,
9,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903270,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 974,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
533,
537
]
},
{
"tb": 2976,
"tbk": 5,
"tl": 4262768,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
538,
539,
540,
541,
542,
543,
124,
125,
126,
127,
128,
129,
130,
131,
181,
182,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542939,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8017,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 25568933,
"mb": 655360,
"mbk": 10,
"gb": 655360,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
561,
562,
563,
564,
565,
566,
567,
568,
569,
570,
571,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 88,
"tbk": 1,
"tl": 406,
"mb": 88,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
586,
587,
588,
589,
590,
591,
592,
593,
594,
595,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2368,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
398,
399,
8,
9,
214,
215,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446363,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
228,
219,
228,
219,
220,
221
]
},
{
"tb": 72192,
"tbk": 1504,
"tl": 191026,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
596,
597,
598,
599,
600,
601,
602,
603,
604,
605,
606,
607,
608,
609,
610,
611,
612,
613,
614,
615,
616,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 1047808,
"tbk": 88,
"tl": 216206,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
626,
627,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807011,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
628,
161,
163
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903457,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153
]
},
{
"tb": 640,
"tbk": 10,
"tl": 18700561,
"mb": 640,
"mbk": 10,
"gb": 640,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
639,
640,
641,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3547675,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7
]
},
{
"tb": 64,
"tbk": 1,
"tl": 119,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
648,
649,
650,
651,
652,
653,
654,
655,
656,
657,
37
]
},
{
"tb": 1632,
"tbk": 1,
"tl": 21319,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
37
]
},
{
"tb": 672,
"tbk": 14,
"tl": 31125638,
"mb": 672,
"mbk": 14,
"gb": 336,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
218,
218,
218
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807028,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
162,
628,
161,
163
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2552,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 62658,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2153,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
53,
54,
8,
9,
214,
215,
49
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 8180,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
534,
535,
536,
533,
537
]
},
{
"tb": 4752,
"tbk": 6,
"tl": 2,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
720,
49
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806940,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9142,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2361,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
398,
399,
8,
9,
214,
215,
49
]
},
{
"tb": 18,
"tbk": 1,
"tl": 0,
"mb": 18,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
745,
746,
747,
748,
197,
198,
199,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8052,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2365,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
398,
399,
8,
9,
214,
215,
49
]
},
{
"tb": 616,
"tbk": 11,
"tl": 104,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
759,
760,
761,
762,
763,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2448,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957523,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
766,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 4902912,
"tbk": 1197,
"tl": 146563,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
535,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169450,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 112,
"tbk": 1,
"tl": 1839,
"mb": 112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
773,
774,
775,
776,
777,
778,
779,
780,
781,
782,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903258,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
783,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170816,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1835,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903477,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
161,
163,
161,
163
]
},
{
"tb": 9216,
"tbk": 6,
"tl": 176633,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
795,
667,
668,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2068,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
796,
797,
798,
799,
491,
492,
493,
494,
495,
222,
11
]
},
{
"tb": 65568,
"tbk": 1,
"tl": 17413,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
806,
571,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2945965,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
807,
808,
809,
810,
811,
812,
813,
814,
815,
816,
37
]
},
{
"tb": 1848,
"tbk": 1,
"tl": 1610160,
"mb": 1848,
"mbk": 1,
"gb": 1848,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
817,
818,
819,
820,
821,
822,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 192,
"tbk": 3,
"tl": 2710704,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
162,
162,
162,
162,
162,
162,
162,
162
]
},
{
"tb": 28672,
"tbk": 7,
"tl": 7147,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
534,
535,
537,
537,
536
]
},
{
"tb": 272,
"tbk": 1,
"tl": 1725,
"mb": 272,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
823,
824,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8909,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083593,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 1311360,
"tbk": 10,
"tl": 175879,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
806,
571,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 3606131,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
831,
832,
106,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892824,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
218,
229,
228
]
},
{
"tb": 131136,
"tbk": 1,
"tl": 20552,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
833,
834,
835,
836,
837,
838,
839,
668,
37
]
},
{
"tb": 73728,
"tbk": 18,
"tl": 11538,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 24576,
"tbk": 6,
"tl": 29770,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840,
841,
842,
843,
844
]
},
{
"tb": 128,
"tbk": 1,
"tl": 13535,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
845,
846,
847,
848,
849,
850,
851,
852,
853,
854,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169622,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 864,
"tbk": 18,
"tl": 21288172,
"mb": 288,
"mbk": 6,
"gb": 288,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2385,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
855,
856,
8,
9,
10,
11
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3548353,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2626,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
398,
399,
8,
9,
10,
11
]
},
{
"tb": 576,
"tbk": 2,
"tl": 41,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
862,
863,
864,
865,
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957087,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
879,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 11168,
"tbk": 109,
"tl": 1894028,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
442,
443,
444,
901,
902,
903,
904,
905,
906,
907,
908,
909,
910,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480306,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446356,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
228,
219,
228,
219,
220,
221
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169438,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 640,
"tbk": 10,
"tl": 18700522,
"mb": 640,
"mbk": 10,
"gb": 640,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
639,
640,
641,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1318919,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
930,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 14576,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840,
841,
842,
843,
844
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170797,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 5505024,
"tbk": 21,
"tl": 47055235,
"mb": 5505024,
"mbk": 21,
"gb": 5505024,
"gbk": 21,
"eb": 0,
"ebk": 0,
"fs": [
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
945,
946,
947,
948,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170723,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 1056,
"tbk": 11,
"tl": 121,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
762,
763,
214,
215,
49
]
},
{
"tb": 131072,
"tbk": 2,
"tl": 6995841,
"mb": 131072,
"mbk": 2,
"gb": 131072,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
972,
973,
974,
975,
976,
977,
978,
979,
980,
981,
982,
983,
984,
985,
986,
987,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 640,
"tbk": 5,
"tl": 3408219,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
988,
989,
990,
991,
992,
668,
37
]
},
{
"tb": 360448,
"tbk": 22,
"tl": 10493587,
"mb": 360448,
"mbk": 22,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
993,
994,
995,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006,
49
]
},
{
"tb": 221184,
"tbk": 54,
"tl": 32629,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892887,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
218,
218,
229
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957253,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1011,
1012,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 40,
"tbk": 2,
"tl": 30,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1013,
1014,
495,
486,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903291,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515
]
},
{
"tb": 288,
"tbk": 1,
"tl": 3485864,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1015,
1016,
1017,
1018,
1019,
1020,
1021,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 3096576,
"tbk": 756,
"tl": 89837,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2423,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 65408,
"tbk": 9,
"tl": 1110,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
1024,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 24671,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
8,
9,
10,
11
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807076,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
162,
162,
162,
628
]
},
{
"tb": 552,
"tbk": 1,
"tl": 477055,
"mb": 552,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1035,
1036,
1037,
1038,
1039,
1040,
1005,
1006,
49
]
},
{
"tb": 274697696,
"tbk": 99664,
"tl": 13988667,
"mb": 48360,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1041,
1042,
1043,
1044,
1045,
1046,
1047,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4740753,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1048,
1049,
1050,
1051,
1052,
1053,
1054,
1055,
1056,
1057
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9032,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370928,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1064,
1065,
1066,
1067,
1068,
228,
219,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480415,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1069,
1070,
1071,
1072,
1073,
1074,
1075,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543009,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542955,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 23,
"mb": 1152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
871,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543038,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 188678,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1092,
1093,
1094,
1095,
8,
9,
10,
11
]
},
{
"tb": 88,
"tbk": 1,
"tl": 3542793,
"mb": 88,
"mbk": 1,
"gb": 88,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1096,
1097,
1098,
1099,
1100,
1101,
1102,
1103,
1104,
1105,
1106,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3542565,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1107,
1108,
1109,
1110,
132,
133,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2146,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
508,
509,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2351,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
230,
231,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 1,
"tl": 588,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1111,
1112,
1113,
1114,
1115,
1116,
1117,
128,
129,
130,
131,
181,
182,
10,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370907,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
219,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 32,
"tbk": 1,
"tl": 320,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
1120,
1121,
1122,
1123,
1124,
484,
720,
49
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2625,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2552,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185450,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
219,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 640,
"tbk": 16,
"tl": 62915,
"mb": 640,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146,
1147,
1148,
1149,
1150,
1151,
1152,
1153,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083934,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
1154,
1155,
1156,
1157,
1158,
1159,
220,
221,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8554,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 393408,
"tbk": 3,
"tl": 51420,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169403,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170789,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957551,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
766,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446421,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
218,
218,
228
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957292,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
1177,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 2097152,
"tbk": 512,
"tl": 169421,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
537,
533,
534,
535,
537,
534,
537,
670,
671,
672
]
},
{
"tb": 77568,
"tbk": 1616,
"tl": 216666,
"mb": 576,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1186,
1187,
1188,
1189,
1190,
1191,
1192,
1193,
1194,
1195,
1196,
1197,
1198,
1199,
1200,
1201,
1202,
1203,
1204,
1205,
1206,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2207,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215
]
},
{
"tb": 1507328,
"tbk": 23,
"tl": 473631,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1207,
1208,
1209,
1210,
1211,
1212,
1213,
1214,
1215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543008,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1216,
1217,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 1,
"tl": 241,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1218,
1219,
1220,
1221,
1222,
1223,
1224,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1327745,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1225,
1226,
1227,
1228,
1229,
1230,
1231,
639,
640,
641,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958592,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1232,
1233,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2574,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 188834,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1234,
1235,
1236,
1237,
762,
763,
10,
11
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2945405,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1238,
1239,
1240,
1241,
1242,
1243,
1244,
1245,
1246,
1247,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
114,
115,
116,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8931,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3720601,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1255,
1256,
1257,
1258,
1259,
1260,
1261,
1262,
1263,
1264,
11
]
},
{
"tb": 120,
"tbk": 2,
"tl": 3728693,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
1275,
11
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4262949,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170655,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 10080,
"tbk": 3,
"tl": 85854,
"mb": 5760,
"mbk": 1,
"gb": 5760,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1284,
1285,
1286,
1287,
1288,
1289,
1290,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2189,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185467,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
228,
219,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903300,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9011,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 6144,
"tbk": 16,
"tl": 75857583,
"mb": 6144,
"mbk": 16,
"gb": 6144,
"gbk": 16,
"eb": 6144,
"ebk": 16,
"fs": [
1291,
1292,
1293,
1294,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2195,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 3264,
"tbk": 2,
"tl": 42540,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
1309,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 906982,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1310,
1311,
1312,
1313,
1314,
1315,
1316,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807018,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
628,
161,
163
]
},
{
"tb": 96,
"tbk": 1,
"tl": 594789,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1325,
1326,
1327,
1328,
1329,
1330,
1331,
579,
580,
581,
582,
583,
584,
585,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903506,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
162,
161,
163
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169648,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222785,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1332,
1333,
162,
162,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 591,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
535,
534,
537
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3548306,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1334,
1335,
1336,
1337,
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
481,
482,
483,
484,
720,
49
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 3543482,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1234,
1235,
1236,
1237,
762,
763,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3542526,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
181,
182,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185463,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
228,
219,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 672,
"tbk": 1,
"tl": 3481712,
"mb": 672,
"mbk": 1,
"gb": 672,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1357,
1358,
1359,
1360,
1361,
1362,
1363,
1364,
1365,
1366,
1367,
1368,
1369,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 291329,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
1381,
1382,
1383,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413
]
},
{
"tb": 327680,
"tbk": 2,
"tl": 2173179,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903427,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 3276800,
"tbk": 20,
"tl": 10642283,
"mb": 2621440,
"mbk": 10,
"gb": 2621440,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1610177,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1404,
1405,
1406,
1407,
1408,
1409,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907041,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
1410,
1411,
1412,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806985,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
628,
161,
163,
162
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 1697,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
537,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083569,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 528,
"tbk": 11,
"tl": 2032325,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
1413,
1414,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2864,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 1056,
"tbk": 11,
"tl": 217,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
1415,
1416,
1417,
1418,
762,
763,
55,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2062,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
796,
797,
798,
799,
491,
492,
493,
494,
495,
222,
11
]
},
{
"tb": 65408,
"tbk": 9,
"tl": 2024,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
1419,
11
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 575,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1420,
1421,
1422,
1423,
1424,
1425,
49
]
},
{
"tb": 24,
"tbk": 1,
"tl": 185652,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1426,
1427,
1428,
1429,
1430,
1431,
1432,
1433,
1434,
1435,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2361,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1436,
1437,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170865,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 11088,
"tbk": 22,
"tl": 23188,
"mb": 11088,
"mbk": 22,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 1835008,
"tbk": 448,
"tl": 148958,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
537,
533,
534,
535,
537,
537,
534,
537
]
},
{
"tb": 384,
"tbk": 1,
"tl": 83558,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1455,
1456,
1457,
1458,
1459,
1460,
1461,
1462,
1463,
1464,
160,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446405,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
218,
228,
219
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2073,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
796,
797,
798,
799,
491,
492,
493,
494,
495,
222,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2025,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
487,
488,
489,
490,
491,
492,
493,
494,
495,
486,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542898,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1465,
1466,
8,
9,
55,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958283,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1467,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903267,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1332,
1333,
161,
783,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1468,
1469
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260852,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
219,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 245,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1470,
1471,
1472,
1473,
762,
763,
55,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958947,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1474,
1475,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 654080,
"tbk": 90,
"tl": 30142,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
1476,
571,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 52517,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
1477,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 2040,
"tbk": 8,
"tl": 33,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1122,
1123,
1124,
484,
720,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260863,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
228,
219,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 186560,
"mb": 32768,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
533,
534,
534,
534,
535,
670,
671,
672
]
},
{
"tb": 832,
"tbk": 2,
"tl": 13,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
1502,
1503,
1504,
1505,
1506,
1507,
1508,
1509,
1510,
1511,
1512,
1513,
1514,
1515,
75,
76,
77,
78,
79,
80,
81,
82
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3542808,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1282,
1283,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169556,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 368,
"tbk": 1,
"tl": 477269,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1006,
49
]
},
{
"tb": 1959360,
"tbk": 20,
"tl": 9485881,
"mb": 1306240,
"mbk": 10,
"gb": 1306240,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 3096576,
"tbk": 756,
"tl": 643917,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 528,
"tbk": 11,
"tl": 46333,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1532,
1533,
762,
763,
10,
11
]
},
{
"tb": 524288,
"tbk": 128,
"tl": 260871,
"mb": 49152,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
534,
537,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 1806336,
"tbk": 441,
"tl": 1735063,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
537,
537,
536,
533,
537,
670,
671,
672
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521720,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1064,
1065,
1066,
1067,
1068,
228,
219,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 360,
"tbk": 1,
"tl": 10,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1534,
1535,
1536,
1537,
1538,
1539,
1540,
1541,
1542,
49
]
},
{
"tb": 116,
"tbk": 1,
"tl": 15,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1543,
1544,
1545,
1546,
1547,
1548,
1549,
1550,
1551,
1552,
1553,
1554,
1555,
1556,
1557,
1558,
1559,
1560,
1561,
1562,
1563,
1564,
1565,
1566,
83
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 27,
"mb": 1152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1567,
1568,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8764,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 654080,
"tbk": 90,
"tl": 27355,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
1476,
1589,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1318929,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1590,
1591,
1592,
1593,
1594,
1595,
1596,
928,
929,
930,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 192,
"tbk": 1,
"tl": 91,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1234,
1235,
1597,
1598,
1599,
8,
9,
10,
11
]
},
{
"tb": 480,
"tbk": 4,
"tl": 189132,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543041,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 640,
"tbk": 10,
"tl": 67482,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 256682,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
535,
537,
534,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 24320,
"tbk": 16,
"tl": 75832020,
"mb": 24320,
"mbk": 16,
"gb": 24320,
"gbk": 16,
"eb": 24320,
"ebk": 16,
"fs": [
1613,
1614,
1615,
1616,
1617,
1618,
1619,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2358,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170841,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8969,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8938,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 345,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1470,
1471,
1472,
1473,
762,
763,
10,
11
]
},
{
"tb": 640,
"tbk": 10,
"tl": 76441,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 294008,
"tbk": 2827,
"tl": 1350,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1620,
1621,
667,
668,
37
]
},
{
"tb": 552,
"tbk": 1,
"tl": 477279,
"mb": 552,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1006,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 7163,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
343,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170879,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 477352,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
1631,
1632,
1633,
1634,
1635,
1006,
49
]
},
{
"tb": 49152,
"tbk": 12,
"tl": 50866,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
537,
534,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 16352,
"tbk": 9,
"tl": 689252,
"mb": 8192,
"mbk": 1,
"gb": 2048,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1478,
1479,
1636,
1637,
1638,
1639,
1640,
1641,
1642,
1643,
1644,
1645,
1646,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 187655,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1282,
1283,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2168,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 1584,
"tbk": 2,
"tl": 16,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
1647,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
485,
11
]
},
{
"tb": 18,
"tbk": 1,
"tl": 1,
"mb": 18,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
745,
1653,
1654,
748,
197,
198,
199,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 232,
"tbk": 2,
"tl": 21,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1655,
1656,
1657,
1658,
1659,
1660,
871,
872,
873,
874,
875,
876,
877,
878,
484,
720
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907011,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1661,
1662,
1663,
1664,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957924,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1665,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 2976,
"tbk": 5,
"tl": 4262507,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
538,
539,
540,
541,
542,
543,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
214,
215,
49
]
},
{
"tb": 491520,
"tbk": 120,
"tl": 660987,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 1311360,
"tbk": 10,
"tl": 188328,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
1666,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2717,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6342,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1581,
1582,
1583,
1584,
1585,
1586,
1587,
1588,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083704,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
218,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 9573235,
"mb": 655360,
"mbk": 10,
"gb": 655360,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
930,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446412,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
218,
218,
228,
219
]
},
{
"tb": 9216,
"tbk": 9,
"tl": 78,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623
]
},
{
"tb": 88,
"tbk": 1,
"tl": 3542460,
"mb": 88,
"mbk": 1,
"gb": 88,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1672,
1673,
1674,
1675,
1676,
1677,
1678,
1679,
1680,
1681,
1682,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542925,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7213061,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6361,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892900,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
218,
218,
218,
229
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2461,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957605,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1704,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4264278,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1705,
1706,
1707,
1708,
1709,
214,
215,
49
]
},
{
"tb": 7741440,
"tbk": 1890,
"tl": 664032,
"mb": 28672,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
536,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542920,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 524288,
"tbk": 8,
"tl": 12886639,
"mb": 524288,
"mbk": 8,
"gb": 524288,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
1710,
1711,
1712,
1713,
1714,
1715,
1716,
1717,
1718,
1719,
1720,
1721,
1722,
1723,
1724,
1725,
1726,
1727,
1728,
1729,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 709632,
"tbk": 693,
"tl": 10555,
"mb": 4096,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
425,
426,
427,
428,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 524288,
"tbk": 8,
"tl": 3625346,
"mb": 524288,
"mbk": 8,
"gb": 524288,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
1730,
1731,
1732,
1733,
1734,
1735,
1736,
1737,
1738,
1739,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 258048,
"tbk": 63,
"tl": 8364,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
534,
533,
535,
533
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 247399,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
535,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083813,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
219,
220,
221,
486
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957480,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1740,
1741,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2243,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1742,
1743,
8,
9,
214,
215,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958417,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1744,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 196608,
"tbk": 1,
"tl": 476508,
"mb": 196608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1745,
1746,
1747,
1748,
1749,
1750,
1751
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083898,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
1064,
1065,
1066,
1067,
1068,
218,
218,
218,
218,
218,
219,
220,
221,
486
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2225,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
59,
60,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2249,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1465,
1466,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8662,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 6144,
"tbk": 6,
"tl": 80,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
1752
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 4265984,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1753,
1754,
1755,
1756,
1757,
1758,
1759,
1751
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957331,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
1177,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 5456,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
535,
534,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 25352990,
"mb": 655360,
"mbk": 10,
"gb": 655360,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
561,
562,
563,
564,
565,
566,
567,
568,
569,
570,
1589,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 368,
"tbk": 1,
"tl": 170030,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1516,
1517,
1518,
1519,
1520,
1521,
1522,
1523,
1524,
1760,
11
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1000,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1761,
1762,
1763,
1764,
1765,
1766,
1767,
486,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903619,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153
]
},
{
"tb": 192,
"tbk": 1,
"tl": 42688,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1768,
1769,
1770,
1771,
1772,
1773,
1774,
1304,
1305,
1306,
1307,
1308,
1309,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892877,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
218,
218,
229
]
},
{
"tb": 262016,
"tbk": 11,
"tl": 2858,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
1775,
11
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3547808,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2416,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185455,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
219,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903600,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20738820,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
1776,
1777,
1778,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 4980736,
"tbk": 1216,
"tl": 142625,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
533,
535,
537,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4740770,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1779,
1780
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9003,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9163,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2399,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 40,
"tbk": 2,
"tl": 30,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1792,
1793,
495,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 7972,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2587,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8980,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 336,
"tbk": 1,
"tl": 2945927,
"mb": 336,
"mbk": 1,
"gb": 336,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1794,
1795,
1796,
1797,
1798,
1799,
1800,
1801,
1802,
1803,
1804,
1805,
1806,
1807,
1808,
1809,
1810,
1811,
1812,
1813,
37
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3548271,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903591,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2376,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
59,
60,
8,
9,
10,
11
]
},
{
"tb": 640,
"tbk": 10,
"tl": 76518,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1814,
1815,
1816,
1817,
1818,
1819,
1820,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1061,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
1821,
1822,
1823,
1824,
1825,
1826,
1827,
1828,
1829,
1830,
1831,
495,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8192,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 672,
"tbk": 14,
"tl": 31125672,
"mb": 672,
"mbk": 14,
"gb": 336,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
218,
218,
218
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3542122,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
299,
300,
301,
302,
303,
304,
305,
306,
307,
308,
309,
1832,
1833,
1834,
1835,
1836,
317,
318,
319,
320,
321,
322,
323,
324,
325,
326,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 17415,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
536,
533,
535,
534
]
},
{
"tb": 327680,
"tbk": 2,
"tl": 2177406,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585,
37
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1013,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1761,
1762,
1763,
1764,
1765,
1766,
1767,
222,
11
]
},
{
"tb": 240,
"tbk": 15,
"tl": 56722,
"mb": 240,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1847,
1848,
1849,
1850,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 1056,
"tbk": 11,
"tl": 309,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
1415,
1416,
1417,
1418,
762,
763,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2654,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903266,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 528,
"tbk": 11,
"tl": 42817,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1532,
1533,
762,
763,
214,
215,
49
]
},
{
"tb": 256,
"tbk": 1,
"tl": 161,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
1125,
1862,
1863,
1864,
1865,
1866,
1867,
1868,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2405,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1742,
1743,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9026,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 192,
"tbk": 1,
"tl": 309,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1111,
1112,
1113,
1114,
1115,
1116,
1117,
128,
129,
130,
131,
132,
133,
10,
11
]
},
{
"tb": 576,
"tbk": 2,
"tl": 15,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1876,
1877,
1878,
871,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1458,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542892,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1879,
1880,
8,
9,
55,
37
]
},
{
"tb": 18,
"tbk": 1,
"tl": 3,
"mb": 18,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
734,
735,
736,
737,
738,
739,
740,
1881,
1882,
1883,
1884,
1885,
1886,
1887,
1888,
1889,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3542110,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1893,
1894,
1895,
1896,
1897,
1898,
1899,
317,
318,
319,
320,
321,
322,
323,
324,
325,
326,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2153,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
53,
54,
8,
9,
214,
215,
49
]
},
{
"tb": 1376256,
"tbk": 21,
"tl": 64490322,
"mb": 1376256,
"mbk": 21,
"gb": 1376256,
"gbk": 21,
"eb": 0,
"ebk": 0,
"fs": [
1900,
1901,
1902,
1903,
1904,
1905,
1906,
1907,
1908,
1909,
1905,
1906,
1907,
1910,
1911,
1912,
1913,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 32640,
"tbk": 1,
"tl": 89,
"mb": 32640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1914,
1915,
1916,
1917,
1918,
1919,
1920,
1921,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 480,
"tbk": 10,
"tl": 76855,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 131136,
"tbk": 1,
"tl": 20948,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
833,
834,
835,
836,
837,
838,
1922,
1923,
37
]
},
{
"tb": 552,
"tbk": 1,
"tl": 475220,
"mb": 552,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1924,
1925,
1926,
1927,
1928,
1929,
1215,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958121,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
1930,
1931,
1932,
1933,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 4896,
"tbk": 3,
"tl": 51339,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
49
]
},
{
"tb": 983040,
"tbk": 6,
"tl": 11149383,
"mb": 786432,
"mbk": 3,
"gb": 786432,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
1947,
1948,
1949,
1950,
1262,
1263,
1264,
11
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 18719,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
534,
534,
534,
536
]
},
{
"tb": 192,
"tbk": 1,
"tl": 308,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1111,
1112,
1113,
1114,
1115,
1116,
1117,
128,
129,
130,
131,
132,
133,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2410,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480522,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
219,
220,
221,
222
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446373,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
228,
219,
228,
219
]
},
{
"tb": 232,
"tbk": 2,
"tl": 24,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1655,
1656,
1657,
1951,
1952,
1953,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87
]
},
{
"tb": 480,
"tbk": 10,
"tl": 4407,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
343,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3542242,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1355,
1356,
132,
133,
55,
37
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 584,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
537,
533,
535,
670,
671,
672
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480260,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 2753856,
"tbk": 21,
"tl": 409875,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1967,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 1259,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
534,
535,
670,
671,
672
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2370,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1879,
1880,
8,
9,
10,
11
]
},
{
"tb": 5701632,
"tbk": 87,
"tl": 923873,
"mb": 393216,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1968,
1969,
1970,
1971,
1972,
1973,
1974,
1975,
1976,
1977,
1978,
668,
37
]
},
{
"tb": 1792,
"tbk": 16,
"tl": 75835769,
"mb": 1792,
"mbk": 16,
"gb": 1792,
"gbk": 16,
"eb": 1792,
"ebk": 16,
"fs": [
1979,
1980,
1981,
1982,
1983,
1984,
1985,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1751
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9053,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 92887,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
1022,
1023,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006
]
},
{
"tb": 28672,
"tbk": 7,
"tl": 50391,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
537,
537,
534,
537,
670,
671,
672
]
},
{
"tb": 220,
"tbk": 22,
"tl": 1,
"mb": 10,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057
]
},
{
"tb": 1,
"tbk": 1,
"tl": 38,
"mb": 1,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2058,
2059,
2060,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
495,
486,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903610,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1332,
1333,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155
]
},
{
"tb": 4608,
"tbk": 64,
"tl": 32030212,
"mb": 4608,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2074,
2075,
2076,
2077,
2078,
2079,
2080,
2081,
2082,
2083,
2084,
2085,
841,
842,
843,
844,
2086,
2087,
2088,
2089,
2090,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 60844,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
534,
534,
535,
670,
671,
672
]
},
{
"tb": 64,
"tbk": 1,
"tl": 906973,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 258048,
"tbk": 63,
"tl": 188523,
"mb": 45056,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
535,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 77568,
"tbk": 1616,
"tl": 211877,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2098,
2099,
2100,
2101,
2102,
2103,
2104,
2105,
2106,
2107,
2108,
2109,
2110,
2111,
2112,
2113,
2114,
2115,
2116,
2117,
2118,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2387,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2335,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1216,
1217,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9087,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 528,
"tbk": 11,
"tl": 46288,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1532,
1533,
762,
763,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9057,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170631,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3493560,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2119,
2120,
2121,
2122,
2123,
2124,
2125,
2126,
2127,
2128,
2129,
2130,
2131,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2391,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 824,
"tbk": 2,
"tl": 47,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
2132,
2133,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 80599,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
533,
534,
535,
536,
533,
537,
670,
671,
672
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169569,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2609,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
230,
231,
8,
9,
10,
11
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3547830,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9
]
},
{
"tb": 1344,
"tbk": 1,
"tl": 125317,
"mb": 1344,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2134,
2135,
2136,
2137,
2138,
2139,
2140,
2141,
2142,
2143,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903592,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20739138,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2144,
2145,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 480,
"tbk": 10,
"tl": 1850994,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
219,
220,
221,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2393,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1052,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
2146,
2147,
2148,
2149,
2150,
2151,
2152,
1829,
1830,
1831,
495,
486,
49
]
},
{
"tb": 9792,
"tbk": 12,
"tl": 17,
"mb": 816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
2153,
2154,
1647,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956929,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
2155,
2156,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740262,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
2157,
2158,
2159,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 26,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
534,
534,
534,
533
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4740751,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2160,
2161,
2162,
2163,
2164,
2165,
2166,
2167,
2168,
2169
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807036,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
162,
628,
161
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 669,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
534,
534,
535
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 6036,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
534,
535,
534,
537,
670,
671,
672
]
},
{
"tb": 504,
"tbk": 1,
"tl": 3009663,
"mb": 504,
"mbk": 1,
"gb": 504,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2170,
2171,
2172,
2173,
2174,
2175,
2176,
2177,
2178,
2179,
2180,
2181,
2182,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 4800,
"tbk": 150,
"tl": 18,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2183,
2184,
2185,
2186,
2187,
2188,
2189,
2190,
2191,
2192,
992,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542935,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 65568,
"tbk": 1,
"tl": 21376,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2193,
2194,
2195,
2196,
2197,
2198,
666,
667,
668,
37
]
},
{
"tb": 2620160,
"tbk": 110,
"tl": 22937,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
1383,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 8192,
"tbk": 8,
"tl": 40,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903510,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
162,
161,
163
]
},
{
"tb": 832,
"tbk": 2,
"tl": 10,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2199,
2200,
2201,
2202,
2203,
2204,
2205,
2206,
2207,
2208,
871,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 8791,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
2209,
2210,
2211,
2212,
2213,
2214,
352,
353,
354,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170891,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4741580,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2215,
2216,
2217,
2218,
2219,
2220,
2221,
2222,
2223,
2224
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903409,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2421,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542915,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1879,
1880,
8,
9,
55,
37
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2941969,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2225,
2226,
2227,
2228,
2229,
2230,
2231,
2232,
2233,
2234,
37
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 4741019,
"mb": 2048,
"mbk": 1,
"gb": 2048,
"gbk": 1,
"eb": 2048,
"ebk": 1,
"fs": [
2235,
2236,
2237,
2238,
2239,
2240,
2241,
2242,
2243,
2244,
2245,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1751
]
},
{
"tb": 1,
"tbk": 1,
"tl": 11,
"mb": 1,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2246,
2247,
2248,
2249,
2250,
2251,
2252,
2253,
2254,
2255,
2256,
2257,
2258,
2259,
2260,
2261,
2262,
2263,
2264,
2265,
2266,
2267,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 591600,
"tbk": 1450,
"tl": 1614627,
"mb": 59160,
"mbk": 145,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2268,
2269,
2270,
2271,
2272,
2273,
2274,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521726,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
229,
228,
219,
218,
219,
220,
221,
486
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7212857,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
2275,
2276,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8795,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2277,
2278,
2279,
2280,
2281,
2282,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
1701,
1702,
1703,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 1508064,
"tbk": 23,
"tl": 472755,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
2291,
1215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8959,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 528,
"tbk": 11,
"tl": 46861975,
"mb": 528,
"mbk": 11,
"gb": 528,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
1413,
1414,
486,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2183,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 187690,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1107,
1108,
1109,
1110,
181,
182,
10,
11
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222343,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
161,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7213114,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
2292,
2293,
2294,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 906997,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
2299,
2300,
2301,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260860,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
228,
219,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903286,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1332,
1333,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 62098,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
534,
534,
534,
535
]
},
{
"tb": 49152,
"tbk": 12,
"tl": 2349,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 465051,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2302,
2303,
2304,
2305,
2306,
2307,
2308,
2309,
2310,
667,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2857,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10
]
},
{
"tb": 768,
"tbk": 16,
"tl": 35564409,
"mb": 768,
"mbk": 16,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
218,
218,
218,
218,
219,
220,
221
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3543740,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1705,
1706,
1707,
1708,
1709,
55,
37
]
},
{
"tb": 148,
"tbk": 1,
"tl": 44,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
2311,
2312,
1564,
1565,
1566,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96
]
},
{
"tb": 832,
"tbk": 2,
"tl": 192,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2199,
2200,
2201,
2202,
2203,
2204,
2205,
2206,
2207,
2208,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480592,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1064,
1065,
1066,
1067,
1068,
218,
218,
218,
218,
218,
219,
220,
221,
222
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8688,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 824,
"tbk": 2,
"tl": 45,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
2132,
2133,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 356,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1470,
1471,
1472,
1473,
762,
763,
214,
215,
49
]
},
{
"tb": 2,
"tbk": 1,
"tl": 35,
"mb": 2,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2314,
2315,
2316,
2317,
2318,
2319,
495,
486,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370939,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
229,
228,
219,
218,
219,
220,
221,
222
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3542223,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
132,
133,
55,
37
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1327711,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
930,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2332,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 327680,
"tbk": 2,
"tl": 3547047,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2320,
2321,
2322,
2323,
2324,
2325,
2326,
2327,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083771,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
218,
218,
218,
219,
220,
221,
486
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 9505580,
"mb": 655360,
"mbk": 10,
"gb": 655360,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222305,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 20,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
533,
535,
533,
535
]
},
{
"tb": 262272,
"tbk": 4,
"tl": 83452,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2193,
2194,
2195,
2196,
2197,
2198,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
1462,
1463,
1464,
160,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083909,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
2345,
2346,
2347,
2348,
2349,
549,
550,
551,
1154,
1155,
1156,
1157,
1158,
1159,
220,
221,
486,
49
]
},
{
"tb": 448,
"tbk": 7,
"tl": 6325194,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
162,
162,
162
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8790,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 131072,
"tbk": 2,
"tl": 5890802,
"mb": 131072,
"mbk": 2,
"gb": 131072,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
2350,
2351,
2352,
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
2363,
2364,
2365,
2366,
1245,
1246,
1247,
1248,
1249,
1250,
1251,
1252,
1253,
1254,
114,
115,
116,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083615,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 1584,
"tbk": 2,
"tl": 15,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
1647,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
720,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 24720,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2367,
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
1032,
1033,
1034,
8,
9,
10,
11
]
},
{
"tb": 10321920,
"tbk": 2520,
"tl": 294557,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 753664,
"tbk": 23,
"tl": 3912640,
"mb": 753664,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2377,
2378,
2379,
2380,
2381,
2382,
2383,
2384,
2385,
2386,
1760,
11
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7212964,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
2387,
2388,
2389,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 256,
"tbk": 1,
"tl": 49,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
1829,
1830,
1831,
495,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 7961,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 2263,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
181,
182,
10,
11
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 54318,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
535,
534,
537,
670,
671,
672
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169493,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2185,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2173,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 1,
"tl": 302,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1218,
1219,
1220,
1221,
1222,
1223,
1224,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169661,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 195936,
"tbk": 2,
"tl": 1310565,
"mb": 130624,
"mbk": 1,
"gb": 130624,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1525,
1526,
1527,
1528,
1529,
1530,
1531,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956846,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2399,
2400,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903581,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 672,
"tbk": 14,
"tl": 31125717,
"mb": 672,
"mbk": 14,
"gb": 336,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
218,
218,
218,
218
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2608,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
230,
231,
8,
9,
10,
11
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222589,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
161,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740758,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
2401,
2402,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 1344,
"tbk": 1,
"tl": 2408,
"mb": 1344,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2403,
2404,
2405,
2406,
2407,
2408,
2409,
2410,
2411,
2412,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222680,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515
]
},
{
"tb": 65536,
"tbk": 16,
"tl": 1752,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
534,
534,
534,
534
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2581,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 16384,
"tbk": 4,
"tl": 799162,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840,
841,
842,
843,
844,
2086,
2087,
2088,
2089,
2090,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 1,
"tbk": 1,
"tl": 42,
"mb": 1,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2058,
2059,
2060,
2061,
2062,
2063,
2064,
2065,
2066,
2067,
2068,
2069,
2070,
2071,
2072,
2073,
495,
222,
11
]
},
{
"tb": 9216,
"tbk": 6,
"tl": 181348,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
2421,
667,
668,
37
]
},
{
"tb": 196608,
"tbk": 48,
"tl": 31604,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840,
841,
842,
843,
844
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957966,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1665,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 964,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
181,
182,
214,
215,
49
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1069,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
2146,
2147,
2148,
2149,
2150,
2151,
2152,
1829,
1830,
1831,
495,
222,
11
]
},
{
"tb": 753664,
"tbk": 23,
"tl": 10980300,
"mb": 753664,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2377,
2378,
2379,
2380,
2381,
2382,
2383,
2384,
2385,
2386,
1006,
49
]
},
{
"tb": 192,
"tbk": 1,
"tl": 311,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1111,
1112,
1113,
1114,
1115,
1116,
1117,
128,
129,
130,
131,
132,
133,
55,
37
]
},
{
"tb": 327680,
"tbk": 2,
"tl": 3552515,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2422,
2423,
2424,
2425,
2426,
2427,
2428,
2429,
11
]
},
{
"tb": 709632,
"tbk": 693,
"tl": 48243,
"mb": 11264,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
425,
426,
427,
428,
2430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 1213201,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
534,
534,
534,
534,
534,
535
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 354585,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
535,
534,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 436,
"tbk": 1,
"tl": 63,
"mb": 436,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
1485,
1486,
1487,
1122,
1123,
1124,
484,
485,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083977,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
2444,
2445,
2446,
2447,
2448,
1157,
1158,
1159,
220,
221,
486,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542883,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
2449,
2450,
8,
9,
55,
37
]
},
{
"tb": 16256,
"tbk": 7,
"tl": 4738310,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 8192,
"ebk": 1,
"fs": [
2451,
2452,
2453,
2454,
2455,
2456,
2457,
2458,
2459,
2460,
2461,
2462,
2463,
2464,
2465,
2466,
200,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
442,
443,
444
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958365,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
2479,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907048,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
1410,
1411,
1412,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957169,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2480,
2481,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 256,
"tbk": 16,
"tl": 75857634,
"mb": 256,
"mbk": 16,
"gb": 256,
"gbk": 16,
"eb": 256,
"ebk": 16,
"fs": [
2482,
2483,
2484,
2485,
2486,
2487,
2488,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2945357,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2489,
2490,
2491,
2492,
2493,
2494,
2495,
2496,
2497,
2498,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2350,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
53,
54,
8,
9,
10,
11
]
},
{
"tb": 6026368,
"tbk": 253,
"tl": 58519,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
2499,
106,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8075,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 88,
"tbk": 1,
"tl": 1393,
"mb": 88,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1672,
1673,
1674,
1675,
1676,
1677,
1678,
1679,
1680,
1681,
1682,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4262390,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
132,
133,
214,
215,
49
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 5925,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
534,
535,
537,
534,
537
]
},
{
"tb": 224,
"tbk": 3,
"tl": 52,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
2500,
2501,
481,
482,
483,
484,
485,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260857,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
228,
219,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 5120,
"tbk": 5,
"tl": 55,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
429,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 120,
"tbk": 1,
"tl": 681655,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2502,
2503,
2504,
2505,
2506,
2507,
2508,
992,
668,
37
]
},
{
"tb": 2112,
"tbk": 11,
"tl": 2078431,
"mb": 2112,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
2509,
2510,
2511,
2512,
2513,
2514,
2515,
762,
763,
10,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480652,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1154,
1155,
1156,
1157,
1158,
1159,
220,
221,
222,
11
]
},
{
"tb": 20384,
"tbk": 8,
"tl": 4738275,
"mb": 8192,
"mbk": 1,
"gb": 4128,
"gbk": 1,
"eb": 4128,
"ebk": 1,
"fs": [
2451,
2452,
2453,
2454,
2455,
2456,
2457,
2516,
2517,
2518,
2519,
2520,
2463,
2464,
2465,
2466,
200,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
442,
443,
444
]
},
{
"tb": 88368,
"tbk": 1841,
"tl": 30277273,
"mb": 816,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2521,
2522,
2523,
2524,
2525,
2526,
2527,
2528,
2529,
2530,
2531,
2532,
902,
903,
904,
905,
906,
907,
908,
909,
910,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2338,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
508,
509,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8893,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 88,
"tbk": 1,
"tl": 1720,
"mb": 88,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1096,
1097,
1098,
1099,
1100,
1101,
1102,
1103,
1104,
1105,
1106,
10,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2056,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
487,
488,
489,
490,
491,
492,
493,
494,
495,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903279,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957050,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
2533,
2534,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3542876,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1107,
1108,
1109,
1110,
181,
182,
55,
37
]
},
{
"tb": 576,
"tbk": 2,
"tl": 10,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2535,
2536,
2537,
2538,
2539,
2540,
2541,
2542,
2543,
2544,
2545,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2546,
2547
]
},
{
"tb": 10112,
"tbk": 32,
"tl": 132,
"mb": 632,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
2548,
2549,
2550,
2551,
2552,
2553,
2554,
2555,
2556,
691,
692,
693,
1647,
695,
696,
697,
698,
699,
700
]
},
{
"tb": 1584,
"tbk": 2,
"tl": 75,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 753664,
"tbk": 23,
"tl": 3909263,
"mb": 753664,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
2572,
2569,
2570,
2571,
1630,
1760,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3543359,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1092,
1093,
1094,
1095,
8,
9,
55,
37
]
},
{
"tb": 8192,
"tbk": 8,
"tl": 42,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
429,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 72192,
"tbk": 1504,
"tl": 196992,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2573,
2574,
2575,
2576,
2577,
2578,
2579,
2580,
2581,
2582,
2583,
2584,
2585,
2586,
2587,
2588,
2589,
2590,
2591,
2592,
2593,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 21298,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2594,
2595,
2596,
2597,
2598,
2599,
2600,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903481,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
161,
163,
161,
163
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543019,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
398,
399,
8,
9,
55,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222373,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
161,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 640,
"tbk": 10,
"tl": 67557,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1814,
1815,
1816,
1817,
1818,
1819,
1820,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 4752,
"tbk": 6,
"tl": 44,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
1647,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
720,
49
]
},
{
"tb": 65408,
"tbk": 9,
"tl": 428887,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
2601,
2602,
2603,
2604,
1751
]
},
{
"tb": 192,
"tbk": 1,
"tl": 251,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1111,
1112,
1113,
1114,
1115,
1116,
1117,
128,
129,
130,
131,
181,
182,
214,
215,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521709,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
219,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521697,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
219,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 4752,
"tbk": 6,
"tl": 46,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
1647,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
485,
11
]
},
{
"tb": 48,
"tbk": 4,
"tl": 84,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2605,
2606,
2607,
2608,
2609,
2610,
2034,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87
]
},
{
"tb": 655680,
"tbk": 10,
"tl": 188490,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
1666,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958859,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
2611,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957004,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2612,
2613,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20738917,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2614,
2615,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 65568,
"tbk": 1,
"tl": 20557,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2193,
2194,
2195,
2196,
2197,
2198,
839,
668,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083724,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 1058644,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2616,
2617,
2618,
2619,
2620,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1751
]
},
{
"tb": 524288,
"tbk": 8,
"tl": 256988,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2621,
2622,
2623,
2624,
2625,
2626,
2627,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 1632,
"tbk": 1,
"tl": 20528,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
665,
839,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2236,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
2449,
2450,
8,
9,
214,
215,
49
]
},
{
"tb": 576,
"tbk": 2,
"tl": 29,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
2545,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740441,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2628,
2629,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 576,
"tbk": 2,
"tl": 5,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1876,
1877,
1878,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2593,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1216,
1217,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8006,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892716,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
229,
228,
219,
218,
219,
220,
221
]
},
{
"tb": 576,
"tbk": 2,
"tl": 20,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
862,
863,
864,
865,
866,
867,
868,
869,
870,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 832,
"tbk": 2,
"tl": 203,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2199,
2200,
2201,
2202,
2203,
2204,
2205,
2206,
2207,
2208,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 59160,
"tbk": 145,
"tl": 166537,
"mb": 59160,
"mbk": 145,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2268,
2269,
2270,
2271,
2272,
2273,
2274,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9959322,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2630,
2631,
2632,
2633,
2634,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903435,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155
]
},
{
"tb": 16320,
"tbk": 10,
"tl": 180836,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
806,
1589,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 384,
"tbk": 8,
"tl": 22141,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2178,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 1507328,
"tbk": 23,
"tl": 10914654,
"mb": 1507328,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2635,
2636,
2637,
2638,
2639,
2640,
2641,
2642,
2643,
1215,
49
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3784713,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2644,
2645,
2646,
2647,
2648,
2649,
2650,
1174,
1175,
1176,
49
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 817265,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2651,
2652,
2653,
2654,
2655,
2656,
2657,
2658,
2659,
2660,
160,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2230,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
855,
856,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8988,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 147456,
"tbk": 1,
"tl": 894,
"mb": 147456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2661,
2662,
2663,
2664,
2665,
2666,
2667,
2668,
11
]
},
{
"tb": 131136,
"tbk": 2,
"tl": 42634,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
1309,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2584,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 229152,
"tbk": 10,
"tl": 1943041,
"mb": 114688,
"mbk": 1,
"gb": 114688,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
285,
286,
287,
288,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 2949120,
"tbk": 20,
"tl": 71616,
"mb": 2949120,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2669,
2670,
2671,
2672,
2673,
2674,
2675,
2676,
2677,
2678,
2679,
2680,
2681,
2682,
2683,
2684,
2685,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958192,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
2686,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9959368,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2687,
2688,
2689,
2690,
2634,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222947,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1332,
1333,
161,
163,
783,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 655360,
"tbk": 4,
"tl": 6981510,
"mb": 524288,
"mbk": 2,
"gb": 524288,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
2691,
2692,
2693,
2694,
2126,
2127,
2128,
2129,
2130,
2131,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 65568,
"tbk": 1,
"tl": 19188,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
1666,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 832,
"tbk": 2,
"tl": 9,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2199,
2200,
2201,
2202,
2203,
2204,
2205,
2206,
2207,
2208,
871,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 122880,
"tbk": 30,
"tl": 2904,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
533,
536,
533,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 196608,
"tbk": 3,
"tl": 11175749,
"mb": 196608,
"mbk": 3,
"gb": 196608,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
2695,
2696,
2697,
2698,
2699,
2700,
2701,
2702,
2703,
2704,
2705,
2706,
2707,
2708,
2709,
2710,
2711,
2712,
2713,
2714,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4262684,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
181,
182,
214,
215,
49
]
},
{
"tb": 4128768,
"tbk": 3072,
"tl": 59382,
"mb": 16896,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
533,
534,
535,
536,
533,
537
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 280784,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
242,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958498,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
2734,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 768,
"tbk": 16,
"tl": 559621,
"mb": 768,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2735,
2736,
2737,
2738,
2739,
2740,
2741,
2742,
2743,
2744,
2745,
2746,
2747,
2748,
2749,
2750,
2751,
2752,
2753,
2754,
2755,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260846,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
219,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4262706,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1355,
1356,
181,
182,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542930,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958461,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1744,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 1806336,
"tbk": 441,
"tl": 3341710,
"mb": 65536,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
537,
537,
534,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 16,
"tbk": 1,
"tl": 78,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1847,
1848,
1849,
2756,
1751
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480241,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 192,
"tbk": 1,
"tl": 314,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1111,
1112,
1113,
1114,
1115,
1116,
1117,
128,
129,
130,
131,
181,
182,
55,
37
]
},
{
"tb": 1806336,
"tbk": 441,
"tl": 514894,
"mb": 36864,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
534,
535,
537,
537,
536,
533
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907033,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
2757,
2758,
2759,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 299,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 32,
"tbk": 1,
"tl": 845,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
2760,
2761,
2762,
2763,
2764,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8790,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2765,
2766,
2767,
2768,
2281,
2282,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
1701,
1702,
1703,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 258048,
"tbk": 63,
"tl": 7518,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
534,
534,
534,
533
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20738764,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
1776,
1777,
1778,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957765,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
1930,
1931,
1932,
2769,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9959277,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
2770,
2771,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 1056,
"tbk": 11,
"tl": 301,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
1415,
1416,
1417,
1418,
762,
763,
10,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903520,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
162,
162,
161
]
},
{
"tb": 77824,
"tbk": 19,
"tl": 2569,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
535,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 3072,
"tbk": 3,
"tl": 22,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
429,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
1752,
2772,
2773,
2774,
2775
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2421,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
2776,
2777,
8,
9,
10,
11
]
},
{
"tb": 1432576,
"tbk": 1399,
"tl": 172525,
"mb": 13312,
"mbk": 13,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2778,
2779,
2780,
2781,
2782,
2783,
2784,
2785,
2786,
2787,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623
]
},
{
"tb": 864,
"tbk": 2,
"tl": 432634,
"mb": 576,
"mbk": 1,
"gb": 576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2788,
2789,
2790,
2791,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 40,
"tbk": 1,
"tl": 901205,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2792,
2793,
2794,
2795,
2796,
160,
37
]
},
{
"tb": 262144,
"tbk": 4,
"tl": 389119,
"mb": 262144,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2797,
2798,
2799,
2800,
2801,
2802,
2803,
2804,
2805,
2806,
2807,
2808,
2809,
2810,
2811,
2812,
2813,
2814,
2815,
160,
37
]
},
{
"tb": 3016128,
"tbk": 23,
"tl": 472661,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
2291,
1215,
49
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 3015,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
533,
534,
534,
535,
670,
671,
672
]
},
{
"tb": 576,
"tbk": 2,
"tl": 261,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2816,
2817,
2818,
2819,
2820,
2821,
2822,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
720,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892725,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
229,
228,
219,
218,
219
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083744,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 192,
"tbk": 1,
"tl": 564,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1218,
1219,
1220,
1221,
1222,
1223,
1224,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169411,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 15878,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
534,
534,
536,
533
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8927,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 436,
"tbk": 1,
"tl": 43,
"mb": 436,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2823,
2824,
2825,
2826,
2827,
2828,
2829,
2830,
2762,
2763,
2764,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8992,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 448,
"tbk": 1,
"tl": 4262996,
"mb": 448,
"mbk": 1,
"gb": 448,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2831,
2832,
2833,
2834,
8,
9,
214,
215,
49
]
},
{
"tb": 256,
"tbk": 1,
"tl": 53,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2390,
2391,
2392,
2393,
2394,
2395,
2396,
2397,
2398,
1829,
1830,
1831,
495,
222,
11
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807002,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
628,
161,
163,
162
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2234004,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
639,
640,
641,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 504,
"tbk": 1,
"tl": 2261,
"mb": 504,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
2835,
2836,
2837,
2838,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 384,
"tbk": 6,
"tl": 5440947,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2839,
2840,
2841,
2842,
2843,
2844,
2845,
2846,
2847,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 214,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
534,
534,
536,
533
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 3301,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
533,
534,
535,
537,
536
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 583384,
"mb": 32768,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
534,
535,
537,
536,
533,
537
]
},
{
"tb": 709632,
"tbk": 693,
"tl": 69784,
"mb": 9216,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
425,
426,
427,
428,
2430,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370790,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 3072,
"tbk": 3,
"tl": 111,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
2430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
1752,
2772,
2773,
2774,
2775
]
},
{
"tb": 15120,
"tbk": 30,
"tl": 45170,
"mb": 1512,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2848,
2849,
2850,
2851,
2852,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 4980736,
"tbk": 1216,
"tl": 134906,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
533,
535,
536,
533,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2035,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
796,
797,
798,
799,
491,
492,
493,
494,
495,
486,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958634,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1232,
1233,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957372,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2860,
2861,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446384,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
228,
219,
228
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956693,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
2862,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 147456,
"tbk": 1,
"tl": 3832,
"mb": 147456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2661,
2662,
2663,
2664,
2665,
2863,
2864,
2865,
2866,
2867,
2868,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 493045,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2869,
2870,
2871,
2872,
2873,
2874,
2875,
2876,
2877,
2878,
667,
668,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8967,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542862,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
508,
509,
8,
9,
55,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 22232,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2367,
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
1032,
1033,
1034,
8,
9,
214,
215,
49
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3548322,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9
]
},
{
"tb": 288,
"tbk": 1,
"tl": 496,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2879,
2880,
2881,
2882,
2883,
2884,
2885,
2886,
2887,
2888,
2889,
2890,
2891,
2892,
2893,
1564,
1565,
1566,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 3840,
"tbk": 4,
"tl": 3908725,
"mb": 2048,
"mbk": 1,
"gb": 2048,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2390,
2391,
2894,
2895,
1215,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 42605049,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
220,
221,
486,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 189154,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1705,
1706,
1707,
1708,
1709,
10,
11
]
},
{
"tb": 408,
"tbk": 1,
"tl": 1874,
"mb": 408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2896,
2897,
2898,
2899,
2900,
2901,
2902,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 122880,
"tbk": 30,
"tl": 10270,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
536,
533,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 528175,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2903,
2904,
2905,
2906,
2907,
2908,
2909,
2910,
2911,
2912,
2913,
2914,
2915,
2916,
2917,
2918,
2919,
2920,
1272,
1273,
1274,
48,
49
]
},
{
"tb": 1392,
"tbk": 12,
"tl": 81,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
2921,
2922,
2923,
1647,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2431,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1465,
1466,
8,
9,
10,
11
]
},
{
"tb": 4080,
"tbk": 10,
"tl": 18444,
"mb": 408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2896,
2897,
2898,
2899,
2900,
2901,
2902,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 960,
"tbk": 4,
"tl": 3543706,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
1631,
2924,
2925,
2926,
2927,
2928,
2929,
55,
37
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 149,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
534,
536,
533,
535
]
},
{
"tb": 1,
"tbk": 1,
"tl": 183,
"mb": 1,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2930,
2931,
2932,
2933,
2934,
2935,
2936,
2937,
2938,
2939,
2940,
2941,
2942,
2943,
2944,
2945,
2946,
2947,
2948,
2949,
2950,
2951,
2952,
2953,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2737,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 704,
"tbk": 11,
"tl": 10999,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
1620,
1621,
667,
668,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9024,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185469,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
228,
219,
228,
219,
220,
221,
222
]
},
{
"tb": 3276800,
"tbk": 20,
"tl": 18067680,
"mb": 2621440,
"mbk": 10,
"gb": 2621440,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1384,
1385,
1386,
1387,
1388,
1389,
1390,
1391,
1392,
1393,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585,
37
]
},
{
"tb": 245760,
"tbk": 60,
"tl": 12028286,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2413,
2414,
2415,
2416,
2417,
2418,
2419,
2420,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 160,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2954,
2955,
2956,
2957,
2958,
2959,
2960,
2961,
2962,
2963,
2964,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4262314,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2965,
2966,
2967,
2968,
2969,
2970,
1541,
1542,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892693,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
229,
228,
219,
218,
219,
220,
221
]
},
{
"tb": 120,
"tbk": 1,
"tl": 66,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
222,
11
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 15669,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
534,
536,
533,
535
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542948,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222464,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
161,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9054,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543006,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
230,
231,
8,
9,
55,
37
]
},
{
"tb": 480,
"tbk": 10,
"tl": 8735,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
2209,
2210,
2211,
2212,
2213,
2214,
352,
353,
354,
8,
9,
10,
11
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 528070,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2981,
2982,
2983,
2984,
2985,
2986,
2987,
495,
486,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521685,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542881,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
2449,
2450,
8,
9,
55,
37
]
},
{
"tb": 54,
"tbk": 2,
"tl": 35,
"mb": 36,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2246,
2247,
2248,
2249,
2250,
2251,
2252,
2253,
2254,
2988,
2989,
2990,
2991,
2992,
2993,
2994,
2995,
2996,
2997,
2998,
2999,
3000,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 6048,
"tbk": 6,
"tl": 1776101,
"mb": 3072,
"mbk": 1,
"gb": 3072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
3001,
3002,
3003,
3004,
3005,
3006,
3007,
3008,
3009,
3010,
2496,
2497,
2498,
37
]
},
{
"tb": 2112,
"tbk": 11,
"tl": 38979082,
"mb": 2112,
"mbk": 11,
"gb": 2112,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
3011,
3012,
3013,
3014,
2513,
2514,
2515,
762,
763,
55,
37
]
},
{
"tb": 528,
"tbk": 11,
"tl": 38979184,
"mb": 528,
"mbk": 11,
"gb": 528,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1532,
1533,
762,
763,
55,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446351,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
228,
219,
228,
219,
220,
221
]
},
{
"tb": 696,
"tbk": 6,
"tl": 42,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
3015,
3016,
3017,
3018,
2035,
2036,
2037,
2038,
2039,
2040,
3019,
3020,
3021,
3022,
3023,
3024,
3025
]
},
{
"tb": 504,
"tbk": 1,
"tl": 3071184,
"mb": 504,
"mbk": 1,
"gb": 504,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3026,
3027,
3028,
3029,
3030,
3031,
3032,
3033,
1910,
1911,
1912,
1913,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907026,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
2757,
2758,
2759,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 576,
"tbk": 9,
"tl": 8125335,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521737,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
229,
228,
219,
218,
219,
220,
221,
486
]
},
{
"tb": 1806336,
"tbk": 441,
"tl": 352360,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
534,
535,
537,
537,
534,
537
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 534,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8637,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521587,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8943,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9014,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8841,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169596,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 49152,
"tbk": 12,
"tl": 28110,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
537,
536,
533,
537,
670,
671,
672
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806959,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
628,
161,
163,
162,
163
]
},
{
"tb": 3072,
"tbk": 3,
"tl": 1,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
1752,
2772,
2773,
2774,
2775
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903575,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
783,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 1307,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
535,
537,
536
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2627,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
398,
399,
8,
9,
10,
11
]
},
{
"tb": 1049088,
"tbk": 8,
"tl": 160456,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
3034,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2395,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
2449,
2450,
8,
9,
10,
11
]
},
{
"tb": 1632,
"tbk": 1,
"tl": 19067,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
1666,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2436,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958682,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
3035,
3036,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 391166,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
534,
535,
534,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 7536640,
"tbk": 46,
"tl": 83629554,
"mb": 6029312,
"mbk": 23,
"gb": 6029312,
"gbk": 23,
"eb": 0,
"ebk": 0,
"fs": [
3037,
3038,
3039,
3040,
3041,
3042,
3043,
3044,
106,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2411,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1742,
1743,
8,
9,
10,
11
]
},
{
"tb": 21,
"tbk": 1,
"tl": 6,
"mb": 21,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
734,
735,
736,
737,
738,
739,
740,
1881,
1882,
1883,
1884,
3045,
3046,
3047,
3048,
3049,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521689,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
1159,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 130816,
"tbk": 18,
"tl": 4049,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
3050,
3051,
3052,
3053,
984,
985,
986,
987,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4741577,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3054,
3055,
3056,
3057,
3058,
3059,
3060,
3061,
3062,
3063
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892802,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
229,
228,
219
]
},
{
"tb": 98304,
"tbk": 24,
"tl": 3017,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840
]
},
{
"tb": 640,
"tbk": 10,
"tl": 133,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3064,
3065,
1920,
1921,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543051,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806950,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 131136,
"tbk": 1,
"tl": 17010,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
806,
1589,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1635879,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3066,
3067,
3068,
3069,
3070,
3071,
3072,
3073,
1923,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083951,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1154,
1155,
1156,
1157,
1158,
1159,
220,
221,
486,
49
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 80038,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
537,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370894,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2348,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
53,
54,
8,
9,
10,
11
]
},
{
"tb": 24,
"tbk": 1,
"tl": 879,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
3079,
3080,
11
]
},
{
"tb": 65408,
"tbk": 9,
"tl": 706,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
1476,
571,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 655680,
"tbk": 10,
"tl": 181594,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
806,
1589,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 774144,
"tbk": 189,
"tl": 492235,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
534,
534,
534,
534,
534,
534
]
},
{
"tb": 384,
"tbk": 6,
"tl": 5440861,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
3081,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 9568,
"tbk": 92,
"tl": 7273,
"mb": 624,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3089,
3090,
3091,
3092,
3093,
3094,
3095,
3096,
3097,
992,
668,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170827,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083655,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 699000,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3098,
3099,
3100,
3101,
3102,
3103,
3104,
3105,
3106,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 7939,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 65408,
"tbk": 9,
"tl": 3158,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
3107,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269
]
},
{
"tb": 1584,
"tbk": 2,
"tl": 0,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
485,
11
]
},
{
"tb": 110880,
"tbk": 220,
"tl": 224127,
"mb": 11088,
"mbk": 22,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1438,
1439,
1440,
1441,
1442,
1443,
1444,
1445,
1446,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 35232,
"tbk": 11,
"tl": 63461,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3108,
3109,
3110,
3111,
3112,
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
3124,
442,
443,
444,
3125,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 28672,
"tbk": 7,
"tl": 461,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
535,
537,
537
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958239,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1467,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521731,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
229,
228,
219,
218,
219,
220,
221,
486
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 2945589,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
3135,
3136,
3137,
3138,
3139,
3140,
3141,
3142,
3143,
3144,
814,
815,
816,
37
]
},
{
"tb": 709632,
"tbk": 693,
"tl": 17254,
"mb": 8192,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
425,
426,
427,
428,
429,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623
]
},
{
"tb": 48,
"tbk": 1,
"tl": 41,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3145,
3146,
3147,
3148,
3149,
3150,
3151,
2071,
2072,
2073,
495,
486,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958006,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
3152,
3153,
3154,
1933,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903486,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
161,
163,
161,
163
]
},
{
"tb": 196608,
"tbk": 3,
"tl": 8837858,
"mb": 196608,
"mbk": 3,
"gb": 196608,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
2350,
2351,
2352,
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
3141,
3142,
3143,
3144,
814,
815,
816,
37
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2920156,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
561,
562,
563,
564,
565,
566,
567,
568,
569,
570,
571,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8887,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 256,
"tbk": 16,
"tl": 75835638,
"mb": 256,
"mbk": 16,
"gb": 256,
"gbk": 16,
"eb": 256,
"ebk": 16,
"fs": [
3155,
3156,
3157,
3158,
3159,
1984,
1985,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542929,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9078,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 2976,
"tbk": 5,
"tl": 186832,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
538,
539,
540,
541,
542,
543,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8535,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 1504384,
"tbk": 207,
"tl": 40249,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
3160,
106,
11
]
},
{
"tb": 1376928,
"tbk": 21,
"tl": 409999,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1967,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 16256,
"tbk": 7,
"tl": 4738296,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 8192,
"ebk": 1,
"fs": [
2451,
2452,
2453,
2454,
2455,
2456,
2457,
3161,
3162,
3163,
3164,
3165,
2463,
2464,
2465,
2466,
200,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
442,
443,
444
]
},
{
"tb": 172032,
"tbk": 42,
"tl": 4606,
"mb": 8192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9022,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 65408,
"tbk": 9,
"tl": 2345,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
1476,
1589,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 1632,
"tbk": 1,
"tl": 20866,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
665,
1922,
1923,
37
]
},
{
"tb": 576,
"tbk": 9,
"tl": 8125353,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 1835008,
"tbk": 448,
"tl": 49066,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
533,
535,
537,
537,
534,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 172032,
"tbk": 42,
"tl": 5221,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840
]
},
{
"tb": 3612672,
"tbk": 2688,
"tl": 53251,
"mb": 18432,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
533,
534,
535,
537,
537,
536
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 12,
"mb": 1152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2238,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1742,
1743,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 8803,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 2112,
"tbk": 11,
"tl": 46904562,
"mb": 2112,
"mbk": 11,
"gb": 2112,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
2509,
2510,
2511,
2512,
2513,
2514,
2515,
762,
763,
214,
215,
49
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3166,
3167,
3168,
3169,
3170,
3171,
486,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370904,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1064,
1065,
1066,
1067,
1068,
228,
1159,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542900,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1465,
1466,
8,
9,
55,
37
]
},
{
"tb": 1632,
"tbk": 1,
"tl": 17306,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
806,
571,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370934,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
229,
228,
219,
218,
219,
220,
221,
222
]
},
{
"tb": 262016,
"tbk": 11,
"tl": 1560,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
3172,
11
]
},
{
"tb": 1376256,
"tbk": 21,
"tl": 61859290,
"mb": 1376256,
"mbk": 21,
"gb": 1376256,
"gbk": 21,
"eb": 0,
"ebk": 0,
"fs": [
2350,
2351,
2352,
2353,
2354,
2355,
2356,
2357,
2358,
2359,
2360,
2361,
2362,
3173,
3174,
3175,
3176,
1801,
1802,
1803,
1804,
1805,
1806,
1807,
1808,
1809,
1810,
1811,
1812,
1813,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892815,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
218,
229,
228,
219
]
},
{
"tb": 2976,
"tbk": 5,
"tl": 187224,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
538,
539,
540,
541,
542,
543,
124,
125,
126,
127,
128,
129,
130,
131,
181,
182,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543020,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907019,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
3177,
3178,
3179,
3180,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 448,
"tbk": 1,
"tl": 1610983,
"mb": 448,
"mbk": 1,
"gb": 448,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3181,
3182,
3183,
3184,
3185,
3186,
3187,
1727,
1728,
1729,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806977,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
628,
161,
163,
162,
163
]
},
{
"tb": 576,
"tbk": 9,
"tl": 8125453,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222883,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
163,
783,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 3040,
"tbk": 2,
"tl": 597673,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 1520,
"ebk": 1,
"fs": [
1370,
1371,
1372,
1373,
3188,
3189,
3190,
3191,
3192,
3193,
3194,
3195,
3196,
3197,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2380,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 4752,
"tbk": 6,
"tl": 49,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2031,
2032,
2033,
3018,
2035,
2036,
2037,
2038,
2039,
2040,
3019,
3020,
3021,
3022,
3023,
3024,
3025,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2440,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903401,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 1206,
"tbk": 1,
"tl": 4738278,
"mb": 1206,
"mbk": 1,
"gb": 1206,
"gbk": 1,
"eb": 1206,
"ebk": 1,
"fs": [
3198,
3199,
3200,
3201,
3202,
3203,
3204,
2463,
2464,
2465,
2466,
200,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807060,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
162,
162,
628
]
},
{
"tb": 128,
"tbk": 1,
"tl": 97254,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3205,
3206,
3207,
3208,
3209,
3210,
3211,
3212,
3213,
3214,
160,
37
]
},
{
"tb": 480,
"tbk": 10,
"tl": 1850983,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
219,
220,
221,
222,
11
]
},
{
"tb": 3096576,
"tbk": 756,
"tl": 1807750,
"mb": 40960,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
537,
536,
533,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 288,
"tbk": 1,
"tl": 163,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1334,
1335,
1336,
1337,
1338,
1339,
1340,
3215,
3216,
3217,
3218,
3219,
3220,
3221,
3222,
481,
482,
483,
484,
720,
49
]
},
{
"tb": 1966080,
"tbk": 480,
"tl": 1530795,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8111,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 272,
"tbk": 1,
"tl": 3542796,
"mb": 272,
"mbk": 1,
"gb": 272,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
823,
824,
55,
37
]
},
{
"tb": 15,
"tbk": 1,
"tl": 0,
"mb": 15,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
734,
735,
736,
737,
738,
739,
740,
741,
742,
743,
744,
745,
3223,
3224,
3225,
3226,
3227,
3228,
3229,
1984,
1985,
197,
198,
199,
200
]
},
{
"tb": 960,
"tbk": 4,
"tl": 189133,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
1631,
2924,
2925,
2926,
2927,
2928,
2929,
10,
11
]
},
{
"tb": 81920,
"tbk": 1,
"tl": 112,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3230,
3231,
3232,
3233,
3234,
3235,
3236,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
45,
46,
47,
1275,
11
]
},
{
"tb": 32736,
"tbk": 10,
"tl": 108,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
3259,
3260,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 832,
"tbk": 2,
"tl": 11,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3261,
3262,
3263,
3264,
3265,
3266,
3267,
1513,
1514,
1515,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 4752,
"tbk": 6,
"tl": 2,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
701,
702,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
485,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8086,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7212990,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2630,
2631,
2632,
2633,
3268,
3269,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956722,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
2862,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3729768,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3270,
3271,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3281,
3282,
3283,
3284,
1829,
1830,
1831,
495,
222,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083551,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 475294,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3285,
3286,
3287,
3288,
3289,
3290,
1215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 486,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
3299,
3300,
8,
9,
55,
37
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20738991,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2614,
2615,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446388,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
228,
219,
228
]
},
{
"tb": 1440288,
"tbk": 17,
"tl": 537063,
"mb": 261984,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3301,
3302,
3303,
3304,
3305,
3306,
3307,
3308,
3309,
3310,
3309,
3311,
668,
37
]
},
{
"tb": 37536,
"tbk": 23,
"tl": 472056,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
2291,
1215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543131,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 6881280,
"tbk": 42,
"tl": 62539485,
"mb": 5505024,
"mbk": 21,
"gb": 5505024,
"gbk": 21,
"eb": 0,
"ebk": 0,
"fs": [
1934,
1935,
1936,
1937,
1938,
1939,
1940,
1941,
1942,
1943,
1944,
1945,
1946,
2730,
2731,
2732,
2733,
2177,
2178,
2179,
2180,
2181,
2182,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 3543239,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
498,
499,
500,
501,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2398,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9099,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542893,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
2776,
2777,
8,
9,
55,
37
]
},
{
"tb": 34272,
"tbk": 21,
"tl": 408080,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
1954,
1955,
1956,
1957,
1958,
1959,
1960,
1961,
1962,
1963,
1964,
1965,
1966,
1967,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958543,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
2734,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2164,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1879,
1880,
8,
9,
214,
215,
49
]
},
{
"tb": 4096,
"tbk": 2,
"tl": 1094,
"mb": 4096,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3312,
3313,
3314,
3315,
3316,
3317,
3318,
3319,
3320,
3321,
3322,
3323,
3324,
49
]
},
{
"tb": 327680,
"tbk": 2,
"tl": 3557747,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3325,
3326,
3327,
3328,
3329,
3330,
3331,
3332,
11
]
},
{
"tb": 524288,
"tbk": 2,
"tl": 4478823,
"mb": 524288,
"mbk": 2,
"gb": 524288,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
3333,
3334,
3335,
3336,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3346,
2232,
2233,
2234,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2335,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
508,
509,
8,
9,
10,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903400,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 1584,
"tbk": 2,
"tl": 0,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
684,
685,
686,
687,
688,
689,
690,
691,
692,
693,
694,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
720,
49
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7213056,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1683,
1684,
1685,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 906965,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2091,
2092,
2093,
2094,
2095,
2096,
2097,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 72,
"tbk": 1,
"tl": 512,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3347,
3348,
3349,
3350,
3351,
3352,
3324,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 24625,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
8,
9,
10,
11
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 10690,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840
]
},
{
"tb": 2097152,
"tbk": 512,
"tl": 168049,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
537,
533,
534,
535,
534,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 19,
"mb": 1152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1567,
1568,
1569,
1570,
1571,
1572,
1573,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
2545,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903250,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 491520,
"tbk": 120,
"tl": 68806,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
534,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840,
841,
842,
843,
844
]
},
{
"tb": 24192,
"tbk": 6,
"tl": 153201,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
3353,
3354,
3355,
3356,
992,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543125,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543043,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7212911,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
3357,
3358,
3359,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 258048,
"tbk": 63,
"tl": 8111,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
533,
535,
533,
535,
670,
671,
672
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20739065,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2144,
2145,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1876,
1877,
1878,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 826,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
535,
537,
534
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1149,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2245,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
2776,
2777,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2400,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
2449,
2450,
8,
9,
10,
11
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2879,
2880,
2881,
2882,
2883,
2884,
2885,
1556,
1557,
1558,
1559,
1560,
1561,
1562,
1563,
1564,
1565,
1566,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 480,
"tbk": 10,
"tl": 67670,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1694,
1695,
1696,
1697,
1698,
1699,
1700,
1701,
1702,
1703,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907004,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1661,
1662,
1663,
1664,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 336,
"tbk": 1,
"tl": 4558,
"mb": 336,
"mbk": 1,
"gb": 336,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3360,
3361,
3362,
3363,
3364,
3365,
3366,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 16256,
"tbk": 7,
"tl": 4738379,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 8192,
"ebk": 1,
"fs": [
2451,
2452,
2453,
2454,
2455,
2456,
2457,
3367,
3368,
3369,
3370,
3371,
2463,
2464,
2465,
2466,
200,
2467,
2468,
2469,
2470,
2471,
2472,
2473,
2474,
2475,
2476,
2477,
2478,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
442,
443,
444
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 4263933,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1234,
1235,
1236,
1237,
762,
763,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 809,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
3299,
3300,
8,
9,
214,
215,
49
]
},
{
"tb": 576,
"tbk": 12,
"tl": 14192476,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554
]
},
{
"tb": 148,
"tbk": 1,
"tl": 46,
"mb": 148,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
720,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521699,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 1373568,
"tbk": 189,
"tl": 41472,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
1995,
1996,
1997,
1998,
1999,
2000,
2001,
2002,
2003,
2004,
2005,
2006,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 640,
"tbk": 10,
"tl": 76780,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2277,
2278,
2279,
2280,
2281,
2282,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
1701,
1702,
1703,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222911,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
163,
783,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2300,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 436,
"tbk": 1,
"tl": 63,
"mb": 436,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2431,
2432,
2433,
2434,
2435,
2436,
2437,
2438,
2439,
2440,
2441,
2442,
2443,
1485,
1486,
1487,
1122,
1123,
1124,
484,
720,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903497,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
161,
163,
161
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 4262873,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
214,
215,
49
]
},
{
"tb": 3264,
"tbk": 4,
"tl": 14,
"mb": 816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
2153,
2154,
1647,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2436,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1465,
1466,
8,
9,
10,
11
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3548503,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083830,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
219,
220,
221,
486
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543006,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1216,
1217,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2603,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1216,
1217,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169516,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 2096128,
"tbk": 88,
"tl": 17474,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
3380,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 88,
"tbk": 1,
"tl": 1658,
"mb": 88,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1096,
1097,
1098,
1099,
1100,
1101,
1102,
1103,
1104,
1105,
1106,
214,
215,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 1850938,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
220,
221,
222,
11
]
},
{
"tb": 709632,
"tbk": 693,
"tl": 19022,
"mb": 6144,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
425,
426,
427,
428,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623
]
},
{
"tb": 456,
"tbk": 1,
"tl": 1895,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3381,
3382,
3383,
3384,
3385,
3386,
3387,
3388,
992,
668,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083989,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
3389,
3390,
3391,
3392,
3393,
1157,
1158,
1159,
220,
221,
486,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2571,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2164,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1879,
1880,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170763,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 202752,
"tbk": 2816,
"tl": 693946,
"mb": 1080,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3394,
3395,
3396,
3397,
3398,
3399,
3400,
3401,
3402,
3403,
3404,
3405,
2772,
2773,
2774,
2775,
3406,
3407,
3408,
3409,
3410,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957374,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2860,
2861,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 3603475,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
3411,
3412,
106,
11
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9959186,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
3413,
3414,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8063,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 640,
"tbk": 10,
"tl": 76477,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
1585,
1586,
1587,
1588,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543121,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542942,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170670,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543055,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 1720320,
"tbk": 21,
"tl": 27160,
"mb": 1720320,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3230,
3231,
3232,
3233,
3234,
3235,
3236,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
45,
46,
47,
2835,
2836,
2837,
2838,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 1632,
"tbk": 2,
"tl": 7,
"mb": 816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
3419,
3420,
3018,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3751,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1847,
1848,
1849,
1850,
1851,
1852,
1853,
1854,
1855,
1856,
1857,
1858,
1859,
1860,
1861,
442,
443,
444,
3421,
1145,
1146,
1147,
1148,
1149,
1150,
1151,
1152,
1153,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 580309,
"mb": 28672,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
534,
535,
536,
533,
537,
670,
671,
672
]
},
{
"tb": 2883584,
"tbk": 704,
"tl": 76533,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
535,
534,
534,
535,
536,
533,
537,
670,
671,
672
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3548484,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4263773,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1092,
1093,
1094,
1095,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2191,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8919,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446395,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
218,
228,
219,
228
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 635167,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
1477,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 561416,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
1477,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543135,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2320,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 655680,
"tbk": 10,
"tl": 175984,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
806,
571,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903444,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 258359,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
533,
534,
535,
537,
536,
533
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3422,
3423
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2376,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958770,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
454,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 288,
"tbk": 6,
"tl": 7096183,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8146,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 9571,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
534,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2751,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2561,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260871,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
228,
219,
228,
219,
220,
221,
486
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 169920,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3424,
3425,
3426,
3427,
3428,
3429,
3430,
1760,
11
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 106362,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
1986,
1987,
1988,
1989,
1990,
1991,
1992,
1993,
1994,
242,
2499,
106
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892735,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
229,
228,
219,
218,
219
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3431,
3432
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8586,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903530,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
162,
162,
162,
161
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370787,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740684,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
2401,
2402,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083681,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
218,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 786432,
"tbk": 3,
"tl": 6726106,
"mb": 786432,
"mbk": 3,
"gb": 786432,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
3007,
3008,
3009,
3010,
2496,
2497,
2498,
37
]
},
{
"tb": 368,
"tbk": 1,
"tl": 1505,
"mb": 368,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3433,
3434,
3435,
3436,
3437,
3438,
3439,
3440,
992,
668,
37
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740366,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2628,
2629,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 294008,
"tbk": 2827,
"tl": 1332,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1620,
3441,
667,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542876,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
855,
856,
8,
9,
55,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 22185,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2598,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1216,
1217,
8,
9,
10,
11
]
},
{
"tb": 65568,
"tbk": 1,
"tl": 20961,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2193,
2194,
2195,
2196,
2197,
2198,
1922,
1923,
37
]
},
{
"tb": 262016,
"tbk": 11,
"tl": 3005,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
1383,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 23188,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 2235631,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3442,
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3450,
3451,
37
]
},
{
"tb": 616,
"tbk": 11,
"tl": 146,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
759,
760,
761,
762,
763,
214,
215,
49
]
},
{
"tb": 768,
"tbk": 16,
"tl": 3954,
"mb": 336,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3452,
3453,
3454,
3455,
3456,
3457,
3458,
3459,
3460,
3461,
3462,
3463,
3464,
3465,
3466,
3467,
3468,
3469,
3470,
3471,
3472,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 2040,
"tbk": 8,
"tl": 32,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1478,
1479,
1480,
1481,
1482,
1483,
1484,
1485,
1486,
1487,
1122,
1123,
1124,
484,
485,
11
]
},
{
"tb": 576,
"tbk": 9,
"tl": 8125420,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1213,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
181,
182,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9152,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480504,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
219,
220,
221,
222
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958080,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
1930,
1931,
1932,
1933,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222552,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185472,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
228,
219,
228,
219,
220,
221,
222
]
},
{
"tb": 16320,
"tbk": 10,
"tl": 174953,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
806,
571,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542886,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1436,
1437,
8,
9,
55,
37
]
},
{
"tb": 523264,
"tbk": 72,
"tl": 21264,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
3473,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 552,
"tbk": 1,
"tl": 169917,
"mb": 552,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1035,
1036,
1037,
1038,
1039,
1040,
1005,
1760,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8771,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1814,
1815,
1816,
1817,
1818,
1819,
1820,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2372,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1879,
1880,
8,
9,
10,
11
]
},
{
"tb": 640,
"tbk": 10,
"tl": 76735,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2765,
2766,
2767,
2768,
2281,
2282,
2283,
2284,
2285,
2286,
2287,
2288,
2289,
2290,
1701,
1702,
1703,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 402113,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
534,
535,
537,
534,
537,
670,
671,
672
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 519747,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
1374,
1375,
1376,
1377,
1378,
1379,
1380,
1381,
1382,
2499,
106,
11
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3547643,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907064,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
3474,
3475,
3476,
3477,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7213016,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2687,
2688,
2689,
2690,
3268,
3269,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2158,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1436,
1437,
8,
9,
214,
215,
49
]
},
{
"tb": 864,
"tbk": 4,
"tl": 50,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
3478,
3479,
3480,
3481,
3482,
3483,
3484,
3485,
3486,
3487,
3488,
3489,
3490,
3491,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
871,
872,
873,
874,
875,
876,
877,
878
]
},
{
"tb": 192,
"tbk": 4,
"tl": 7945,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480434,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446416,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
218,
218,
228
]
},
{
"tb": 576,
"tbk": 2,
"tl": 39,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
862,
863,
864,
865,
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 2,
"tbk": 1,
"tl": 38,
"mb": 2,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2314,
2315,
2316,
2317,
2318,
2319,
495,
222,
11
]
},
{
"tb": 120,
"tbk": 1,
"tl": 60,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2971,
2972,
2973,
2974,
2975,
2976,
2977,
2978,
2979,
2980,
486,
49
]
},
{
"tb": 1376256,
"tbk": 21,
"tl": 73134578,
"mb": 1376256,
"mbk": 21,
"gb": 1376256,
"gbk": 21,
"eb": 0,
"ebk": 0,
"fs": [
2903,
2904,
2905,
2906,
2907,
2908,
2909,
2910,
2911,
2912,
2913,
2914,
2915,
2916,
2917,
2918,
2919,
2920,
1272,
1273,
1274,
2835,
2836,
2837,
2838,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 187436,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
10,
11
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958038,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
3152,
3153,
3154,
1933,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2375,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
59,
60,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542890,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1742,
1743,
8,
9,
55,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222653,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515
]
},
{
"tb": 241280,
"tbk": 772,
"tl": 2861,
"mb": 728,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1620,
2421,
667,
668,
37
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 188835,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
533,
534,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 1507328,
"tbk": 23,
"tl": 83705380,
"mb": 1507328,
"mbk": 23,
"gb": 1507328,
"gbk": 23,
"eb": 0,
"ebk": 0,
"fs": [
3492,
3493,
3494,
3495,
3496,
3497,
3498,
3499,
3500,
3501,
106,
11
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2941965,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3502,
3503,
3504,
3505,
3506,
3507,
3508,
3337,
3338,
3339,
3340,
3341,
3342,
3343,
3344,
3345,
3346,
2232,
2233,
2234,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4262915,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1282,
1283,
8,
9,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903439,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155
]
},
{
"tb": 3559816,
"tbk": 26193,
"tl": 893308,
"mb": 3224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1041,
1042,
1043,
1044,
1045,
1046,
1047,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
442,
443,
444,
901,
902,
903,
904,
905,
906,
907,
908,
909,
910,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 288,
"tbk": 6,
"tl": 13339460,
"mb": 288,
"mbk": 6,
"gb": 144,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
218,
218,
218,
218,
218,
218,
218,
218
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543024,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8916,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 1507328,
"tbk": 23,
"tl": 83643383,
"mb": 1507328,
"mbk": 23,
"gb": 1507328,
"gbk": 23,
"eb": 0,
"ebk": 0,
"fs": [
3509,
3510,
3511,
3512,
3513,
3514,
3515,
3516,
3517,
3518,
106,
11
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1327720,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1590,
1591,
1592,
1593,
1594,
1595,
1596,
928,
929,
930,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 1072,
"tbk": 1,
"tl": 204,
"mb": 1072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
3519,
3520,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
720
]
},
{
"tb": 528,
"tbk": 11,
"tl": 42772,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1532,
1533,
762,
763,
214,
215,
49
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 2235765,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3442,
3443,
3444,
3445,
3446,
3447,
3448,
3449,
3521,
3522,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957864,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
3523,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542910,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1436,
1437,
8,
9,
55,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807067,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
162,
162,
628
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7212931,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
3357,
3358,
3359,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 2016,
"tbk": 1,
"tl": 410367,
"mb": 2016,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3524,
3525,
3526,
3527,
3528,
3529,
3530,
1962,
1963,
1964,
1965,
1966,
1967,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 655360,
"tbk": 10,
"tl": 9649928,
"mb": 655360,
"mbk": 10,
"gb": 655360,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929,
930,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170709,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1852,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3531,
3532,
3533,
3534,
3535,
3536,
3537,
1610,
1611,
1612,
214,
215,
49
]
},
{
"tb": 14080,
"tbk": 176,
"tl": 23993,
"mb": 640,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3538,
3539,
3540,
3541,
3542,
3543,
3544,
3545,
3546,
3547,
3548,
3549,
3550,
3551,
3552,
3553,
3554,
3555,
3556,
3557,
3558,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 2358,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
535,
533,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 258048,
"tbk": 63,
"tl": 7673,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
533,
535,
533,
535
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 55993,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
535,
537,
534,
537
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222278,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740213,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
2157,
2158,
2159,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 768,
"tbk": 16,
"tl": 2470,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3559,
3560,
3561,
3562,
3563,
3564,
3565,
3566,
3567,
3568,
3569,
3570,
3571,
3572,
3573,
3574,
3575,
3576,
3577,
3578,
3579,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 224,
"tbk": 3,
"tl": 48,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
2500,
2501,
481,
482,
483,
484,
720,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 1850895,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
220,
221,
222,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892834,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
218,
218,
229,
228
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2439,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1465,
1466,
8,
9,
10,
11
]
},
{
"tb": 960,
"tbk": 4,
"tl": 4264249,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
1631,
2924,
2925,
2926,
2927,
2928,
2929,
214,
215,
49
]
},
{
"tb": 576,
"tbk": 2,
"tl": 275,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2816,
2817,
2818,
2819,
2820,
2821,
2822,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
485,
11
]
},
{
"tb": 524544,
"tbk": 8,
"tl": 160585,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
3034,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958155,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
2686,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903420,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2251,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1465,
1466,
8,
9,
214,
215,
49
]
},
{
"tb": 288,
"tbk": 1,
"tl": 162,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1334,
1335,
1336,
1337,
1338,
1339,
1340,
3215,
3216,
3217,
3218,
3219,
3220,
3221,
3222,
481,
482,
483,
484,
485,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2642,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 480,
"tbk": 10,
"tl": 9650281,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1225,
1226,
1227,
1228,
1229,
1230,
1231,
639,
640,
641,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 55608,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
3580,
3581,
3582,
3583,
3584,
3585,
3586,
3587,
3588,
3589,
668,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8764,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 824,
"tbk": 2,
"tl": 210,
"mb": 824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
3590,
3591,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96
]
},
{
"tb": 72,
"tbk": 1,
"tl": 582,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3347,
3348,
3349,
3350,
3351,
3352,
3592,
11
]
},
{
"tb": 786048,
"tbk": 33,
"tl": 8151,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
2726,
2727,
2728,
2729,
1947,
1948,
1949,
1950,
1262,
1263,
1264,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543021,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
398,
399,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2344,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1216,
1217,
8,
9,
214,
215,
49
]
},
{
"tb": 112,
"tbk": 1,
"tl": 2362,
"mb": 112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
773,
774,
775,
776,
777,
778,
779,
780,
781,
782,
10,
11
]
},
{
"tb": 480,
"tbk": 10,
"tl": 9573459,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1225,
1226,
1227,
1228,
1229,
1230,
1231,
639,
640,
641,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 64,
"tbk": 1,
"tl": 186755,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
132,
133,
10,
11
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222621,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
161,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 617,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
534,
534,
534,
536
]
},
{
"tb": 327680,
"tbk": 5,
"tl": 13622,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3593,
3594,
3595,
3596,
3597,
3598,
3599,
3600,
3601,
3602,
3603,
668,
37
]
},
{
"tb": 1632,
"tbk": 1,
"tl": 16973,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
806,
1589,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 10838016,
"tbk": 2646,
"tl": 312091,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 528095,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3270,
3271,
3272,
3273,
3274,
3275,
3276,
3277,
3278,
3279,
3280,
3281,
3282,
3283,
3284,
1829,
1830,
1831,
495,
486,
49
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446400,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
218,
228,
219
]
},
{
"tb": 336,
"tbk": 1,
"tl": 2944969,
"mb": 336,
"mbk": 1,
"gb": 336,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3604,
3605,
3606,
3607,
3608,
3609,
3610,
949,
950,
951,
952,
953,
954,
955,
956,
957,
958,
959,
960,
961,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2231,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
855,
856,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8894,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 7994,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260865,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
228,
219,
228,
219,
220,
221,
486
]
},
{
"tb": 224,
"tbk": 3,
"tl": 174,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
3611,
3612,
1564,
1565,
1566,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 969,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3291,
3292,
3293,
3294,
3295,
3296,
3297,
3298,
3299,
3300,
8,
9,
10,
11
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2945930,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3613,
3614,
3615,
3616,
3617,
3618,
3619,
1811,
1812,
1813,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2568,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5723,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1404,
1405,
3620,
3621,
3622,
3623,
466,
467,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957645,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
1704,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 81920,
"tbk": 1,
"tl": 102,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3230,
3231,
3232,
3233,
3234,
3235,
3236,
3237,
3238,
3239,
3240,
3241,
3242,
3243,
3244,
3245,
3246,
45,
46,
47,
48,
49
]
},
{
"tb": 552,
"tbk": 1,
"tl": 170036,
"mb": 552,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1622,
1623,
1624,
1625,
1626,
1627,
1628,
1629,
1630,
1760,
11
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 14739,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
536,
533,
535,
534,
535
]
},
{
"tb": 2883584,
"tbk": 704,
"tl": 784764,
"mb": 32768,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
537,
534,
534,
535,
537,
536,
533,
537
]
},
{
"tb": 120,
"tbk": 1,
"tl": 188567,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3624,
3625,
3626,
3627,
3628,
3629,
3630,
668,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903524,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
162,
162,
161
]
},
{
"tb": 704,
"tbk": 11,
"tl": 10997,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
1620,
3441,
667,
668,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169607,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1485,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3531,
3532,
3533,
3534,
3535,
3536,
3537,
1610,
1611,
1612,
55,
37
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740597,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
3631,
3632,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6345,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
1585,
1586,
1587,
1588,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 7741440,
"tbk": 1890,
"tl": 209674,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
533,
536,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2307,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 147456,
"tbk": 1,
"tl": 1157,
"mb": 147456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2661,
2662,
2663,
2664,
2665,
3633,
3634,
3635,
49
]
},
{
"tb": 28672,
"tbk": 7,
"tl": 6058,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
534,
535,
537,
537,
534
]
},
{
"tb": 15600,
"tbk": 150,
"tl": 478,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3636,
3637,
3638,
3639,
3640,
3641,
3642,
3643,
3644,
3645,
992,
668,
37
]
},
{
"tb": 1966080,
"tbk": 480,
"tl": 183920,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
534,
535,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8994,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 3354624,
"tbk": 819,
"tl": 102520,
"mb": 32768,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
534,
534,
534,
534
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 2219,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
533,
534,
534,
534,
535
]
},
{
"tb": 1072,
"tbk": 1,
"tl": 214,
"mb": 1072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
3519,
3520,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
484,
485
]
},
{
"tb": 8064,
"tbk": 3,
"tl": 700177,
"mb": 4608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3646,
3647,
3648,
3649,
3650,
3651,
3652,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585,
37
]
},
{
"tb": 288,
"tbk": 1,
"tl": 0,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1334,
1335,
1336,
1337,
1338,
1339,
1340,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
481,
482,
483,
484,
485,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2843,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3291,
3292,
3293,
3294,
3295,
3653,
3654,
3655,
3656,
3657,
8,
9,
214,
215,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 42605093,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
219,
220,
221,
486,
49
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2944973,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3658,
3659,
3660,
3661,
3662,
3663,
3664,
959,
960,
961,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3156,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3291,
3292,
3293,
3294,
3295,
3653,
3654,
3655,
3656,
3657,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2648,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 170085,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
1631,
1632,
1633,
1634,
1635,
1760,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 189107,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3665,
3666,
3667,
3668,
3669,
3670,
3671,
3672,
3673,
3674,
3675,
969,
970,
971,
762,
763,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8177,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480677,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2444,
2445,
2446,
2447,
2448,
1157,
1158,
1159,
220,
221,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 906957,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
3676,
3677,
3678,
3679,
3680,
3681,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903463,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370892,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
1159,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2427,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9034,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907073,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
3682,
3683,
3684,
3685,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169543,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 131136,
"tbk": 1,
"tl": 21370,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
833,
834,
835,
836,
837,
838,
666,
667,
668,
37
]
},
{
"tb": 13680,
"tbk": 4,
"tl": 901209,
"mb": 7296,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3686,
3687,
3688,
3689,
3690,
3691,
3692,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 131136,
"tbk": 1,
"tl": 19181,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
1666,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 58,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3693,
3694,
3695,
3696,
3697,
3698,
3699,
3700,
3701,
3702,
3703,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 384,
"tbk": 6,
"tl": 5440816,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
3081,
3082,
3083,
3084,
3085,
3086,
3087,
3088,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 768,
"tbk": 16,
"tl": 2854,
"mb": 336,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3704,
3705,
3706,
3707,
3708,
3709,
3710,
3711,
3712,
3713,
3714,
3715,
3716,
3717,
3718,
3719,
3720,
3721,
3722,
3723,
3724,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903467,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543117,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 2112,
"tbk": 11,
"tl": 38979046,
"mb": 2112,
"mbk": 11,
"gb": 2112,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
2509,
2510,
2511,
2512,
2513,
2514,
2515,
762,
763,
55,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956799,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
3725,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 189458,
"mb": 32768,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
533,
534,
534,
534,
534,
535
]
},
{
"tb": 4980736,
"tbk": 1216,
"tl": 128478,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
533,
535,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 4264,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
535,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1312576,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2328,
2329,
2330,
2331,
2332,
2333,
2334,
2335,
2336,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9959224,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
3413,
3414,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 192,
"tbk": 1,
"tl": 298,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1218,
1219,
1220,
1221,
1222,
1223,
1224,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 7104,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
2209,
2210,
2211,
2212,
2213,
2214,
352,
353,
354,
8,
9,
214,
215,
49
]
},
{
"tb": 660,
"tbk": 66,
"tl": 5,
"mb": 10,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016,
2017,
2018,
2019,
2020,
2021,
2022,
2023,
2024,
2025,
2026,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2038,
2039,
2040,
3019,
3020,
3021,
3022,
3023,
3024,
3025,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2724,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892793,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
218,
229,
228,
219
]
},
{
"tb": 528,
"tbk": 11,
"tl": 46861953,
"mb": 528,
"mbk": 11,
"gb": 528,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
1413,
1414,
486,
49
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222402,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 576,
"tbk": 2,
"tl": 690,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3726,
3727,
3728,
3729,
3730,
3731,
3732,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957725,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
3152,
3153,
3154,
2769,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 6477952,
"tbk": 1732,
"tl": 26768318,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894,
895,
896,
897,
898,
899,
900,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903410,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 192,
"tbk": 1,
"tl": 187685,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9110,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2149,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
508,
509,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8029,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958325,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
2479,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 13654,
"mb": 8192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
537,
533,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 272,
"tbk": 1,
"tl": 1660,
"mb": 272,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
823,
824,
214,
215,
49
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 4284,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
533,
534,
534,
534,
534
]
},
{
"tb": 24,
"tbk": 1,
"tl": 116,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
1275,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2730,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 232,
"tbk": 2,
"tl": 23,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1655,
1656,
1657,
1658,
1659,
1660,
871,
872,
873,
874,
875,
876,
877,
878,
484,
485
]
},
{
"tb": 768,
"tbk": 16,
"tl": 75835894,
"mb": 768,
"mbk": 16,
"gb": 768,
"gbk": 16,
"eb": 768,
"ebk": 16,
"fs": [
3733,
3734,
3735,
3736,
3737,
3738,
1984,
1985,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1751
]
},
{
"tb": 96,
"tbk": 1,
"tl": 699190,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3739,
3740,
3741,
3742,
3743,
3744,
3745,
3746,
3747,
3748,
37
]
},
{
"tb": 8192,
"tbk": 8,
"tl": 261,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
2430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 4732677,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3749,
3750,
3751,
3752,
3753,
3754,
3755,
1751
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9045,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7212875,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
2275,
2276,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 161280,
"tbk": 45,
"tl": 384192,
"mb": 92160,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3108,
3109,
3110,
3111,
3112,
3113,
3114,
3115,
3116,
3117,
3118,
3119,
3120,
3121,
3122,
3123,
3124,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 1966080,
"tbk": 480,
"tl": 58923,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 1105789,
"mb": 36864,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
537,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3542859,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1282,
1283,
8,
9,
55,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480284,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 192,
"tbk": 1,
"tl": 53,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1234,
1235,
1597,
1598,
1599,
8,
9,
55,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446379,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
228,
219,
228,
219
]
},
{
"tb": 6144,
"tbk": 6,
"tl": 237,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
2430,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
1752
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892768,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
218,
229,
228,
219,
218
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956764,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
3725,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 5120,
"tbk": 5,
"tl": 163,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
2430,
430,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 524032,
"tbk": 22,
"tl": 5451,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
2726,
2727,
2728,
2729,
2691,
2692,
2693,
2694,
2126,
2127,
2128,
2129,
2130,
2131,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36
]
},
{
"tb": 144,
"tbk": 12,
"tl": 245,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2605,
2606,
2607,
2608,
2609,
2610,
2034,
2035,
2036,
2037,
2038,
2039,
2040,
3019,
3020,
3021,
3022,
3023,
3024,
3025,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2030,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
487,
488,
489,
490,
491,
492,
493,
494,
495,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892781,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
229,
228,
219,
218
]
},
{
"tb": 2976,
"tbk": 5,
"tl": 3542320,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
538,
539,
540,
541,
542,
543,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
55,
37
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4740746,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3756,
3757,
3758,
3759,
3760,
3761,
3762,
3763,
3764,
3765
]
},
{
"tb": 2040,
"tbk": 8,
"tl": 24,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1478,
1479,
3766,
3767,
3768,
3769,
3770,
2828,
2829,
2830,
2762,
2763,
2764,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4261058,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1426,
1427,
1428,
1429,
1430,
1431,
1432,
1433,
1434,
1435,
486,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903471,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 141,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
534,
533,
535,
533
]
},
{
"tb": 196704,
"tbk": 3,
"tl": 51432,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
1166,
1167,
1168,
1169,
1170,
1171,
1172,
1173,
1174,
1175,
1176,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2234,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
2449,
2450,
8,
9,
214,
215,
49
]
},
{
"tb": 4896,
"tbk": 6,
"tl": 8,
"mb": 816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
3419,
3420,
3018,
2035,
2036,
2037,
2038,
2039,
2040,
3019,
3020,
3021,
3022,
3023,
3024,
3025,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057
]
},
{
"tb": 2976,
"tbk": 5,
"tl": 3542626,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
538,
539,
540,
541,
542,
543,
124,
125,
126,
127,
128,
129,
130,
131,
181,
182,
55,
37
]
},
{
"tb": 432,
"tbk": 2,
"tl": 29,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
3771,
3772,
3773,
3774,
3775,
3776,
3777,
3778,
3779,
3780,
3781,
3782,
3783,
3784,
1574,
1575,
1576,
1577,
1578,
1579,
1580,
75,
76,
77,
78,
79,
80,
81,
82
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2014,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2594,
2595,
2596,
2597,
2598,
2599,
2600,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8899,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 480,
"tbk": 10,
"tl": 42605105,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
219,
220,
221,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8040,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543113,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55
]
},
{
"tb": 5056,
"tbk": 16,
"tl": 74,
"mb": 632,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
2022,
2023,
2024,
2025,
2026,
2027,
2028,
2029,
2030,
2031,
2032,
2033,
3018,
2035,
2036,
2037,
2038,
2039,
2040
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 2064,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
533,
534,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 2883584,
"tbk": 704,
"tl": 599332,
"mb": 28672,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
537,
534,
534,
535,
536,
533,
537,
670,
671,
672
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957128,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2295,
2296,
2297,
2298,
879,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8162,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2045,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
796,
797,
798,
799,
491,
492,
493,
494,
495,
486,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543033,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 327680,
"tbk": 2,
"tl": 1217063,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1394,
1395,
1396,
1397,
1398,
1399,
1400,
1401,
1402,
1403,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 4263544,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
498,
499,
500,
501,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8942,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 131072,
"tbk": 32,
"tl": 12219,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
534,
535,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840
]
},
{
"tb": 2883584,
"tbk": 704,
"tl": 81163,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
535,
534,
534,
535,
537,
536,
533,
537
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542944,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2353,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
230,
231,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9043,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 241280,
"tbk": 772,
"tl": 1486,
"mb": 728,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1620,
795,
667,
668,
37
]
},
{
"tb": 192,
"tbk": 1,
"tl": 301,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1218,
1219,
1220,
1221,
1222,
1223,
1224,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2621,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
398,
399,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169476,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543063,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9101,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222818,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
783,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2900803,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
561,
562,
563,
564,
565,
566,
567,
568,
569,
570,
1589,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 272,
"tbk": 1,
"tl": 893,
"mb": 272,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3785,
3786,
3787,
3788,
3789,
3790,
3791,
3792,
3793,
3794,
3795,
3796,
3797,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8133,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446428,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
218,
218,
218,
228
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521591,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4262967,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1107,
1108,
1109,
1110,
181,
182,
214,
215,
49
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4264247,
"mb": 256,
"mbk": 1,
"gb": 256,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543049,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 262016,
"tbk": 11,
"tl": 1429,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
3798,
11
]
},
{
"tb": 384,
"tbk": 6,
"tl": 5441002,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
3799,
3800,
3801,
3802,
3803,
3804,
3805,
3806,
3807,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 576,
"tbk": 12,
"tl": 14192242,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 10055,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
534,
535,
537,
536,
533
]
},
{
"tb": 65408,
"tbk": 9,
"tl": 2134,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
3808,
11
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3547627,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 3542755,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3372,
3373,
3374,
3375,
3376,
3377,
3378,
3379,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
55,
37
]
},
{
"tb": 98304,
"tbk": 24,
"tl": 76694,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
840
]
},
{
"tb": 2112,
"tbk": 11,
"tl": 46904616,
"mb": 2112,
"mbk": 11,
"gb": 2112,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
3011,
3012,
3013,
3014,
2513,
2514,
2515,
762,
763,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 906949,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
3676,
3677,
3678,
3679,
3680,
3681,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 86705,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
535,
537,
536,
533
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 827,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 1024,
"ebk": 1,
"fs": [
3809,
3810,
3811,
3812,
3813,
3814,
3815,
3816,
3817,
3818,
3819,
200,
3820,
3821,
3822,
3823,
3824,
3825
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6349,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1814,
1815,
1816,
1817,
1818,
1819,
1820,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 384,
"tbk": 8,
"tl": 28345668,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
8,
9,
55,
37
]
},
{
"tb": 240,
"tbk": 10,
"tl": 9649978,
"mb": 240,
"mbk": 10,
"gb": 240,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1590,
1591,
1592,
1593,
1594,
1595,
1596,
928,
929,
930,
642,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957209,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2480,
2481,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 480,
"tbk": 10,
"tl": 4347,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
2209,
2210,
2211,
2212,
2213,
2214,
352,
353,
354,
8,
9,
55,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806932,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2175,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222526,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 28672,
"tbk": 7,
"tl": 26246,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
537,
537,
536,
533,
537
]
},
{
"tb": 448,
"tbk": 7,
"tl": 6325169,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
162,
162,
162
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903492,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
162,
162,
162,
162,
161,
163,
161
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 190623,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
533,
534,
534,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 576,
"tbk": 2,
"tl": 19,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
862,
863,
864,
865,
866,
867,
868,
869,
870,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 616,
"tbk": 11,
"tl": 140,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
759,
760,
761,
762,
763,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170735,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957842,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
3523,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1078,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
1821,
1822,
1823,
1824,
1825,
1826,
1827,
1828,
1829,
1830,
1831,
495,
222,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370906,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2040,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
796,
797,
798,
799,
491,
492,
493,
494,
495,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170618,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
1160,
1161,
1162,
1163,
1164,
1165,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 240,
"tbk": 10,
"tl": 9573286,
"mb": 240,
"mbk": 10,
"gb": 240,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1590,
1591,
1592,
1593,
1594,
1595,
1596,
928,
929,
930,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 465114,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3826,
3827,
3828,
3829,
3830,
3831,
667,
668,
37
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480343,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903295,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892849,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
218,
218,
218,
229,
228
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169579,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 36,
"tbk": 1,
"tl": 10,
"mb": 36,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
734,
735,
736,
737,
738,
739,
740,
1881,
1882,
1883,
1884,
3832,
3833,
3834,
3835,
3836,
3837,
3838,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200
]
},
{
"tb": 9216,
"tbk": 9,
"tl": 547,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2778,
2779,
2780,
2781,
2782,
2783,
2784,
2785,
2786,
2787,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
1752,
2772,
2773,
2774,
2775,
3406,
3407,
3408,
3409,
3410
]
},
{
"tb": 753664,
"tbk": 23,
"tl": 10974752,
"mb": 753664,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2564,
2565,
2566,
2567,
2568,
2569,
2570,
2571,
2572,
2569,
2570,
2571,
1630,
1006,
49
]
},
{
"tb": 1806336,
"tbk": 441,
"tl": 46311,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
535,
537,
537,
534
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222718,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
161,
162,
162,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145
]
},
{
"tb": 96,
"tbk": 1,
"tl": 97303,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3839,
3840,
3841,
3842,
3843,
3844,
3845,
2813,
2814,
2815,
160,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2171,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8122,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222495,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
161,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 456,
"tbk": 1,
"tl": 1522,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3846,
3847,
3848,
3849,
3850,
3851,
3852,
3853,
992,
668,
37
]
},
{
"tb": 2728,
"tbk": 1,
"tl": 5705,
"mb": 2728,
"mbk": 1,
"gb": 2728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
3854,
3855,
3856,
3857,
3858,
3859,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542888,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1742,
1743,
8,
9,
55,
37
]
},
{
"tb": 4752,
"tbk": 6,
"tl": 223,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2031,
2032,
2033,
2034,
2035,
2036,
2037,
2038,
2039,
2040,
3019,
3020,
3021,
3022,
3023,
3024,
3025,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 4423680,
"tbk": 1080,
"tl": 671359,
"mb": 36864,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2245,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
2776,
2777,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2225,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
59,
60,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2559,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 4128768,
"tbk": 3072,
"tl": 63286,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2715,
2716,
2717,
2718,
2719,
2720,
2721,
2722,
2723,
2724,
2725,
533,
534,
535,
537,
536,
533
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892759,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
229,
228,
219,
218
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2637,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 4096,
"tbk": 2,
"tl": 1243,
"mb": 4096,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3312,
3313,
3314,
3315,
3316,
3317,
3318,
3319,
3320,
3321,
3322,
3323,
3592,
11
]
},
{
"tb": 2620160,
"tbk": 110,
"tl": 20685,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
400,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903262,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
783,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542883,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
2776,
2777,
8,
9,
55,
37
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 448,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
534,
534,
533,
535
]
},
{
"tb": 120,
"tbk": 2,
"tl": 527036,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
48,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480395,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
218,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 477060,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3424,
3425,
3426,
3427,
3428,
3429,
3430,
1006,
49
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083793,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
393,
394,
228,
218,
218,
218,
219,
220,
221,
486
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4260868,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
228,
219,
228,
219,
220,
221,
486
]
},
{
"tb": 88,
"tbk": 1,
"tl": 393,
"mb": 88,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
586,
587,
588,
589,
590,
591,
592,
593,
594,
595,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543027,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 907056,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
3474,
3475,
3476,
3477,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521695,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1064,
1065,
1066,
1067,
1068,
228,
1159,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170746,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 3276800,
"tbk": 20,
"tl": 18103379,
"mb": 2621440,
"mbk": 10,
"gb": 2621440,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1837,
1838,
1839,
1840,
1841,
1842,
1843,
1844,
1845,
1846,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582,
583,
584,
585,
37
]
},
{
"tb": 3584,
"tbk": 56,
"tl": 457445,
"mb": 1024,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3860,
3861,
3862,
3863,
3864,
3865,
3866,
3867,
3868,
3869,
3870,
3871,
3126,
3127,
3128,
3129,
3130,
3131,
3132,
3133,
3134,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543012,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1216,
1217,
8,
9,
55,
37
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4740739,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3872,
3873,
3874,
3875,
3876,
3877,
3878,
3879,
3880
]
},
{
"tb": 528,
"tbk": 11,
"tl": 38979157,
"mb": 528,
"mbk": 11,
"gb": 528,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1532,
1533,
762,
763,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170850,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 88,
"tbk": 1,
"tl": 1103,
"mb": 88,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1672,
1673,
1674,
1675,
1676,
1677,
1678,
1679,
1680,
1681,
1682,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8611,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
767,
768,
769,
770,
771,
772,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 480,
"tbk": 10,
"tl": 7049,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
2209,
2210,
2211,
2212,
2213,
2214,
352,
353,
354,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542874,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
855,
856,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2389,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
855,
856,
8,
9,
10,
11
]
},
{
"tb": 516096,
"tbk": 126,
"tl": 658972,
"mb": 61440,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
534,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4262725,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1107,
1108,
1109,
1110,
132,
133,
214,
215,
49
]
},
{
"tb": 81920,
"tbk": 1,
"tl": 261,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3881,
3882,
3883,
3884,
3885,
3886,
3887,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2381,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 65568,
"tbk": 1,
"tl": 17025,
"mb": 65568,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
800,
801,
802,
803,
804,
805,
806,
1589,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 252037,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
3888,
3889,
3890,
3891,
3892,
3893,
3894,
3895,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9111,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2892,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 45,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3145,
3146,
3147,
3148,
3149,
3150,
3151,
2071,
2072,
2073,
495,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903453,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
161,
163,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9130,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 1056,
"tbk": 11,
"tl": 84,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
762,
763,
55,
37
]
},
{
"tb": 4980736,
"tbk": 1216,
"tl": 138557,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
533,
535,
537,
536,
533,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 2838528,
"tbk": 693,
"tl": 254555,
"mb": 24576,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
534,
535,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2252,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1465,
1466,
8,
9,
214,
215,
49
]
},
{
"tb": 368,
"tbk": 1,
"tl": 2941742,
"mb": 368,
"mbk": 1,
"gb": 368,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3896,
3897,
3898,
3899,
3900,
3901,
3902,
3903,
3904,
3905,
37
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222843,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
783,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8815,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 18031,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
537,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2578,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480462,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
218,
218,
218,
219,
220,
221,
222
]
},
{
"tb": 192,
"tbk": 1,
"tl": 42,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1234,
1235,
1597,
1598,
1599,
8,
9,
214,
215,
49
]
},
{
"tb": 192,
"tbk": 1,
"tl": 187082,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1355,
1356,
181,
182,
10,
11
]
},
{
"tb": 654080,
"tbk": 90,
"tl": 28483,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
3107,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269
]
},
{
"tb": 9568,
"tbk": 92,
"tl": 112565,
"mb": 9568,
"mbk": 92,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3636,
3637,
3638,
3639,
3640,
3641,
3642,
3906,
3907,
3908,
992,
668,
37
]
},
{
"tb": 13056,
"tbk": 8,
"tl": 160091,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
3034,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 138,
"tbk": 12,
"tl": 6,
"mb": 15,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3922,
3923,
3924,
3925,
3926,
3927,
3928,
200,
1890,
1891,
1892,
748,
197,
198,
199
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956965,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2612,
2613,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543247,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3291,
3292,
3293,
3294,
3295,
3653,
3654,
3655,
3656,
3657,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170694,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543027,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 1,
"tl": 279,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1218,
1219,
1220,
1221,
1222,
1223,
1224,
177,
178,
179,
180,
132,
133,
10,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 187064,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1349,
1350,
1351,
1352,
1353,
1354,
1355,
1356,
181,
182,
10,
11
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806993,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
628,
161,
163,
162
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903502,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
162,
161,
163,
161
]
},
{
"tb": 1664,
"tbk": 4,
"tl": 22,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
3929,
3930,
3931,
3932,
3933,
3934,
3935,
3936,
3937,
3938,
3939,
2206,
2207,
2208,
871,
872,
873,
874,
875,
876,
877,
878
]
},
{
"tb": 192,
"tbk": 1,
"tl": 186770,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1355,
1356,
132,
133,
10,
11
]
},
{
"tb": 528,
"tbk": 11,
"tl": 2032303,
"mb": 528,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
1413,
1414,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542926,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 6528,
"tbk": 4,
"tl": 83280,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
665,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
1462,
1463,
1464,
160,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185475,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
228,
219,
228,
219,
220,
221,
222
]
},
{
"tb": 144,
"tbk": 3,
"tl": 3547596,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9120,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 185461,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
228,
219,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 28345684,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
8,
9,
55,
37
]
},
{
"tb": 262272,
"tbk": 2,
"tl": 42622,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
1296,
1297,
1298,
1299,
1300,
1301,
1302,
1303,
1304,
1305,
1306,
1307,
1308,
1309,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2234000,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
639,
640,
641,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903254,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
138,
139,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160
]
},
{
"tb": 262016,
"tbk": 11,
"tl": 3555,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
3940,
3941,
3942,
160,
37
]
},
{
"tb": 1761,
"tbk": 20,
"tl": 14,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
3909,
3910,
3911,
3912,
3913,
3914,
3915,
3916,
3917,
3918,
3919,
3920,
3921,
3943,
3944,
3945,
3946,
3947,
3948,
3949,
200,
1890,
1891,
1892,
748,
197,
198,
199
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2339,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1216,
1217,
8,
9,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2241,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
755,
756,
757,
758,
1742,
1743,
8,
9,
214,
215,
49
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 3807,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
535,
534,
537,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 88,
"tbk": 1,
"tl": 279,
"mb": 88,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
586,
587,
588,
589,
590,
591,
592,
593,
594,
595,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169528,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 255484,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
3950,
3951,
3952,
3953,
3954,
3955,
3956,
1477,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903572,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
783,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 16128,
"tbk": 6,
"tl": 1115,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2390,
2391,
3957,
3958,
992,
668,
37
]
},
{
"tb": 258048,
"tbk": 63,
"tl": 6379,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
536,
533,
534,
534,
534,
533,
535
]
},
{
"tb": 12672,
"tbk": 176,
"tl": 23848,
"mb": 576,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3959,
3960,
3961,
3962,
3963,
3964,
3965,
3966,
3967,
3968,
3969,
3970,
3971,
3972,
3973,
3974,
3975,
3976,
3977,
3978,
3979,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 2944,
"tbk": 92,
"tl": 7042014,
"mb": 2944,
"mbk": 92,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
3980,
3981,
992,
668,
37
]
},
{
"tb": 232,
"tbk": 2,
"tl": 22,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1543,
1544,
1545,
3982,
3983,
3984,
3985,
3986,
3987,
3988,
3989,
3990,
3991,
1341,
1342,
1343,
1344,
1345,
1346,
1347,
1348,
481,
482,
483,
484
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543036,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 24,
"tbk": 1,
"tl": 59,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3166,
3167,
3168,
3169,
3170,
3171,
222,
11
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1121,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
3992,
3993,
49
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169465,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 258048,
"tbk": 63,
"tl": 9263,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444
]
},
{
"tb": 49152,
"tbk": 12,
"tl": 13641,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
537,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2434,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
214,
215,
49
]
},
{
"tb": 576,
"tbk": 2,
"tl": 16,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1869,
1870,
1871,
1872,
1873,
1874,
1875,
1876,
1877,
1878,
871,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9956884,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
2399,
2400,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 32768,
"tbk": 8,
"tl": 495,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
534,
534,
534,
534
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2450,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169632,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
208,
209,
210,
211,
212,
213,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2430,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1318947,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1225,
1226,
1227,
1228,
1229,
1230,
1231,
639,
640,
641,
931,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 3600049,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
496,
497,
3994,
3995,
106,
11
]
},
{
"tb": 2112,
"tbk": 11,
"tl": 2078485,
"mb": 2112,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
3011,
3012,
3013,
3014,
2513,
2514,
2515,
762,
763,
10,
11
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 1039761,
"mb": 1520,
"mbk": 1,
"gb": 1520,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
3888,
3889,
3890,
3891,
3892,
3893,
3894,
3895,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8713,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1195,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903624,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153
]
},
{
"tb": 480,
"tbk": 10,
"tl": 4374,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
2209,
2210,
2211,
2212,
2213,
2214,
352,
353,
354,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14170774,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
749,
750,
751,
752,
753,
754,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2386,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 23500,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
534,
534,
534,
534,
534
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2326,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
6,
7,
8,
9,
214,
215,
49
]
},
{
"tb": 327360,
"tbk": 100,
"tl": 740,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3247,
3248,
3249,
3250,
3251,
3252,
3253,
3254,
3255,
3256,
3257,
3258,
3259,
3260,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8947,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2359,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1436,
1437,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3542548,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1355,
1356,
181,
182,
55,
37
]
},
{
"tb": 16320,
"tbk": 10,
"tl": 187564,
"mb": 1632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
658,
659,
660,
661,
662,
663,
664,
1295,
1666,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298
]
},
{
"tb": 552,
"tbk": 1,
"tl": 148988,
"mb": 552,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3996,
3997,
3998,
3999,
4000,
4001,
106,
11
]
},
{
"tb": 2620160,
"tbk": 110,
"tl": 21524,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543014,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543004,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
55
]
},
{
"tb": 40,
"tbk": 2,
"tl": 33,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1792,
1793,
495,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903588,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
1332,
1333,
161,
783,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155
]
},
{
"tb": 640,
"tbk": 1,
"tl": 4740623,
"mb": 640,
"mbk": 1,
"gb": 640,
"gbk": 1,
"eb": 640,
"ebk": 1,
"fs": [
4002,
4003,
4004,
4005,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
4019,
4020,
4021,
4022,
4023,
4024,
4025,
4026,
4027,
4028,
4029,
4030,
4031,
4032,
4033,
4034,
4035,
4036,
4037,
445,
446,
447,
448,
449
]
},
{
"tb": 819200,
"tbk": 10,
"tl": 2580,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3881,
3882,
3883,
3884,
3885,
3886,
3887,
244,
245,
246,
247,
289,
290,
291,
292,
293,
294,
295,
253,
254,
255,
256,
257,
258,
259,
260,
261,
262,
263,
264,
265,
266,
267,
268,
269,
296,
297,
298,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169505,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
555,
556,
557,
558,
559,
560,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 384,
"tbk": 6,
"tl": 5440905,
"mb": 384,
"mbk": 6,
"gb": 384,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
2839,
2840,
2841,
2842,
2843,
2844,
2845,
2846,
2847,
1317,
1318,
1319,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 2621440,
"tbk": 16,
"tl": 10844367,
"mb": 2097152,
"mbk": 8,
"gb": 2097152,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
4038,
4039,
4040,
4041,
4042,
4043,
4044,
4045,
4046,
4047,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 480,
"tbk": 4,
"tl": 3543704,
"mb": 256,
"mbk": 1,
"gb": 256,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
1600,
1601,
1602,
1603,
1604,
1605,
1606,
1607,
1608,
1609,
1610,
1611,
1612,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2416,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1742,
1743,
8,
9,
10,
11
]
},
{
"tb": 33664,
"tbk": 16,
"tl": 75831039,
"mb": 33664,
"mbk": 16,
"gb": 33664,
"gbk": 16,
"eb": 33664,
"ebk": 16,
"fs": [
4048,
4049,
4050,
4051,
4052,
4053,
4054,
4055,
4056,
4020,
4021,
4022,
4023,
4024,
4025,
4026,
4027,
4028,
4029,
4030,
4031,
4032,
4033,
4034,
4035,
4036,
4037,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 7372800,
"tbk": 1800,
"tl": 1070889,
"mb": 36864,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
534,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 576,
"tbk": 2,
"tl": 18,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2535,
2536,
2537,
2538,
2539,
2540,
2541,
2542,
2543,
2544,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892749,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
218,
218,
229,
228,
219,
218,
219
]
},
{
"tb": 32,
"tbk": 1,
"tl": 327,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1118,
1119,
1120,
1121,
1122,
1123,
1124,
484,
485,
11
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4057,
4058
]
},
{
"tb": 96,
"tbk": 2,
"tl": 8521684,
"mb": 96,
"mbk": 2,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
1159,
228,
219,
220,
221,
486,
49
]
},
{
"tb": 45056,
"tbk": 11,
"tl": 3362,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
534,
535,
537,
534,
537,
670,
671,
672
]
},
{
"tb": 448,
"tbk": 1,
"tl": 3542908,
"mb": 448,
"mbk": 1,
"gb": 448,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2831,
2832,
2833,
2834,
8,
9,
55,
37
]
},
{
"tb": 384,
"tbk": 1,
"tl": 2946007,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4059,
4060,
4061,
4062,
4063,
4064,
4065,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 2064384,
"tbk": 504,
"tl": 63338,
"mb": 16384,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
535,
533,
534,
534,
535,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 651,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4066,
4067,
4068,
4069,
4070,
4071,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2423,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
2776,
2777,
8,
9,
10,
11
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480633,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
1154,
1155,
1156,
1157,
1158,
1159,
220,
221,
222,
11
]
},
{
"tb": 504,
"tbk": 1,
"tl": 3819,
"mb": 504,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3074,
3075,
3076,
3077,
3078,
2681,
2682,
2683,
2684,
2685,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2886,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 176,
"tbk": 2,
"tl": 1777,
"mb": 176,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4072,
4073,
4074,
4075,
4076,
4077,
4078,
4079,
4080,
4081,
4082,
4083,
4077,
4078,
4079,
3793,
3794,
3795,
3796,
3797,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3064,
3065,
1920,
1921,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 1512,
"tbk": 3,
"tl": 4621,
"mb": 1512,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2848,
2849,
2850,
2851,
2852,
2853,
2854,
2855,
2856,
2857,
2858,
2859,
1447,
1448,
1449,
1450,
1451,
1452,
1453,
1454,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 59652,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
911,
912,
913,
914,
915,
916,
917,
918,
919,
1477,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 131136,
"tbk": 1,
"tl": 17403,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
806,
571,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370916,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
219,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 326400,
"tbk": 10,
"tl": 998,
"mb": 32640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1914,
1915,
1916,
1917,
1918,
1919,
1920,
1921,
1454,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4084,
4085
]
},
{
"tb": 1520,
"tbk": 1,
"tl": 191037,
"mb": 1520,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1370,
1371,
1372,
1373,
4086,
4087,
4088,
4089,
4090,
4091,
4092,
4093,
362,
363,
364,
365,
366,
367,
368,
369,
370,
371,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34083636,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
219,
220,
221,
486,
49
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807043,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
162,
162,
162,
628,
161
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3728693,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4094,
4095,
4096,
4097,
4098,
4099,
4100,
2712,
2713,
2714,
11
]
},
{
"tb": 640,
"tbk": 1,
"tl": 4741013,
"mb": 640,
"mbk": 1,
"gb": 640,
"gbk": 1,
"eb": 640,
"ebk": 1,
"fs": [
4101,
4102,
4103,
4104,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1751
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1069,
1070,
1071,
1072,
1073,
1074,
1075,
486,
49
]
},
{
"tb": 360448,
"tbk": 22,
"tl": 3737180,
"mb": 360448,
"mbk": 22,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
993,
994,
995,
996,
997,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1760,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903614,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
382,
383,
628,
161,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 109,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
535,
533,
535,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 96,
"tbk": 1,
"tl": 334890,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4105,
4106,
4107,
4108,
4109,
4110,
4111,
371,
372,
373,
374,
375,
376,
377,
37
]
},
{
"tb": 256,
"tbk": 1,
"tl": 33,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4112,
4113,
4114,
4115,
4116,
4117,
4118,
160,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 14169672,
"mb": 192,
"mbk": 4,
"gb": 192,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1781,
1782,
1783,
1784,
1785,
1786,
1787,
1788,
1789,
1790,
1791,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
55,
37
]
},
{
"tb": 232,
"tbk": 2,
"tl": 169,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
3015,
3016,
3017,
3018,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045
]
},
{
"tb": 992,
"tbk": 5,
"tl": 7560,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
1620,
2421,
667,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542892,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
395,
396,
397,
1465,
1466,
8,
9,
55,
37
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4262409,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1276,
1277,
1278,
1279,
1280,
1281,
1355,
1356,
132,
133,
214,
215,
49
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2375,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3531,
3532,
3533,
3534,
3535,
3536,
3537,
1610,
1611,
1612,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2293,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
214,
215
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3729929,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2903,
2904,
2905,
2906,
2907,
2908,
2909,
2910,
2911,
2912,
2913,
2914,
2915,
2916,
2917,
2918,
2919,
2920,
1272,
1273,
1274,
1275,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8865,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
384,
385,
386,
387,
388,
389,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 2235568,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
3442,
3443,
3444,
3445,
3446,
3447,
3448,
3449,
4119,
4120,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2158,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
1436,
1437,
8,
9,
214,
215,
49
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3729742,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
2981,
2982,
2983,
2984,
2985,
2986,
2987,
495,
222,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1611004,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1404,
1405,
4121,
4122,
4123,
4124,
335,
336,
37
]
},
{
"tb": 160,
"tbk": 1,
"tl": 188564,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4125,
4126,
4127,
4128,
4129,
4130,
4131,
668,
37
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 24,
"mb": 1152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
871,
872,
873,
874,
875,
876,
877,
878,
484,
720,
49
]
},
{
"tb": 1584,
"tbk": 2,
"tl": 169,
"mb": 792,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2557,
2558,
2559,
2560,
2561,
2562,
2563,
2031,
2032,
2033,
3018,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2744,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2403,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
544,
545,
546,
547,
548,
549,
550,
551,
552,
553,
554,
552,
553,
554,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 40,
"tbk": 2,
"tl": 33,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1013,
1014,
495,
222,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3543029,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
764,
765,
8,
9,
55,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1807052,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
162,
162,
628,
161
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903516,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
337,
338,
339,
340,
341,
342,
161,
162,
162,
162,
162,
162,
161,
163
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4740765,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
4132,
4133,
4134,
4135,
4136,
4137,
4138,
4139,
4140,
4141
]
},
{
"tb": 1472,
"tbk": 23,
"tl": 20740516,
"mb": 1472,
"mbk": 23,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
3631,
3632,
1686,
1687,
1688,
1689,
1690,
1688,
1689,
1690,
1691,
1692,
1690,
1691,
1693,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159,
160,
37
]
},
{
"tb": 2072,
"tbk": 1,
"tl": 4740627,
"mb": 2072,
"mbk": 1,
"gb": 2072,
"gbk": 1,
"eb": 2072,
"ebk": 1,
"fs": [
4142,
4143,
4144,
4145,
4146,
4147,
4148,
4149,
4006,
4007,
4008,
4009,
4010,
4011,
4012,
4013,
4014,
4015,
4016,
4017,
4018,
4019,
4020,
4021,
4022,
4023,
4024,
4025,
4026,
4027,
4028,
4029,
4030,
4031,
4032,
4033,
4034,
4035,
4036,
4037,
445,
446,
447,
448,
449
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480373,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
393,
394,
228,
218,
218,
219,
220,
221,
222,
11
]
},
{
"tb": 1056,
"tbk": 11,
"tl": 120,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
962,
963,
964,
965,
966,
967,
968,
969,
970,
971,
762,
763,
10,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4264221,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3665,
3666,
3667,
3668,
3669,
3670,
3671,
3672,
3673,
3674,
3675,
969,
970,
971,
762,
763,
214,
215,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 187090,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
1107,
1108,
1109,
1110,
132,
133,
10,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 370896,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
1159,
228,
219,
220,
221,
222,
11
]
},
{
"tb": 1072,
"tbk": 1,
"tl": 552,
"mb": 1072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
468,
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
4150,
4151,
2035,
2036,
2037,
2038,
2039,
2040,
2041,
2042,
2043,
2044,
2045,
2046,
2047,
2048,
2049,
2050,
2051,
2052,
2053,
2054,
2055,
2056,
2057,
83,
84,
85,
86,
87
]
},
{
"tb": 2048,
"tbk": 2,
"tl": 2,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
1667,
1668,
1669,
1670,
1671,
428,
431,
432,
433,
434,
435,
436,
437,
438,
439,
440,
441,
442,
443,
444,
1752,
2772,
2773,
2774,
2775,
3406,
3407,
3408,
3409,
3410
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958998,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1007,
1008,
1009,
1010,
4152,
4153,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 13,
"mb": 1152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
2313,
872,
873,
874,
875,
876,
877,
878,
484,
485,
11
]
},
{
"tb": 768,
"tbk": 16,
"tl": 75836022,
"mb": 768,
"mbk": 16,
"gb": 768,
"gbk": 16,
"eb": 768,
"ebk": 16,
"fs": [
4154,
4155,
4156,
4157,
4158,
4159,
4160,
4161,
4162,
1984,
1985,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 196224,
"tbk": 27,
"tl": 5645,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
1022,
1023,
4163,
4164,
4165,
4166,
2708,
2709,
2710,
2711,
2712,
2713,
2714,
11
]
},
{
"tb": 512,
"tbk": 8,
"tl": 7222428,
"mb": 512,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 448,
"tbk": 1,
"tl": 187722,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
2831,
2832,
2833,
2834,
8,
9,
10,
11
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892702,
"mb": 192,
"mbk": 4,
"gb": 96,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
50,
51,
52,
216,
217,
218,
229,
228,
219,
218,
219,
220,
221
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957686,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
3152,
3153,
3154,
2769,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480608,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
2345,
2346,
2347,
2348,
2349,
549,
550,
551,
1154,
1155,
1156,
1157,
1158,
1159,
220,
221,
222,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8767,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
1585,
1586,
1587,
1588,
642,
401,
402,
403,
404,
405,
406,
407,
408,
409,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 64,
"tbk": 1,
"tl": 906990,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
2299,
2300,
2301,
1320,
1321,
1322,
1323,
1324,
335,
336,
37
]
},
{
"tb": 464,
"tbk": 4,
"tl": 32,
"mb": 116,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1488,
1489,
1490,
1491,
1492,
1493,
1494,
1495,
1496,
1497,
1498,
1499,
1500,
1501,
2921,
2922,
2923,
1647,
695,
696,
697,
698,
699,
700,
1648,
1649,
1650,
1651,
1652
]
},
{
"tb": 384,
"tbk": 8,
"tl": 28345714,
"mb": 384,
"mbk": 8,
"gb": 384,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
2367,
2368,
2369,
2370,
2371,
2372,
2373,
2374,
2375,
2376,
1032,
1033,
1034,
8,
9,
55,
37
]
},
{
"tb": 504,
"tbk": 1,
"tl": 3483223,
"mb": 504,
"mbk": 1,
"gb": 504,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1265,
1266,
1267,
1268,
1269,
1270,
1271,
1272,
1273,
1274,
2835,
2836,
2837,
2838,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
37
]
},
{
"tb": 992,
"tbk": 5,
"tl": 4249,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
1620,
795,
667,
668,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2879,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 832,
"tbk": 2,
"tl": 689,
"mb": 416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3261,
3262,
3263,
3264,
3265,
3266,
3267,
1513,
1514,
1515,
2545,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 327680,
"tbk": 5,
"tl": 389,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4167,
4168,
4169,
4170,
4171,
4172,
4173,
4174,
4175,
4176,
4177,
4178,
4179,
668,
37
]
},
{
"tb": 53718,
"tbk": 11,
"tl": 83,
"mb": 26880,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
4180,
4181,
4182,
4183,
4184,
4185,
4186,
4187,
4188,
4189,
4190,
4191,
4192,
4193,
4194,
4195,
4196,
4197,
4198,
4199,
4200,
4201,
4202
]
},
{
"tb": 640,
"tbk": 10,
"tl": 67518,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3415,
3416,
3417,
3418,
1585,
1586,
1587,
1588,
931,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3543674,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
327,
328,
1090,
1091,
3665,
3666,
3667,
3668,
3669,
3670,
3671,
3672,
3673,
3674,
3675,
969,
970,
971,
762,
763,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2765,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
643,
644,
645,
646,
647,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8892,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
502,
503,
504,
505,
506,
507,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542856,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
390,
391,
392,
59,
60,
8,
9,
55,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903418,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
510,
511,
512,
513,
138,
139,
161,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
152,
153,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 192,
"tbk": 4,
"tl": 8740,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
1058,
1059,
1060,
1061,
1062,
1063,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
10,
11
]
},
{
"tb": 5502336,
"tbk": 231,
"tl": 40221,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
2726,
2727,
2728,
2729,
2730,
2731,
2732,
2733,
2177,
2178,
2179,
2180,
2181,
2182,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 384,
"tbk": 8,
"tl": 1480691,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
3389,
3390,
3391,
3392,
3393,
1157,
1158,
1159,
220,
221,
222,
11
]
},
{
"tb": 112,
"tbk": 1,
"tl": 1462,
"mb": 112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
773,
774,
775,
776,
777,
778,
779,
780,
781,
782,
55,
37
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542886,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
731,
732,
733,
1742,
1743,
8,
9,
55,
37
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1806967,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
162,
162,
628,
161,
163,
162,
163
]
},
{
"tb": 1835008,
"tbk": 448,
"tl": 46306,
"mb": 12288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
533,
535,
537,
537,
536,
533,
537,
670,
671,
672
]
},
{
"tb": 896,
"tbk": 1,
"tl": 4741023,
"mb": 896,
"mbk": 1,
"gb": 896,
"gbk": 1,
"eb": 896,
"ebk": 1,
"fs": [
4203,
4204,
4205,
4206,
4207,
4208,
4209,
4210,
4211,
4212,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
1751
]
},
{
"tb": 57,
"tbk": 2,
"tl": 15,
"mb": 38,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4213,
4214,
4215,
4216,
4217,
4218,
4219,
4220,
4221,
4222,
4223,
4224,
4225,
4226,
3835,
3836,
3837,
3838,
200,
1890,
1891,
1892,
748,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
4227,
4228,
4229,
4230,
4231,
4232,
4233,
4234,
4235,
4236,
4237,
3835,
3836,
3837,
3838,
200,
1890,
1891,
1892,
748
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3542903,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
53,
54,
8,
9,
55,
37
]
},
{
"tb": 6029312,
"tbk": 23,
"tl": 51467220,
"mb": 6029312,
"mbk": 23,
"gb": 6029312,
"gbk": 23,
"eb": 0,
"ebk": 0,
"fs": [
932,
933,
934,
935,
936,
937,
938,
939,
940,
941,
942,
943,
944,
4238,
4239,
4240,
4241,
3903,
3904,
3905,
37
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958904,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
378,
379,
380,
381,
1474,
1475,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 9090,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
56,
57,
58,
725,
726,
727,
728,
729,
730,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
214,
215,
49
]
},
{
"tb": 32384,
"tbk": 368,
"tl": 45584,
"mb": 792,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4242,
4243,
4244,
4245,
4246,
4247,
4248,
4249,
4250,
4251,
4252,
4253,
4254,
4255,
4256,
4257,
4258,
4259,
4260,
4261,
4262,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 1311360,
"tbk": 10,
"tl": 181417,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
825,
826,
827,
828,
829,
830,
806,
1589,
401,
402,
403,
404,
572,
573,
574,
575,
576,
577,
578,
410,
411,
412,
413,
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
579,
580,
581,
582
]
},
{
"tb": 35328,
"tbk": 368,
"tl": 48360,
"mb": 1056,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
4263,
4264,
4265,
4266,
4267,
4268,
4269,
4270,
4271,
4272,
4273,
4274,
4275,
4276,
4277,
4278,
4279,
4280,
4281,
4282,
4283,
442,
443,
444,
445,
446,
447,
448,
449,
617,
618,
619,
620,
621,
622,
623,
624,
624,
625
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9957804,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
134,
135,
136,
137,
1930,
1931,
1932,
2769,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 64,
"tbk": 1,
"tl": 903275,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
721,
722,
723,
724,
382,
383,
163,
162,
163,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
144,
151,
150,
144,
151,
150,
144,
145,
514,
515,
516,
517,
518,
519,
156,
157,
158,
159
]
},
{
"tb": 8192,
"tbk": 2,
"tl": 40,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
536,
533,
536,
533,
535,
534
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2871,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
552,
553,
554,
552,
553,
554,
552,
553,
554,
764,
765,
8,
9,
10,
11
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4446368,
"mb": 96,
"mbk": 2,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
216,
217,
218,
218,
218,
228,
219,
228,
219
]
},
{
"tb": 704,
"tbk": 11,
"tl": 9958815,
"mb": 704,
"mbk": 11,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
450,
451,
452,
453,
2611,
455,
456,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466,
467,
37
]
},
{
"tb": 2949120,
"tbk": 720,
"tl": 431166,
"mb": 20480,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1178,
1179,
1180,
1181,
1182,
1183,
1184,
1185,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 3096576,
"tbk": 756,
"tl": 3358697,
"mb": 53248,
"mbk": 13,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
327,
669,
530,
531,
532,
537,
537,
534,
537,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 524544,
"tbk": 4,
"tl": 83420,
"mb": 131136,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
833,
834,
835,
836,
837,
838,
2337,
2338,
2339,
2340,
2341,
2342,
2343,
2344,
1462,
1463,
1464,
160,
37
]
},
{
"tb": 192,
"tbk": 4,
"tl": 7984,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
132,
133,
10,
11
]
}
],
"ftbl": [
"[root]",
"0x561da2814e35: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2814e35: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da2814e35: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da2814e35: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1296:25)",
"0x561da2814e35: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:504:9)",
"0x561da28111a3: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:323:78)",
"0x561da28111a3: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da282068b: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure (src/nn_ops/eltwise_ops.rs:283:9)",
"0x561da282068b: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:65:50)",
"0x561da2844173: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:256:18)",
"0x561da282cc04: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:66:14)",
"0x561da27f209a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f209a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f209a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f209a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f209a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f209a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f209a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2850f8b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:107:42)",
"0x561da2850f8b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2850f8b: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:107:42)",
"0x561da2850f8b: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da2850f8b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da2850f8b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f0cf8: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f0cf8: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f0cf8: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f0cf8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f0cf8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282ab26: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282ab26: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282ab26: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282ab26: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2856584: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:76:44)",
"0x561da2856584: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856584: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:76:44)",
"0x561da282cdf1: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:72:5)",
"0x561da27f4a0c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4a0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4a0c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4a0c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4a0c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4a0c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4a0c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2809e18: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/poly.rs:138:45)",
"0x561da2809e18: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2809e18: halo2_proofs::poly::batch_invert_assigned (halo2_proofs/src/poly.rs:138:45)",
"0x561da2845998: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:220:21)",
"0x561da282cb9f: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:64:14)",
"0x561da2815033: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2815033: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:736:25)",
"0x561da2815033: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Add>::add (src/plonk/circuit.rs:736:25)",
"0x561da28111e7: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:322:23)",
"0x561da28111e7: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da2856517: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:64:18)",
"0x561da2815248: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2815248: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:756:45)",
"0x561da2815248: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Mul>::mul (src/plonk/circuit.rs:756:45)",
"0x561da28113e5: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:325:23)",
"0x561da28113e5: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27f2c91: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f2c91: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f2c91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f2c91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f2c91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f2c91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f2c91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2805c18: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2805c18: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2805c18: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2805c18: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2805c18: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:269:25)",
"0x561da2805c18: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2805c18: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:269:25)",
"0x561da28033f8: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:91:13)",
"0x561da281f369: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_region (halo2_proofs/src/circuit.rs:488:9)",
"0x561da281f369: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers (halo2_machinelearning/src/nn_chip.rs:258:26)",
"0x561da281f369: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize::{{closure}} (halo2_machinelearning/src/lib.rs:123:17)",
"0x561da281f369: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da281f369: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da281f369: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da281f369: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:120:22)",
"0x561da28005a5: <halo2_proofs::circuit::floor_planner::single_pass::SimpleFloorPlanner as halo2_proofs::plonk::circuit::FloorPlanner>::synthesize (circuit/floor_planner/single_pass.rs:35:9)",
"0x561da284e6fa: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:284:13)",
"0x561da284e6fa: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e6fa: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e6fa: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27eeb84: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27eeb84: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27eeb84: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27eeb84: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27eeb84: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282b0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282b0b6: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282b0b6: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282b0b6: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2856755: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:135:40)",
"0x561da2856755: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856755: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:135:40)",
"0x561da2815773: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2815773: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2815773: alloc::raw_vec::RawVec<T,A>::with_capacity_in (plonk/permutation/keygen.rs:160:32)",
"0x561da2815773: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2815773: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da2815773: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:160:32)",
"0x561da2844801: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:299:26)",
"0x561da27f590b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f590b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f590b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f590b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f590b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f590b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f590b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28568b9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:362:35)",
"0x561da28568b9: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28568b9: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:362:35)",
"0x561da284b920: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da284b920: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:726:29)",
"0x561da284b920: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Neg>::neg (src/plonk/circuit.rs:726:29)",
"0x561da284b920: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:129:26)",
"0x561da284b920: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284b920: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284b920: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f2f60: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f2f60: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f2f60: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f2f60: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2811b42: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/nn_chip.rs:128:51)",
"0x561da2811b42: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2811b42: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}} (halo2_machinelearning/src/nn_chip.rs:128:51)",
"0x561da2811b42: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da28209c0: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure (halo2_machinelearning/src/nn_chip.rs:124:9)",
"0x561da28209c0: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:82:13)",
"0x561da27fd6e4: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fd6e4: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd6e4: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd6e4: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::ExtendedLagrangeCoeff> as core::ops::arith::Mul>::mul (src/poly/evaluator.rs:398:25)",
"0x561da280fbf8: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}}::{{closure}}::{{closure}} (src/plonk/prover.rs:576:41)",
"0x561da280fbf8: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:595:17)",
"0x561da27e8ccc: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}}::{{closure}} (src/plonk/prover.rs:556:29)",
"0x561da27e8ccc: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27e8ccc: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27e8ccc: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27e8ccc: core::ops::function::FnOnce::call_once (src/ops/function.rs:248:5)",
"0x561da27e8ccc: core::iter::adapters::flatten::and_then_or_clear (iter/adapters/flatten.rs:695:13)",
"0x561da27e8ccc: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:471:36)",
"0x561da27e8ccc: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:51:9)",
"0x561da27e8ccc: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next::{{closure}} (iter/adapters/chain.rs:50:67)",
"0x561da27e8ccc: core::option::Option<T>::or_else (core/src/option.rs:1371:21)",
"0x561da27e8ccc: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next (iter/adapters/chain.rs:50:9)",
"0x561da27e8ccc: core::iter::adapters::chain::and_then_or_clear (iter/adapters/chain.rs:287:13)",
"0x561da27e4aa7: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:471:36)",
"0x561da27e4aa7: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:51:9)",
"0x561da27f24cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f24cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fc00c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da27fc00c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27fc00c: halo2_proofs::poly::evaluator::Ast<E,F,B>::distribute_powers (src/poly/evaluator.rs:272:40)",
"0x561da27fc00c: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:81:22)",
"0x561da28575ff: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:589:21)",
"0x561da280fab8: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:559:25)",
"0x561da280fa70: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:548:25)",
"0x561da280fb9a: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:584:25)",
"0x561da281508c: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da281508c: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:736:41)",
"0x561da281508c: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Add>::add (src/plonk/circuit.rs:736:41)",
"0x561da284d949: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:29)",
"0x561da284d949: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d949: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d949: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d949: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d949: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f5608: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f5608: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f5608: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f5608: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2811ba1: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/nn_chip.rs:133:51)",
"0x561da2811ba1: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2811ba1: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}} (halo2_machinelearning/src/nn_chip.rs:133:51)",
"0x561da2811ba1: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da2820870: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure (halo2_machinelearning/src/nn_chip.rs:124:9)",
"0x561da2820870: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:74:13)",
"0x561da289c9fb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289c9fb: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289c9fb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (crossbeam-deque-0.8.2/src/deque.rs:41:39)",
"0x561da289c9fb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da289c9fb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da289c9fb: crossbeam_deque::deque::Buffer<T>::alloc (crossbeam-deque-0.8.2/src/deque.rs:41:39)",
"0x561da289c9fb: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.2/src/deque.rs:245:22)",
"0x561da28991d8: rayon_core::registry::Registry::new::{{closure}} (rayon-core-1.9.3/src/registry.rs:227:21)",
"0x561da28991d8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da28991d8: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da28991d8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da2899cbb: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:438:9)",
"0x561da2899cbb: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da2898187: rayon_core::registry::Registry::new (rayon-core-1.9.3/src/registry.rs:222:53)",
"0x561da289ab77: rayon_core::registry::global_registry::{{closure}} (rayon-core-1.9.3/src/registry.rs:168:28)",
"0x561da289ab77: rayon_core::registry::set_global_registry::{{closure}} (rayon-core-1.9.3/src/registry.rs:195:18)",
"0x561da289ab77: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:276:41)",
"0x561da27e159d: std::sync::once::Once::call_inner (src/sync/once.rs:434:21)",
"0x561da289802e: std::sync::once::Once::call_once (src/sync/once.rs:276:9)",
"0x561da289802e: rayon_core::registry::set_global_registry (rayon-core-1.9.3/src/registry.rs:194:5)",
"0x561da289802e: rayon_core::registry::global_registry (rayon-core-1.9.3/src/registry.rs:168:5)",
"0x561da289674d: rayon_core::registry::Registry::current_num_threads (rayon-core-1.9.3/src/registry.rs:288:17)",
"0x561da289674d: rayon_core::current_num_threads (rayon-core-1.9.3/src/lib.rs:120:5)",
"0x561da27f6480: halo2_proofs::arithmetic::parallelize (halo2_proofs/src/arithmetic.rs:326:23)",
"0x561da27f6480: halo2_proofs::poly::commitment::Params<C>::new (src/poly/commitment.rs:53:13)",
"0x561da284d78d: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:29)",
"0x561da284d78d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d78d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d78d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d78d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d78d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da28453f1: halo2_proofs::plonk::keygen::create_domain (src/plonk/keygen.rs:37:18)",
"0x561da28453f1: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:197:32)",
"0x561da280f6ff: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::replace_selectors::{{closure}} (src/plonk/circuit.rs:1319:25)",
"0x561da280f6ff: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:570:17)",
"0x561da280f694: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:548:25)",
"0x561da280f562: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:584:25)",
"0x561da281279e: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::replace_selectors (src/plonk/circuit.rs:1303:21)",
"0x561da281279e: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1327:13)",
"0x561da2844623: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:282:32)",
"0x561da280f73d: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da280f73d: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:763:28)",
"0x561da280f73d: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Mul<F>>::mul (src/plonk/circuit.rs:763:28)",
"0x561da280f73d: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::replace_selectors::{{closure}} (src/plonk/circuit.rs:1321:25)",
"0x561da280f73d: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:609:17)",
"0x561da280f6a8: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:559:25)",
"0x561da280f624: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:534:25)",
"0x561da2811132: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:322:24)",
"0x561da2811132: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27f356d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f356d: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f356d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f356d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f356d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f356d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f356d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28277c1: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/arithmetic.rs:194:28)",
"0x561da28277c1: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28277c1: halo2_proofs::arithmetic::best_fft (halo2_proofs/src/arithmetic.rs:194:28)",
"0x561da282f949: halo2_proofs::poly::domain::EvaluationDomain<G>::coeff_to_extended (src/poly/domain.rs:248:9)",
"0x561da27f99b4: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:397:53)",
"0x561da284f766: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:490:21)",
"0x561da284f766: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284f766: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284f766: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27eb487: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27eb487: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27eb487: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27eb487: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27eb487: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da282b974: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282b974: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282b974: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282b974: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da284dde8: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:487:13)",
"0x561da284dde8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284dde8: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:487:13)",
"0x561da284dde8: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284dde8: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284dde8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da282b261: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da282b261: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:251:13)",
"0x561da282b261: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:178:19)",
"0x561da282b261: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282b261: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282b261: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282b261: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2815a1b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2815a1b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2815a1b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2815a1b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2815a1b: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2815a1b: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2815a1b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2815a1b: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2815a1b: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:174:40)",
"0x561da27f0745: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f0745: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f0745: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0745: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f0745: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f0745: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0745: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f9744: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/lookup/prover.rs:334:17)",
"0x561da27f9744: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27f9744: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:334:17)",
"0x561da27eb5fe: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27eb5fe: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27eb5fe: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27eb5fe: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27eb5fe: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27eb5fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27eb5fe: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da2856f3f: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:483:62)",
"0x561da2856f3f: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856f3f: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:483:62)",
"0x561da2851234: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2851234: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2851234: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2851234: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2851234: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2851234: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2851234: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange (src/poly/domain.rs:179:21)",
"0x561da2851234: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:82:36)",
"0x561da2851234: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da2851234: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da2851234: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f2295: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f2295: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f2295: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f2295: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f2295: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f2295: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f2295: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282af38: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282af38: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282af38: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282af38: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2850aad: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:79:35)",
"0x561da2850aad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2850aad: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:79:35)",
"0x561da2850aad: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da2850aad: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da2850aad: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da2861b6a: <dhat::Alloc as core::alloc::global::GlobalAlloc>::alloc (dhat-0.3.1/src/lib.rs:1229:26)",
"0x561da27e2708: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:0:0)",
"0x561da27d9910: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27d9910: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da27e3753: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3753: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3753: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3753: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:435:13)",
"0x561da28553f5: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da28572ef: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:512:69)",
"0x561da280f9ec: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da280f9ec: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da280f9ec: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da280f9ec: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Mul<F>>::mul (src/poly/evaluator.rs:424:20)",
"0x561da280f9ec: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}}::{{closure}}::{{closure}} (src/plonk/prover.rs:577:46)",
"0x561da280f9ec: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:609:17)",
"0x561da284b73d: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da284b73d: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:763:28)",
"0x561da284b73d: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Mul<F>>::mul (src/plonk/circuit.rs:763:28)",
"0x561da284b73d: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:301:21)",
"0x561da284b73d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284b73d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284b73d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284b73d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284b73d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da2810d7c: core::iter::traits::iterator::Iterator::reduce (iter/traits/iterator.rs:2459:14)",
"0x561da2810d7c: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:295:28)",
"0x561da2810d7c: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27e9bff: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27e9bff: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27e9bff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (ff-0.12.0/src/batch.rs:36:23)",
"0x561da27e9bff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27e9bff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27e9bff: <I as ff::batch::BatchInvert<F>>::batch_invert (ff-0.12.0/src/batch.rs:36:23)",
"0x561da2843339: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:119:13)",
"0x561da2850545: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:467:13)",
"0x561da2850545: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da2850545: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da2850545: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f1e00: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f1e00: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f1e00: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f1e00: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f1e00: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282b452: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282b452: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282b452: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282b452: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2856e22: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:463:67)",
"0x561da2856e22: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856e22: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:463:67)",
"0x561da27ffcbf: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27ffcbf: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffcbf: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffcbf: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Add>::add (src/poly/evaluator.rs:326:34)",
"0x561da280fb16: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}}::{{closure}}::{{closure}} (src/plonk/prover.rs:575:41)",
"0x561da280fb16: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:570:17)",
"0x561da284d821: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:29)",
"0x561da284d821: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d821: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d821: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d821: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d821: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da28151ef: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28151ef: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:756:29)",
"0x561da28151ef: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Mul>::mul (src/plonk/circuit.rs:756:29)",
"0x561da280f5b9: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::replace_selectors::{{closure}} (src/plonk/circuit.rs:1320:25)",
"0x561da280f5b9: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:595:17)",
"0x561da28153a3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28153a3: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:746:25)",
"0x561da28153a3: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Sub>::sub (src/plonk/circuit.rs:746:25)",
"0x561da2811115: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:322:43)",
"0x561da2811115: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da280ac51: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:224:28)",
"0x561da284fbf5: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:435:21)",
"0x561da284fbf5: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284fbf5: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284fbf5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f0944: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f0944: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f0944: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f0944: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f0944: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282adc2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282adc2: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282adc2: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282adc2: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da284fe73: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:430:13)",
"0x561da284fe73: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284fe73: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:430:13)",
"0x561da284fe73: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284fe73: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284fe73: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f3fe2: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f3fe2: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f3fe2: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f3fe2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f3fe2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da280c5c0: halo2_proofs::poly::Polynomial<F,B>::get_chunk_of_rotated_helper (halo2_proofs/src/poly.rs:0:0)",
"0x561da280c5c0: halo2_proofs::poly::Polynomial<F,halo2_proofs::poly::LagrangeCoeff>::get_chunk_of_rotated (halo2_proofs/src/poly.rs:229:9)",
"0x561da280c5c0: <halo2_proofs::poly::LagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::get_chunk_of_rotated (src/poly/evaluator.rs:558:9)",
"0x561da27f8072: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:156:36)",
"0x561da27f8243: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:173:31)",
"0x561da27f80a7: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:165:31)",
"0x561da2824673: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::{{closure}}::{{closure}} (src/poly/evaluator.rs:223:42)",
"0x561da2824673: rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (src/scope/mod.rs:544:47)",
"0x561da2824673: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2831ead: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2831ead: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2831ead: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2831ead: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2831ead: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2831ead: rayon_core::scope::ScopeBase::execute_job (src/scope/mod.rs:640:29)",
"0x561da2831ead: rayon_core::scope::Scope::spawn::{{closure}} (src/scope/mod.rs:544:17)",
"0x561da2831ead: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:167:9)",
"0x561da27df375: rayon_core::job::JobRef::execute (rayon-core-1.9.3/src/registry.rs:729:17)",
"0x561da27df375: rayon_core::registry::WorkerThread::execute (rayon-core-1.9.3/src/registry.rs:752:9)",
"0x561da27df375: rayon_core::registry::WorkerThread::wait_until_cold (rayon-core-1.9.3/src/registry.rs:729:17)",
"0x561da2897b0e: rayon_core::registry::WorkerThread::wait_until (rayon-core-1.9.3/src/registry.rs:703:13)",
"0x561da2897b0e: rayon_core::registry::main_loop (rayon-core-1.9.3/src/registry.rs:836:5)",
"0x561da2897b0e: rayon_core::registry::ThreadBuilder::run (rayon-core-1.9.3/src/registry.rs:55:18)",
"0x561da2898dd1: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} (rayon-core-1.9.3/src/registry.rs:100:20)",
"0x561da2898dd1: std::sys_common::backtrace::__rust_begin_short_backtrace (src/sys_common/backtrace.rs:122:18)",
"0x561da27fda89: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fda89: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fda89: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fda89: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::ExtendedLagrangeCoeff> as core::ops::arith::Mul<halo2_proofs::poly::evaluator::AstLeaf<E,halo2_proofs::poly::ExtendedLagrangeCoeff>>>::mul (src/poly/evaluator.rs:416:41)",
"0x561da27fa016: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:440:18)",
"0x561da284c618: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:539:26)",
"0x561da284c618: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284c618: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284c618: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27e3b74: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:438:9)",
"0x561da284aff0: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da284aff0: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:537:13)",
"0x561da284aff0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284aff0: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284aff0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27e3674: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:438:9)",
"0x561da2855387: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da28573cc: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:533:69)",
"0x561da27dac11: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27dac11: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:11:15)",
"0x561da27dac11: hashbrown::raw::RawTableInner<A>::new_uninitialized (src/raw/mod.rs:1080:38)",
"0x561da27dac11: hashbrown::raw::RawTableInner<A>::fallible_with_capacity (src/raw/mod.rs:1109:30)",
"0x561da27dac11: hashbrown::raw::RawTableInner<A>::prepare_resize (src/raw/mod.rs:1353:29)",
"0x561da27dac11: hashbrown::raw::RawTableInner<A>::resize_inner (src/raw/mod.rs:680:13)",
"0x561da27dac11: hashbrown::raw::RawTableInner<A>::reserve_rehash_inner (src/raw/mod.rs:1403:13)",
"0x561da27dac11: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:680:13)",
"0x561da285aa0f: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:646:16)",
"0x561da285aa0f: hashbrown::raw::RawTable<T,A>::insert (src/raw/mod.rs:725:17)",
"0x561da282c6f8: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.12.3/src/map.rs:1679:13)",
"0x561da2803f73: std::collections::hash::map::HashMap<K,V,S>::insert (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da2803f73: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da281fbba: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_region (halo2_proofs/src/circuit.rs:488:9)",
"0x561da281fbba: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance (halo2_machinelearning/src/nn_chip.rs:232:9)",
"0x561da281fbba: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:114:21)",
"0x561da2800425: <halo2_proofs::circuit::floor_planner::single_pass::SimpleFloorPlanner as halo2_proofs::plonk::circuit::FloorPlanner>::synthesize (circuit/floor_planner/single_pass.rs:35:9)",
"0x561da2844593: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:274:5)",
"0x561da28459ed: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:221:32)",
"0x561da2849c7b: halo2_proofs::plonk::circuit::compress_selectors::process::{{closure}} (plonk/circuit/compress_selectors.rs:201:34)",
"0x561da2849c7b: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da2849c7b: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da2849c7b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da283a136: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da283a136: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da283a136: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend (plonk/circuit/compress_selectors.rs:189:9)",
"0x561da283a136: halo2_proofs::plonk::circuit::compress_selectors::process (plonk/circuit/compress_selectors.rs:189:9)",
"0x561da28123b3: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1257:44)",
"0x561da27e28b6: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e28b6: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da28109d1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28109d1: halo2_proofs::plonk::circuit::VirtualCells<F>::query_advice (src/plonk/circuit.rs:1510:9)",
"0x561da28109d1: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:290:25)",
"0x561da28109d1: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da284d80c: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:33)",
"0x561da284d80c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d80c: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d80c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d80c: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d80c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da28111fc: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:321:17)",
"0x561da28111fc: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27fd74f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fd74f: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd74f: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd74f: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::ExtendedLagrangeCoeff> as core::ops::arith::Mul>::mul (src/poly/evaluator.rs:398:41)",
"0x561da27e47e0: <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:471:36)",
"0x561da27e47e0: <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/flatten.rs:51:9)",
"0x561da27f26d7: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f26d7: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f26d7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f26d7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f519f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f519f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f519f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f519f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f519f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f519f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f519f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da280a058: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/poly.rs:279:25)",
"0x561da280a058: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da280a058: halo2_proofs::poly::Polynomial<F,B>::get_chunk_of_rotated_helper (halo2_proofs/src/poly.rs:279:25)",
"0x561da27f776d: halo2_proofs::poly::domain::EvaluationDomain<G>::get_chunk_of_rotated_extended (src/poly/domain.rs:293:9)",
"0x561da27f776d: <halo2_proofs::poly::ExtendedLagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::get_chunk_of_rotated (src/poly/evaluator.rs:605:9)",
"0x561da27f776d: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:156:36)",
"0x561da27f77a2: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:165:31)",
"0x561da27f778f: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:164:35)",
"0x561da27f7943: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:173:31)",
"0x561da27f7a27: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:180:35)",
"0x561da27f792e: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:172:35)",
"0x561da2810819: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2810819: halo2_proofs::plonk::circuit::VirtualCells<F>::query_advice (src/plonk/circuit.rs:1510:9)",
"0x561da284b8f2: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:129:27)",
"0x561da284b8f2: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284b8f2: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284b8f2: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da2814edb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2814edb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da2814edb: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da2814edb: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1296:25)",
"0x561da2814edb: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:508:12)",
"0x561da2814e9a: <T as alloc::alloc::WriteCloneIntoRaw>::write_clone_into_raw (alloc/src/alloc.rs:434:31)",
"0x561da2814e9a: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1298:13)",
"0x561da2814e9a: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:504:29)",
"0x561da2814e4f: <T as alloc::alloc::WriteCloneIntoRaw>::write_clone_into_raw (alloc/src/alloc.rs:434:31)",
"0x561da2814e4f: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1298:13)",
"0x561da2814e4f: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:504:9)",
"0x561da284d934: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:33)",
"0x561da284d934: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d934: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d934: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d934: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d934: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da280b584: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280b584: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da280b584: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da280b584: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da280b584: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da280b584: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da280b584: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da280b584: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da280b584: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da280b584: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:201:55)",
"0x561da280a6ef: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:209:13)",
"0x561da27f0a5e: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f0a5e: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f0a5e: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f0a5e: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f0a5e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f0a5e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f0a5e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282ac82: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da282ac82: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da282ac82: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da282ac82: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2856ccb: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (src/plonk/prover.rs:423:61)",
"0x561da2856ccb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856ccb: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:423:61)",
"0x561da2820596: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2820596: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2820596: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2820596: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2820596: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2820596: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2820596: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2820596: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2820596: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure (src/nn_ops/eltwise_ops.rs:274:21)",
"0x561da2820596: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:65:50)",
"0x561da282228e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282228e: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da282228e: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da282228e: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da282228e: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da282228e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809452: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809452: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809452: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809452: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809452: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809452: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2820df5: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2820df5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2820df5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2820df5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2833e62: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833e62: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833e62: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833e62: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833e62: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da289b392: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (src/thread/mod.rs:504:17)",
"0x561da289b392: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da289b392: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da289b392: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da289b392: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da289b392: std::thread::Builder::spawn_unchecked_::{{closure}} (src/thread/mod.rs:503:30)",
"0x561da289b392: core::ops::function::FnOnce::call_once{{vtable.shim}} (src/ops/function.rs:248:5)",
"0x561da28d5763: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once (alloc/src/boxed.rs:1940:9)",
"0x561da28d5763: std::sys::unix::thread::Thread::new::thread_start (sys/unix/thread.rs:108:17)",
"0x561da28434f1: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28434f1: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:155:25)",
"0x561da280f8d5: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:534:25)",
"0x561da28105f4: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}}::{{closure}}::{{closure}} (plonk/lookup/prover.rs:159:33)",
"0x561da28105f4: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:595:17)",
"0x561da27ef0ef: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}}::{{closure}} (plonk/lookup/prover.rs:139:21)",
"0x561da27ef0ef: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27ef0ef: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27ef0ef: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ef0ef: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27ef0ef: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27ef0ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27ef0ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da280b12c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/lookup/prover.rs:136:45)",
"0x561da280b12c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da280b12c: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:136:45)",
"0x561da280a2bc: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:183:13)",
"0x561da2814e80: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2814e80: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da2814e80: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da2814e80: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1296:25)",
"0x561da2814e80: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:504:29)",
"0x561da27f5801: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f5801: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f5801: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f5801: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f5801: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f5801: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f5801: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28577a9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:605:38)",
"0x561da28577a9: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28577a9: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:605:38)",
"0x561da2825bf7: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2825bf7: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2825bf7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2825bf7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2825bf7: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2825bf7: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2825bf7: halo2_proofs::arithmetic::best_multiexp (halo2_proofs/src/arithmetic.rs:139:27)",
"0x561da27f7398: halo2_proofs::poly::commitment::Params<C>::commit (src/poly/commitment.rs:131:9)",
"0x561da282d98e: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:57:29)",
"0x561da2838371: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:115:5)",
"0x561da28582d8: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:725:5)",
"0x561da280a0c9: halo2_proofs::poly::Polynomial<F,B>::get_chunk_of_rotated_helper (halo2_proofs/src/poly.rs:0:0)",
"0x561da27f7d43: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse::{{closure}} (src/poly/evaluator.rs:189:36)",
"0x561da27f7d43: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f7d43: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:186:55)",
"0x561da2825863: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::{{closure}}::{{closure}} (src/poly/evaluator.rs:223:42)",
"0x561da2825863: rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (src/scope/mod.rs:544:47)",
"0x561da2825863: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da283233d: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da283233d: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da283233d: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da283233d: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da283233d: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da283233d: rayon_core::scope::ScopeBase::execute_job (src/scope/mod.rs:640:29)",
"0x561da283233d: rayon_core::scope::Scope::spawn::{{closure}} (src/scope/mod.rs:544:17)",
"0x561da283233d: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:167:9)",
"0x561da27efcbe: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27efcbe: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27efcbe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efcbe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27efcbe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27efcbe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efcbe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28084d8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/nn_ops/eltwise_ops.rs:399:33)",
"0x561da28084d8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28084d8: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}} (src/nn_ops/eltwise_ops.rs:399:33)",
"0x561da2802c72: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:112:13)",
"0x561da284e2f9: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_region (halo2_proofs/src/circuit.rs:488:9)",
"0x561da284e2f9: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt (src/nn_ops/eltwise_ops.rs:346:9)",
"0x561da284e2f9: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:340:17)",
"0x561da284e2f9: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e2f9: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e2f9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27ebcd1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27ebcd1: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27ebcd1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27ebcd1: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27ebcd1: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27ebcd1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27ebcd1: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da281fd5e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da281fd5e: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da281fd5e: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da281fd5e: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da281fd5e: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:337:9)",
"0x561da281fd5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da281fd5e: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers (halo2_machinelearning/src/nn_chip.rs:337:9)",
"0x561da281fd5e: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize::{{closure}} (halo2_machinelearning/src/lib.rs:123:17)",
"0x561da281fd5e: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da281fd5e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da281fd5e: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da281fd5e: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:120:22)",
"0x561da284595b: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:213:5)",
"0x561da27ffc54: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27ffc54: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffc54: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffc54: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Add>::add (src/poly/evaluator.rs:326:18)",
"0x561da284d778: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:33)",
"0x561da284d778: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d778: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d778: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d778: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d778: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da281543b: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da281543b: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:746:41)",
"0x561da281543b: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Sub>::sub (src/plonk/circuit.rs:746:41)",
"0x561da28eaac0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28eaac0: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28eaac0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/ffi/c_str.rs:300:17)",
"0x561da28eaac0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28eaac0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da28eaac0: alloc::ffi::c_str::CString::new::spec_new_impl_bytes (src/ffi/c_str.rs:287:30)",
"0x561da28eaac0: <&[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl (src/ffi/c_str.rs:300:17)",
"0x561da28cb4eb: alloc::ffi::c_str::CString::new (src/ffi/c_str.rs:316:9)",
"0x561da28cb4eb: std::sys::unix::os::getenv (sys/unix/os.rs:549:13)",
"0x561da28cb4eb: std::env::_var_os (std/src/env.rs:273:5)",
"0x561da28cb3a6: std::env::var_os (std/src/env.rs:269:5)",
"0x561da28cb3a6: std::env::_var (std/src/env.rs:232:11)",
"0x561da2896842: std::env::var (std/src/env.rs:228:5)",
"0x561da2896842: rayon_core::ThreadPoolBuilder<S>::get_num_threads (rayon-core-1.9.3/src/lib.rs:425:19)",
"0x561da2898145: rayon_core::registry::Registry::new (rayon-core-1.9.3/src/registry.rs:218:34)",
"0x561da284d8a0: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:33)",
"0x561da284d8a0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d8a0: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d8a0: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d8a0: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d8a0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da28153fc: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28153fc: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:726:29)",
"0x561da28153fc: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Neg>::neg (src/plonk/circuit.rs:726:29)",
"0x561da28153fc: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Sub>::sub (src/plonk/circuit.rs:746:50)",
"0x561da28131ea: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28131ea: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:278:17)",
"0x561da28131ea: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup (src/plonk/circuit.rs:1066:25)",
"0x561da28205fd: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure (src/nn_ops/eltwise_ops.rs:275:13)",
"0x561da28205fd: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:65:50)",
"0x561da2811100: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:322:60)",
"0x561da2811100: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27fa422: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:462:49)",
"0x561da284d9d4: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:144:33)",
"0x561da284d9d4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d9d4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d9d4: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d9d4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d9d4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f4d5f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4d5f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4d5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4d5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4d5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4d5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4d5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282041c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/lib.rs:55:48)",
"0x561da282041c: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282041c: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:55:48)",
"0x561da280fb52: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:573:25)",
"0x561da28204ab: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28204ab: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28204ab: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da28204ab: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28204ab: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da28204ab: alloc::slice::hack::to_vec (src/vec/mod.rs:2985:9)",
"0x561da28204ab: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da28204ab: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:413:9)",
"0x561da28204ab: <alloc::vec::Vec<T> as core::convert::From<&[T]>>::from (src/vec/mod.rs:2985:9)",
"0x561da28204ab: <T as core::convert::Into<U>>::into (src/convert/mod.rs:552:9)",
"0x561da28204ab: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:68:13)",
"0x561da282e293: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:108:19)",
"0x561da2849c63: halo2_proofs::plonk::circuit::compress_selectors::process::{{closure}} (plonk/circuit/compress_selectors.rs:201:47)",
"0x561da2849c63: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da2849c63: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da2849c63: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f5fc4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f5fc4: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f5fc4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/poly/commitment.rs:142:31)",
"0x561da27f5fc4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f5fc4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f5fc4: halo2_proofs::poly::commitment::Params<C>::commit_lagrange (src/poly/commitment.rs:142:31)",
"0x561da280b6f6: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:203:30)",
"0x561da27f1cd3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f1cd3: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f1cd3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1cd3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f1cd3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f1cd3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1cd3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2856815: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:343:32)",
"0x561da2856815: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856815: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:343:32)",
"0x561da27d9580: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27d9580: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da27e3b12: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3b12: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3b12: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3b12: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:434:13)",
"0x561da28206ee: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28206ee: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:73:22)",
"0x561da27f6022: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f6022: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f6022: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/poly/commitment.rs:143:29)",
"0x561da27f6022: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f6022: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f6022: halo2_proofs::poly::commitment::Params<C>::commit_lagrange (src/poly/commitment.rs:143:29)",
"0x561da2815e3e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2815e3e: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:199:13)",
"0x561da27f7222: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f7222: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f7222: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/poly/commitment.rs:123:29)",
"0x561da27f7222: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f7222: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f7222: halo2_proofs::poly::commitment::Params<C>::commit (src/poly/commitment.rs:123:29)",
"0x561da2837754: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:91:30)",
"0x561da28093b5: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:629:9)",
"0x561da2825962: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2825962: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2825962: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2825962: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2850c1e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2850c1e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2850c1e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2850c1e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2850c1e: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2850c1e: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2850c1e: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:98:17)",
"0x561da2850c1e: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da2850c1e: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da2850c1e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da28113d0: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:325:31)",
"0x561da28113d0: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27f2991: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f2991: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f2991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f2991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f2991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f2991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f2991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2805468: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2805468: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2805468: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2805468: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2805468: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:269:25)",
"0x561da2805468: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2805468: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:269:25)",
"0x561da28016f9: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:91:13)",
"0x561da281fccc: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_region (halo2_proofs/src/circuit.rs:488:9)",
"0x561da281fccc: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers (halo2_machinelearning/src/nn_chip.rs:258:26)",
"0x561da281fccc: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize::{{closure}} (halo2_machinelearning/src/lib.rs:123:17)",
"0x561da281fccc: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da281fccc: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da281fccc: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da281fccc: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:120:22)",
"0x561da27fa6c2: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:472:17)",
"0x561da27ef1d7: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ef1d7: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ef1d7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef1d7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ef1d7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ef1d7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef1d7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282645a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/arithmetic.rs:14:26)",
"0x561da282645a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282645a: halo2_proofs::arithmetic::multiexp_serial (halo2_proofs/src/arithmetic.rs:14:26)",
"0x561da2831b6f: halo2_proofs::arithmetic::best_multiexp::{{closure}}::{{closure}} (halo2_proofs/src/arithmetic.rs:149:21)",
"0x561da2831b6f: rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (src/scope/mod.rs:544:47)",
"0x561da2831b6f: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2831b6f: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2831b6f: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2831b6f: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2831b6f: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2831b6f: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2831b6f: rayon_core::scope::ScopeBase::execute_job (src/scope/mod.rs:640:29)",
"0x561da2831b6f: rayon_core::scope::Scope::spawn::{{closure}} (src/scope/mod.rs:544:17)",
"0x561da2831b6f: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:167:9)",
"0x561da28092f5: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:629:9)",
"0x561da2823f52: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2823f52: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2823f52: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2823f52: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2832fbf: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2832fbf: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2832fbf: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2832fbf: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2832fbf: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da27f7563: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f7563: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f7563: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f7563: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f7563: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f7563: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f7563: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange (src/poly/domain.rs:179:21)",
"0x561da27f7563: <halo2_proofs::poly::LagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::empty_poly (src/poly/evaluator.rs:520:9)",
"0x561da27f7563: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate (src/poly/evaluator.rs:212:26)",
"0x561da27f4c53: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}}::{{closure}} (plonk/lookup/prover.rs:174:32)",
"0x561da27f4c53: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f4c53: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f4c53: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f4c53: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f4c53: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f4c53: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f4c53: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da280b30f: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/lookup/prover.rs:172:17)",
"0x561da280b30f: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da280b30f: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:172:17)",
"0x561da280a31f: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:187:13)",
"0x561da284951a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da284951a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da284951a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da284951a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da284951a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da284951a: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da284951a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da284951a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da284951a: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da284951a: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:390:59)",
"0x561da284951a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284951a: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284951a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f54e3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f54e3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f54e3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f54e3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f56fc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:387:13)",
"0x561da27f56fc: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27f56fc: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:387:13)",
"0x561da27f56fc: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f56fc: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f56fc: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f56fc: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f56fc: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f56fc: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f56fc: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da285694a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:384:33)",
"0x561da285694a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da285694a: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:384:33)",
"0x561da27eab96: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eab96: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eab96: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eab96: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eab96: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eab96: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eab96: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da28132c2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/circuit.rs:1066:25)",
"0x561da28132c2: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28132c2: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup (src/plonk/circuit.rs:1066:25)",
"0x561da284db7e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da284db7e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da284db7e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da284db7e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da284db7e: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da284db7e: alloc::slice::hack::to_vec (src/plonk/prover.rs:110:65)",
"0x561da284db7e: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da284db7e: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:413:9)",
"0x561da284db7e: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:110:65)",
"0x561da284db7e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284db7e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284db7e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f20fe: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f20fe: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f20fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f20fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27e30d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e30d1: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da2842820: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2842820: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:244:13)",
"0x561da283681a: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:39:34)",
"0x561da289419c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289419c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289419c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da289419c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da289419c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da289419c: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da289419c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da289419c: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da289419c: <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next (src/vec/mod.rs:2379:9)",
"0x561da289419c: alloc::vec::Vec<T,A>::extend_with (src/vec/mod.rs:2411:33)",
"0x561da289419c: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:16:9)",
"0x561da289419c: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28950ec: halo2_proofs::plonk::permutation::keygen::Assembly::new (plonk/permutation/keygen.rs:39:20)",
"0x561da28456a4: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:206:22)",
"0x561da27fff32: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fff32: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fff32: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fff32: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Neg>::neg (src/poly/evaluator.rs:310:20)",
"0x561da27fa68a: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da27fa68a: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:472:17)",
"0x561da28399c6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28399c6: halo2_proofs::plonk::circuit::compress_selectors::process (plonk/circuit/compress_selectors.rs:143:31)",
"0x561da27f0db1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f0db1: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f0db1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0db1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f0db1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f0db1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0db1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282fc52: halo2_proofs::poly::domain::EvaluationDomain<G>::ifft (src/poly/domain.rs:375:9)",
"0x561da282fc52: halo2_proofs::poly::domain::EvaluationDomain<G>::lagrange_to_coeff (src/poly/domain.rs:230:9)",
"0x561da2844abc: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:307:14)",
"0x561da284a2b6: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:314:39)",
"0x561da284a2b6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:21)",
"0x561da284a2b6: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284a2b6: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284a2b6: <core::iter::adapters::skip::Skip<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/skip.rs:126:9)",
"0x561da284a2b6: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284a2b6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da2810edf: core::iter::traits::iterator::Iterator::reduce (iter/traits/iterator.rs:2459:14)",
"0x561da2810edf: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:306:29)",
"0x561da2810edf: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da2894099: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2894099: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2894099: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2894099: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2894099: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2894099: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da282bcf3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da282bcf3: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da282bcf3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da282bcf3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da282bcf3: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da28265be: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28265be: halo2_proofs::arithmetic::multiexp_serial (halo2_proofs/src/arithmetic.rs:82:43)",
"0x561da27eb981: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eb981: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eb981: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eb981: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eb981: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eb981: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eb981: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da282c819: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/examples/mlp_4d.rs:35:21)",
"0x561da282c819: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282c819: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:35:21)",
"0x561da284d8b5: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:140:29)",
"0x561da284d8b5: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d8b5: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d8b5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d8b5: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d8b5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da280f651: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da280f651: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:726:29)",
"0x561da280f651: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Neg>::neg (src/plonk/circuit.rs:726:29)",
"0x561da280f651: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::replace_selectors::{{closure}} (src/plonk/circuit.rs:1318:22)",
"0x561da280f651: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:545:17)",
"0x561da281241d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da281241d: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da281241d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da281241d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da281241d: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da281241d: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da281241d: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1282:32)",
"0x561da27f0421: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f0421: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f0421: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0421: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f0421: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f0421: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0421: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2805558: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2805558: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2805558: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2805558: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2805558: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:282:25)",
"0x561da2805558: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2805558: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:282:25)",
"0x561da27e2a81: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e2a81: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da2810c26: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2810c26: halo2_proofs::plonk::circuit::VirtualCells<F>::query_selector (src/plonk/circuit.rs:1494:9)",
"0x561da2810c26: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:294:25)",
"0x561da2810c26: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da28207bd: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28207bd: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28207bd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da28207bd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28207bd: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da28207bd: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da28207bd: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da28207bd: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da28207bd: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeConfig<F,_,_> as core::clone::Clone>::clone (src/nn_ops/eltwise_ops.rs:227:5)",
"0x561da28207bd: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as core::clone::Clone>::clone (halo2_machinelearning/src/lib.rs:80:17)",
"0x561da28207bd: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:80:17)",
"0x561da2811ad6: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2811ad6: halo2_proofs::plonk::circuit::VirtualCells<F>::query_selector (src/plonk/circuit.rs:1494:9)",
"0x561da2811ad6: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}} (halo2_machinelearning/src/nn_chip.rs:125:21)",
"0x561da2811ad6: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27f2efd: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f2efd: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f2efd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f2efd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f2efd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f2efd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f2efd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27e27d2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e27d2: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da280112c: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da280112c: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_table (circuit/floor_planner/single_pass.rs:189:13)",
"0x561da281f9d6: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_table (halo2_proofs/src/circuit.rs:497:9)",
"0x561da281f9d6: halo2_machinelearning::nn_ops::lookup_ops::DecompTable<F,_>::layout (src/nn_ops/lookup_ops.rs:24:9)",
"0x561da281f9d6: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:105:9)",
"0x561da289d528: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:0:0)",
"0x561da27dfbf1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27dfbf1: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da2899c84: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da2899c84: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da2899c84: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da2899c84: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:434:13)",
"0x561da2899c84: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da28228f1: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28228f1: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da28228f1: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da28228f1: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da28228f1: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da28228f1: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809b12: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809b12: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809b12: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809b12: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809b12: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809b12: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da28236b5: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da28236b5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da28236b5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da28236b5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2833c12: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833c12: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833c12: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833c12: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833c12: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da2814d7e: <T as alloc::alloc::WriteCloneIntoRaw>::write_clone_into_raw (alloc/src/alloc.rs:434:31)",
"0x561da2814d7e: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1298:13)",
"0x561da2814d7e: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:506:33)",
"0x561da280f610: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::replace_selectors::{{closure}} (src/plonk/circuit.rs:1313:21)",
"0x561da280f610: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:529:47)",
"0x561da280f54e: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:573:25)",
"0x561da284d9e4: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:144:21)",
"0x561da284d9e4: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d9e4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d9e4: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d9e4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d9e4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f4f7e: halo2_proofs::plonk::keygen::keygen_vk::{{closure}} (src/plonk/keygen.rs:234:21)",
"0x561da27f4f7e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f4f7e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f4f7e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f4f7e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f4f7e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f4f7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f4f7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2845bbc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/keygen.rs:232:29)",
"0x561da2845bbc: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2845bbc: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:232:29)",
"0x561da27fa5af: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:466:22)",
"0x561da27f7bbf: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f7bbf: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f7bbf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f7bbf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f7bbf: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f7bbf: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f7bbf: <halo2_proofs::poly::ExtendedLagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::constant_term (src/poly/evaluator.rs:573:9)",
"0x561da27f7bbf: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:205:21)",
"0x561da282548e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282548e: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da282548e: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da282548e: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da282548e: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da282548e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809bd2: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809bd2: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809bd2: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809bd2: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809bd2: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809bd2: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da28231c5: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da28231c5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da28231c5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da28231c5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da28330e2: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da28330e2: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da28330e2: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da28330e2: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da28330e2: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da2816731: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2816731: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2816731: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2816731: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2816731: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2816731: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2816731: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange (src/poly/domain.rs:179:21)",
"0x561da2816731: halo2_proofs::plonk::permutation::keygen::Assembly::build_vk (plonk/permutation/keygen.rs:137:40)",
"0x561da2845b7e: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:228:26)",
"0x561da2811169: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:323:27)",
"0x561da2811169: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27f558a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f558a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f558a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f558a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f558a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f558a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f558a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27eeffb: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eeffb: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eeffb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eeffb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eeffb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eeffb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eeffb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fa07e: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da27fa07e: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:440:17)",
"0x561da27e2fe5: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e2fe5: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da281337f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da281337f: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup (src/plonk/circuit.rs:1081:9)",
"0x561da27eea63: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eea63: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eea63: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eea63: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eea63: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eea63: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eea63: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f596b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:365:13)",
"0x561da27f596b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27f596b: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:365:13)",
"0x561da27f596b: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f596b: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f596b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f596b: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f596b: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f596b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f596b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f1a5a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f1a5a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f1a5a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1a5a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f1a5a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f1a5a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1a5a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2844790: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/keygen.rs:294:24)",
"0x561da2844790: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2844790: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:294:24)",
"0x561da27ee759: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ee759: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ee759: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ee759: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ee759: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ee759: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ee759: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2809e97: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/poly.rs:157:5)",
"0x561da2809e97: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2809e97: halo2_proofs::poly::batch_invert_assigned (halo2_proofs/src/poly.rs:157:5)",
"0x561da28445d2: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:281:21)",
"0x561da27d9825: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27d9825: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da27e3c2d: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3c2d: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3c2d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3c2d: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:435:13)",
"0x561da28114f9: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da28114f9: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1209:54)",
"0x561da27eb514: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eb514: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eb514: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27eb514: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eb514: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eb514: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27eb514: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da289ca89: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da289ca89: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da289ca89: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da289ca89: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.2/src/deque.rs:247:21)",
"0x561da27f6198: halo2_proofs::poly::commitment::Params<C>::commit_lagrange (src/poly/commitment.rs:151:9)",
"0x561da27efe70: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:95:29)",
"0x561da27efe70: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27efe70: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27efe70: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27efe70: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27efe70: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27efe70: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27efe70: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2850ba1: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:93:59)",
"0x561da2850ba1: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2850ba1: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:93:59)",
"0x561da2850ba1: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da2850ba1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da2850ba1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f4289: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da27f4289: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:255:25)",
"0x561da27f4289: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f4289: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27f4289: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27f4289: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f4289: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28391dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/permutation/prover.rs:250:17)",
"0x561da28391dc: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28391dc: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:250:17)",
"0x561da284a79e: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:517:13)",
"0x561da284a79e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284a79e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284a79e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27e377a: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:438:9)",
"0x561da27f4038: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4038: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4038: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f4038: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4038: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4038: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f4038: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da280f901: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}}::{{closure}}::{{closure}} (src/plonk/prover.rs:574:38)",
"0x561da280f901: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:545:17)",
"0x561da27f5b43: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f5b43: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f5b43: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f5b43: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f5b43: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f5b43: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f5b43: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2803c86: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2803c86: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2803c86: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2803c86: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2803c86: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2803c86: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2803c86: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance::{{closure}} (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2803c86: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:91:13)",
"0x561da27d90f1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27d90f1: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da27e3c10: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3c10: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3c10: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3c10: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:434:13)",
"0x561da2811cb5: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da2811cb5: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1209:54)",
"0x561da27efaa8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27efaa8: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27efaa8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efaa8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27efaa8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27efaa8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efaa8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284e952: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:301:41)",
"0x561da284e952: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284e952: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:301:41)",
"0x561da284e952: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e952: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e952: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da289cd84: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da289cd84: alloc::boxed::Box<T>::new (crossbeam-deque-0.8.2/src/deque.rs:1293:35)",
"0x561da289cd84: crossbeam_deque::deque::Injector<T>::push (crossbeam-deque-0.8.2/src/deque.rs:1293:35)",
"0x561da28989af: rayon_core::registry::Registry::inject (rayon-core-1.9.3/src/registry.rs:402:13)",
"0x561da283b8d6: rayon_core::registry::Registry::in_worker_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:472:13)",
"0x561da283b8d6: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:445:16)",
"0x561da283b8d6: std::thread::local::LocalKey<T>::with (src/thread/local.rs:421:9)",
"0x561da2853334: rayon_core::registry::Registry::in_worker_cold (rayon-core-1.9.3/src/registry.rs:461:9)",
"0x561da2853334: rayon_core::registry::in_worker (rayon-core-1.9.3/src/registry.rs:879:13)",
"0x561da282f7f4: rayon_core::scope::scope (src/scope/mod.rs:308:5)",
"0x561da282f7f4: halo2_proofs::arithmetic::parallelize (halo2_proofs/src/arithmetic.rs:332:5)",
"0x561da282f7f4: halo2_proofs::poly::domain::EvaluationDomain<G>::distribute_powers_zeta (src/poly/domain.rs:362:9)",
"0x561da282f7f4: halo2_proofs::poly::domain::EvaluationDomain<G>::coeff_to_extended (src/poly/domain.rs:246:9)",
"0x561da280ab33: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:222:28)",
"0x561da280abee: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280abee: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da280abee: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da280abee: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da280abee: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da280abee: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da280abee: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da280abee: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da280abee: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da280abee: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:224:59)",
"0x561da27f995a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f995a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f995a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27f995a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f995a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27f995a: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27f995a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27f995a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da27f995a: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da27f995a: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:397:84)",
"0x561da27d92c6: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27d92c6: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da27e3612: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3612: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3612: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3612: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:434:13)",
"0x561da2838fa9: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:237:38)",
"0x561da2838fa9: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da2838fa9: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:235:17)",
"0x561da28128f7: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::replace_selectors (src/plonk/circuit.rs:1303:21)",
"0x561da28128f7: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1338:13)",
"0x561da28130fc: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28130fc: halo2_proofs::plonk::circuit::VirtualCells<F>::query_advice (src/plonk/circuit.rs:1510:9)",
"0x561da28130fc: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:277:28)",
"0x561da28130fc: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup (src/plonk/circuit.rs:1066:25)",
"0x561da2844fce: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:323:18)",
"0x561da28456c1: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:242:9)",
"0x561da28456c1: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:186:38)",
"0x561da28456c1: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (src/vec/spec_from_elem.rs:25:31)",
"0x561da28456c1: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x561da28456c1: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28456c1: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:207:25)",
"0x561da27eb31b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eb31b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eb31b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eb31b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eb31b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eb31b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eb31b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da2812659: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/circuit.rs:1289:29)",
"0x561da2812659: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2812659: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1289:29)",
"0x561da28111d2: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:323:27)",
"0x561da28111d2: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da281c781: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da281c781: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da281c781: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da281c781: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x561da281c781: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1169:32)",
"0x561da281c781: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:948:30)",
"0x561da281c781: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:985:27)",
"0x561da283e534: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:362:35)",
"0x561da283e534: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert (btree/map/entry.rs:165:30)",
"0x561da27fb451: halo2_proofs::plonk::lookup::prover::permute_expression_pair::{{closure}} (plonk/lookup/prover.rs:608:14)",
"0x561da27fb451: <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::fold::ok::{{closure}} (iter/adapters/take.rs:109:30)",
"0x561da27fb451: <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::try_fold::check::{{closure}} (iter/adapters/take.rs:88:25)",
"0x561da27fb451: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27fb451: <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/take.rs:97:13)",
"0x561da27fb451: <core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/take.rs:112:9)",
"0x561da27fb451: halo2_proofs::plonk::lookup::prover::permute_expression_pair (plonk/lookup/prover.rs:604:60)",
"0x561da280a39f: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:190:70)",
"0x561da27f4870: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4870: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4870: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4870: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4870: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4870: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4870: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fc4a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/vanishing/prover.rs:102:48)",
"0x561da27fc4a6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27fc4a6: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:102:48)",
"0x561da28112f8: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:325:50)",
"0x561da28112f8: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27fa2d3: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:453:23)",
"0x561da282ca63: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282ca63: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:48:27)",
"0x561da2813096: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2813096: halo2_proofs::plonk::circuit::VirtualCells<F>::query_selector (src/plonk/circuit.rs:1494:9)",
"0x561da2813096: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:276:29)",
"0x561da2813096: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup (src/plonk/circuit.rs:1066:25)",
"0x561da27f9f8d: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da27f9f8d: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:437:25)",
"0x561da280b5e1: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:201:24)",
"0x561da280b342: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:177:17)",
"0x561da27d9737: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27d9737: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da2806717: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da2806717: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da2806717: alloc::vec::Vec<T,A>::extend_with (src/vec/mod.rs:2400:9)",
"0x561da2806717: alloc::vec::Vec<T,A>::resize (src/vec/mod.rs:2256:13)",
"0x561da2806717: <halo2_proofs::circuit::floor_planner::single_pass::SimpleTableLayouter<F,CS> as halo2_proofs::circuit::layouter::TableLayouter<F>>::assign_cell (circuit/floor_planner/single_pass.rs:445:13)",
"0x561da2800eaa: halo2_proofs::circuit::Table<F>::assign_cell (halo2_proofs/src/circuit.rs:386:9)",
"0x561da2800eaa: halo2_machinelearning::nn_ops::lookup_ops::DecompTable<F,_>::layout::{{closure}} (src/nn_ops/lookup_ops.rs:29:21)",
"0x561da2800eaa: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_table (circuit/floor_planner/single_pass.rs:161:13)",
"0x561da27da50c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27da50c: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:11:15)",
"0x561da27da50c: hashbrown::raw::RawTableInner<A>::new_uninitialized (src/raw/mod.rs:1080:38)",
"0x561da27da50c: hashbrown::raw::RawTableInner<A>::fallible_with_capacity (src/raw/mod.rs:1109:30)",
"0x561da27da50c: hashbrown::raw::RawTableInner<A>::prepare_resize (src/raw/mod.rs:1353:29)",
"0x561da27da50c: hashbrown::raw::RawTableInner<A>::resize_inner (src/raw/mod.rs:680:13)",
"0x561da27da50c: hashbrown::raw::RawTableInner<A>::reserve_rehash_inner (src/raw/mod.rs:1403:13)",
"0x561da27da50c: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:680:13)",
"0x561da285a8b8: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:646:16)",
"0x561da285a8b8: hashbrown::raw::RawTable<T,A>::insert (src/raw/mod.rs:725:17)",
"0x561da282c528: hashbrown::map::HashMap<K,V,S,A>::insert (hashbrown-0.12.3/src/map.rs:1679:13)",
"0x561da2836426: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.12.3/src/set.rs:1032:9)",
"0x561da2836426: std::collections::hash::set::HashSet<T,S>::insert (src/circuit/layouter.rs:219:9)",
"0x561da2836426: <halo2_proofs::circuit::layouter::RegionShape as halo2_proofs::circuit::layouter::RegionLayouter<F>>::assign_advice (src/circuit/layouter.rs:219:9)",
"0x561da284923a: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da284923a: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:325:29)",
"0x561da284923a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284923a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284923a: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284923a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284923a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f38e7: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f38e7: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f38e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f38e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2805fab: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/nn_chip.rs:321:69)",
"0x561da2805fab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2805fab: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:321:69)",
"0x561da2894f13: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2894f13: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2894f13: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2894f13: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2894f13: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2894f13: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2894f13: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2894f13: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2894f13: halo2_proofs::plonk::permutation::keygen::Assembly::new (plonk/permutation/keygen.rs:36:22)",
"0x561da27fb59e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27fb59e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27fb59e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fb59e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27fb59e: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fb59e: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27fb59e: halo2_proofs::plonk::lookup::prover::permute_expression_pair (plonk/lookup/prover.rs:611:37)",
"0x561da281325e: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:278:23)",
"0x561da281325e: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup (src/plonk/circuit.rs:1066:25)",
"0x561da285560c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da285560c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da285560c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (ff-0.12.0/src/batch.rs:36:23)",
"0x561da285560c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da285560c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da285560c: <I as ff::batch::BatchInvert<F>>::batch_invert (ff-0.12.0/src/batch.rs:36:23)",
"0x561da28309fe: halo2_proofs::poly::domain::EvaluationDomain<G>::new (src/poly/domain.rs:117:9)",
"0x561da2845415: halo2_proofs::plonk::keygen::create_domain (src/plonk/keygen.rs:41:18)",
"0x561da2845415: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:197:32)",
"0x561da283660b: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.12.3/src/set.rs:1032:9)",
"0x561da283660b: std::collections::hash::set::HashSet<T,S>::insert (src/circuit/layouter.rs:248:9)",
"0x561da283660b: <halo2_proofs::circuit::layouter::RegionShape as halo2_proofs::circuit::layouter::RegionLayouter<F>>::assign_advice_from_instance (src/circuit/layouter.rs:248:9)",
"0x561da2817b44: halo2_proofs::circuit::Region<F>::assign_advice_from_instance (halo2_proofs/src/circuit.rs:288:29)",
"0x561da27f31b1: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:237:25)",
"0x561da27f31b1: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da27f31b1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27f31b1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f31b1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f31b1: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f31b1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f31b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f31b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2804941: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2804941: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2804941: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2804941: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2804941: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2804941: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2804941: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance::{{closure}} (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2804941: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:91:13)",
"0x561da281f247: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_region (halo2_proofs/src/circuit.rs:488:9)",
"0x561da281f247: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance (halo2_machinelearning/src/nn_chip.rs:232:9)",
"0x561da281f247: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:114:21)",
"0x561da27f3c01: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f3c01: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f3c01: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f3c01: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f3c01: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f3c01: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f3c01: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2805d08: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2805d08: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2805d08: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2805d08: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2805d08: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:282:25)",
"0x561da2805d08: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2805d08: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:282:25)",
"0x561da27ffe2f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27ffe2f: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffe2f: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffe2f: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Add>::add (src/poly/evaluator.rs:326:34)",
"0x561da280b28a: <&halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Add>::add (src/poly/evaluator.rs:334:9)",
"0x561da280b28a: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}}::{{closure}} (plonk/lookup/prover.rs:168:35)",
"0x561da280b28a: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da280b28a: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:166:41)",
"0x561da280a771: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:213:13)",
"0x561da27f4c09: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4c09: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4c09: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4c09: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4c09: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4c09: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4c09: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da281121b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da281121b: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:320:13)",
"0x561da281121b: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da284d1d1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da284d1d1: halo2_proofs::plonk::circuit::ConstraintSystem<F>::advice_column (src/plonk/circuit.rs:1386:9)",
"0x561da284d1d1: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure::{{closure}} (halo2_machinelearning/src/lib.rs:48:27)",
"0x561da284d1d1: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d1d1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d1d1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ef6b4: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27ef6b4: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27ef6b4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27ef6b4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28203f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/lib.rs:46:48)",
"0x561da28203f4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28203f4: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:46:48)",
"0x561da289785f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da289785f: alloc::boxed::Box<T>::new (crossbeam-deque-0.8.2/src/deque.rs:1232:35)",
"0x561da289785f: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (crossbeam-deque-0.8.2/src/deque.rs:1232:35)",
"0x561da289785f: crossbeam_deque::deque::Injector<T>::new (crossbeam-deque-0.8.2/src/deque.rs:1258:9)",
"0x561da289785f: rayon_core::job::JobFifo::new (rayon-core-1.9.3/src/job.rs:193:20)",
"0x561da289785f: rayon_core::registry::main_loop (rayon-core-1.9.3/src/registry.rs:805:15)",
"0x561da289785f: rayon_core::registry::ThreadBuilder::run (rayon-core-1.9.3/src/registry.rs:55:18)",
"0x561da2825ab7: halo2_proofs::arithmetic::best_multiexp (halo2_proofs/src/arithmetic.rs:156:9)",
"0x561da282e5f6: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:113:26)",
"0x561da289445f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289445f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289445f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:136:27)",
"0x561da289445f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da289445f: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:136:27)",
"0x561da289445f: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da289445f: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da289445f: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2894f56: halo2_proofs::plonk::permutation::keygen::Assembly::new (plonk/permutation/keygen.rs:37:22)",
"0x561da2893bb8: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:0:0)",
"0x561da2893d66: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da2893d66: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da2894d3f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2894d3f: halo2_proofs::plonk::permutation::keygen::Assembly::new (plonk/permutation/keygen.rs:29:13)",
"0x561da284edd4: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da284edd4: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da284edd4: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:1835:9)",
"0x561da284edd4: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:85:18)",
"0x561da284edd4: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2284:9)",
"0x561da284edd4: std::io::impls::<impl std::io::Write for alloc::vec::Vec<u8,A>>::write_all (src/io/impls.rs:405:9)",
"0x561da284edd4: <halo2_proofs::transcript::Blake2bWrite<W,C,halo2_proofs::transcript::Challenge255<C>> as halo2_proofs::transcript::TranscriptWrite<C,halo2_proofs::transcript::Challenge255<C>>>::write_point (halo2_proofs/src/transcript.rs:181:9)",
"0x561da284edd4: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:316:17)",
"0x561da284edd4: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284edd4: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284edd4: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da2802989: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:91:13)",
"0x561da27ebadb: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27ebadb: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27ebadb: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27ebadb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27ebadb: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da28967b7: std::env::var (std/src/env.rs:228:5)",
"0x561da28967b7: rayon_core::ThreadPoolBuilder<S>::get_num_threads (rayon-core-1.9.3/src/lib.rs:415:19)",
"0x561da28364c9: hashbrown::set::HashSet<T,S,A>::insert (hashbrown-0.12.3/src/set.rs:1032:9)",
"0x561da28364c9: std::collections::hash::set::HashSet<T,S>::insert (src/circuit/layouter.rs:207:9)",
"0x561da28364c9: <halo2_proofs::circuit::layouter::RegionShape as halo2_proofs::circuit::layouter::RegionLayouter<F>>::enable_selector (src/circuit/layouter.rs:207:9)",
"0x561da28053f7: halo2_proofs::circuit::Region<F>::enable_selector (halo2_proofs/src/circuit.rs:203:9)",
"0x561da28053f7: halo2_proofs::plonk::circuit::Selector::enable (src/plonk/circuit.rs:262:9)",
"0x561da28053f7: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:264:17)",
"0x561da283909e: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da283909e: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:242:17)",
"0x561da283909e: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da283909e: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:241:20)",
"0x561da27fa379: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:463:23)",
"0x561da27f98c0: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:395:34)",
"0x561da280c54f: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/poly.rs:279:25)",
"0x561da280c54f: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da280c54f: halo2_proofs::poly::Polynomial<F,B>::get_chunk_of_rotated_helper (halo2_proofs/src/poly.rs:279:25)",
"0x561da280c54f: halo2_proofs::poly::Polynomial<F,halo2_proofs::poly::LagrangeCoeff>::get_chunk_of_rotated (halo2_proofs/src/poly.rs:229:9)",
"0x561da280c54f: <halo2_proofs::poly::LagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::get_chunk_of_rotated (src/poly/evaluator.rs:558:9)",
"0x561da2820925: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2820925: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2820925: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2820925: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2820925: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2820925: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2820925: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2820925: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2820925: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeConfig<F,_,_> as core::clone::Clone>::clone (src/nn_ops/eltwise_ops.rs:227:5)",
"0x561da2820925: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as core::clone::Clone>::clone (halo2_machinelearning/src/lib.rs:88:17)",
"0x561da2820925: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:88:17)",
"0x561da283cfb5: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:9)",
"0x561da283cfb5: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:307:25)",
"0x561da283cfb5: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27e909b: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27e909b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27e909b: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next::{{closure}} (iter/adapters/chain.rs:50:67)",
"0x561da27e909b: core::option::Option<T>::or_else (core/src/option.rs:1371:21)",
"0x561da27e909b: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::next (iter/adapters/chain.rs:50:9)",
"0x561da27e909b: core::ops::function::FnOnce::call_once (src/ops/function.rs:248:5)",
"0x561da27e909b: core::iter::adapters::chain::and_then_or_clear (iter/adapters/chain.rs:287:13)",
"0x561da27e909b: core::iter::adapters::flatten::and_then_or_clear (iter/adapters/flatten.rs:695:13)",
"0x561da27ef46b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ef46b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ef46b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef46b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ef46b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ef46b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef46b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da280b0f8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/lookup/prover.rs:107:50)",
"0x561da280b0f8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da280b0f8: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:107:50)",
"0x561da27fa408: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:464:23)",
"0x561da28120e6: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28120e6: halo2_proofs::plonk::circuit::ConstraintSystem<F>::query_instance_index (src/plonk/circuit.rs:1127:9)",
"0x561da28120e6: halo2_proofs::plonk::circuit::ConstraintSystem<F>::query_any_index (src/plonk/circuit.rs:1137:17)",
"0x561da2820378: halo2_proofs::plonk::circuit::ConstraintSystem<F>::enable_equality (src/plonk/circuit.rs:1053:9)",
"0x561da2820378: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:42:9)",
"0x561da27f3a4c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f3a4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f3a4c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27f3a4c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f3a4c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27f3a4c: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27f3a4c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27f3a4c: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da27f3a4c: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da27f3a4c: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:225:47)",
"0x561da27f3a4c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f3a4c: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f3a4c: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f3a4c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f3a4c: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f3a4c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f3a4c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2838ecb: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/permutation/prover.rs:221:19)",
"0x561da2838ecb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2838ecb: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:221:19)",
"0x561da2843993: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2843993: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2843993: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2843993: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2843993: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2843993: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2843993: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2843993: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2843993: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da2843993: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:175:44)",
"0x561da27fa48b: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:16)",
"0x561da27fa48b: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:466:22)",
"0x561da281137b: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:325:81)",
"0x561da281137b: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27fa188: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:451:21)",
"0x561da27f6291: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f6291: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f6291: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/poly/commitment.rs:50:25)",
"0x561da27f6291: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f6291: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f6291: halo2_proofs::poly::commitment::Params<C>::new (src/poly/commitment.rs:50:25)",
"0x561da282cb82: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:62:18)",
"0x561da2809175: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:629:9)",
"0x561da27f6c17: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f6c17: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f6c17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f6c17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f6c17: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f6c17: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f6c17: halo2_proofs::poly::commitment::Params<C>::new (src/poly/commitment.rs:93:34)",
"0x561da284430a: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:267:22)",
"0x561da280e1c7: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280e1c7: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da280e1c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da280e1c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da280e1c7: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da28124f5: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28124f5: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1283:41)",
"0x561da27efde0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27efde0: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27efde0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efde0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27efde0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27efde0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efde0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2845003: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:324:18)",
"0x561da283ce9f: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::ExtendedLagrangeCoeff> as core::ops::arith::MulAssign>::mul_assign (src/poly/evaluator.rs:438:17)",
"0x561da283ce9f: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:301:29)",
"0x561da283ce9f: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da282c727: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282c727: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:23:18)",
"0x561da285620e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da285620e: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da285620e: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da285620e: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1296:25)",
"0x561da285620e: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:502:13)",
"0x561da284d70d: halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_>::configure::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:138:33)",
"0x561da284d70d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d70d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284d70d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d70d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284d70d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da28399f4: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28399f4: halo2_proofs::plonk::circuit::compress_selectors::process (plonk/circuit/compress_selectors.rs:144:37)",
"0x561da27f23f3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f23f3: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f23f3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f23f3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f23f3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f23f3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f23f3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f1bbf: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:353:13)",
"0x561da27f1bbf: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27f1bbf: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:353:13)",
"0x561da27f1bbf: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f1bbf: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f1bbf: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f1bbf: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f1bbf: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f1bbf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f1bbf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2856865: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:350:33)",
"0x561da2856865: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856865: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:350:33)",
"0x561da280b1f4: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da280b1f4: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da280b1f4: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da280b1f4: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Mul<F>>::mul (src/poly/evaluator.rs:424:20)",
"0x561da280b1f4: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}}::{{closure}} (plonk/lookup/prover.rs:168:36)",
"0x561da280b1f4: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da280b1f4: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}} (plonk/lookup/prover.rs:166:41)",
"0x561da27eaf73: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da27eaf73: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors::{{closure}} (src/plonk/circuit.rs:1273:17)",
"0x561da27eaf73: halo2_proofs::plonk::circuit::compress_selectors::process::{{closure}} (plonk/circuit/compress_selectors.rs:79:34)",
"0x561da27eaf73: core::iter::adapters::filter::filter_try_fold::{{closure}} (iter/adapters/filter.rs:44:25)",
"0x561da27eaf73: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27eaf73: <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter.rs:93:9)",
"0x561da27eaf73: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:251:13)",
"0x561da27eaf73: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:178:19)",
"0x561da28396e7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/circuit/compress_selectors.rs:73:17)",
"0x561da28396e7: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28396e7: halo2_proofs::plonk::circuit::compress_selectors::process (plonk/circuit/compress_selectors.rs:73:17)",
"0x561da27f2194: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f2194: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f2194: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f2194: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f2194: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da280aadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280aadc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da280aadc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da280aadc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da280aadc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da280aadc: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da280aadc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da280aadc: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da280aadc: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da280aadc: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted (plonk/lookup/prover.rs:222:59)",
"0x561da28a7d6a: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28a7d6a: alloc::boxed::Box<T>::new (pasta_curves-0.4.0/src/curves.rs:892:13)",
"0x561da28a7d6a: <pasta_curves::curves::Eq as pasta_curves::arithmetic::curves::CurveExt>::hash_to_curve (pasta_curves-0.4.0/src/curves.rs:892:13)",
"0x561da2821d23: halo2_proofs::poly::commitment::Params<C>::new::{{closure}} (src/poly/commitment.rs:54:30)",
"0x561da2821d23: halo2_proofs::arithmetic::parallelize::{{closure}}::{{closure}} (halo2_proofs/src/arithmetic.rs:337:17)",
"0x561da2821d23: rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (src/scope/mod.rs:544:47)",
"0x561da2821d23: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2831989: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2831989: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2831989: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2831989: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2831989: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2831989: rayon_core::scope::ScopeBase::execute_job (src/scope/mod.rs:640:29)",
"0x561da2831989: rayon_core::scope::Scope::spawn::{{closure}} (src/scope/mod.rs:544:17)",
"0x561da2831989: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:167:9)",
"0x561da27dfdb1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27dfdb1: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da2899c9f: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da2899c9f: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da2899c9f: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da2899c9f: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:435:13)",
"0x561da2899c9f: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da27f375e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f375e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f375e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f375e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f375e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f375e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f375e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28057a2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/nn_chip.rs:311:59)",
"0x561da28057a2: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28057a2: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:311:59)",
"0x561da28111b8: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:323:69)",
"0x561da28111b8: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da28cbf30: alloc::ffi::c_str::CString::new (src/ffi/c_str.rs:316:9)",
"0x561da28cbf30: std::sys::unix::fs::cstr (sys/unix/fs.rs:1148:8)",
"0x561da28cbf30: std::sys::unix::fs::File::open (sys/unix/fs.rs:934:20)",
"0x561da28cbf30: std::fs::OpenOptions::_open (std/src/fs.rs:1031:9)",
"0x561da289e3aa: std::fs::OpenOptions::open (std/src/fs.rs:1027:9)",
"0x561da289e3aa: std::fs::File::open (std/src/fs.rs:352:9)",
"0x561da289e3aa: num_cpus::linux::Subsys::load_cpu (num_cpus-1.13.1/src/linux.rs:271:26)",
"0x561da289e3aa: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:146:24)",
"0x561da289e3aa: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da289e28b: std::sync::once::Once::call_once (src/sync/once.rs:276:9)",
"0x561da289e28b: num_cpus::linux::cgroups_num_cpus (num_cpus-1.13.1/src/linux.rs:114:5)",
"0x561da289e28b: num_cpus::linux::get_num_cpus (num_cpus-1.13.1/src/linux.rs:33:11)",
"0x561da27f21e4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f21e4: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f21e4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f21e4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f21e4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f21e4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f21e4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27ed840: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ed840: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ed840: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27ed840: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ed840: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27ed840: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27ed840: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27ed840: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da27ed840: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da27ed840: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:143:32)",
"0x561da284edf8: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:319:40)",
"0x561da284edf8: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284edf8: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284edf8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da280d8e4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280d8e4: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da280d8e4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:1041:19)",
"0x561da280d8e4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da280d8e4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da280d8e4: alloc::slice::merge_sort (alloc/src/slice.rs:1041:19)",
"0x561da27fb278: alloc::slice::<impl [T]>::sort (plonk/lookup/prover.rs:601:5)",
"0x561da27fb278: halo2_proofs::plonk::lookup::prover::permute_expression_pair (plonk/lookup/prover.rs:601:5)",
"0x561da283a995: halo2_proofs::plonk::vanishing::prover::<impl halo2_proofs::plonk::vanishing::Argument<C>>::commit (plonk/vanishing/prover.rs:53:17)",
"0x561da2856fba: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:506:21)",
"0x561da2816483: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2816483: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2816483: alloc::raw_vec::RawVec<T,A>::with_capacity_in (plonk/permutation/keygen.rs:117:30)",
"0x561da2816483: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2816483: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da2816483: halo2_proofs::plonk::permutation::keygen::Assembly::build_vk (plonk/permutation/keygen.rs:117:30)",
"0x561da27fb064: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct::{{closure}}::{{closure}} (plonk/lookup/prover.rs:459:37)",
"0x561da27fb064: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27fb064: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct::{{closure}} (plonk/lookup/prover.rs:457:21)",
"0x561da27fa32f: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:463:24)",
"0x561da284ab8a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da284ab8a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da284ab8a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da284ab8a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da284ab8a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da284ab8a: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da284ab8a: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da284ab8a: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da284ab8a: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da284ab8a: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:117:54)",
"0x561da284ab8a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284ab8a: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284ab8a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f1abe: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f1abe: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f1abe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f1abe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2805ba7: halo2_proofs::circuit::Region<F>::enable_selector (halo2_proofs/src/circuit.rs:203:9)",
"0x561da2805ba7: halo2_proofs::plonk::circuit::Selector::enable (src/plonk/circuit.rs:262:9)",
"0x561da2805ba7: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:264:17)",
"0x561da27f14c8: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:308:38)",
"0x561da27f14c8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f14c8: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f14c8: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f14c8: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f14c8: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f14c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f14c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284e9d0: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:305:57)",
"0x561da284e9d0: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284e9d0: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:305:57)",
"0x561da284e9d0: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e9d0: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e9d0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da2836b1f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2836b1f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2836b1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2836b1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2836b1f: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2836b1f: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2836b1f: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2836b1f: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2836b1f: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da2836b1f: halo2_proofs::poly::multiopen::prover::create_proof::{{closure}} (poly/multiopen/prover.rs:50:45)",
"0x561da2836b1f: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:59:13)",
"0x561da289af9b: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da289af9b: alloc::boxed::Box<T>::new (src/thread/mod.rs:535:25)",
"0x561da289af9b: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:535:25)",
"0x561da289af9b: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:459:32)",
"0x561da289af9b: std::thread::Builder::spawn (src/thread/mod.rs:391:18)",
"0x561da2897ef7: <rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn (rayon-core-1.9.3/src/registry.rs:100:9)",
"0x561da289854e: rayon_core::registry::Registry::new (rayon-core-1.9.3/src/registry.rs:258:29)",
"0x561da283c040: rayon_core::registry::Registry::in_worker_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:472:13)",
"0x561da283c040: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:445:16)",
"0x561da283c040: std::thread::local::LocalKey<T>::with (src/thread/local.rs:421:9)",
"0x561da2852340: rayon_core::registry::Registry::in_worker_cold (rayon-core-1.9.3/src/registry.rs:461:9)",
"0x561da2852340: rayon_core::registry::in_worker (rayon-core-1.9.3/src/registry.rs:879:13)",
"0x561da28274ca: rayon_core::join::join_context (src/join/mod.rs:132:5)",
"0x561da28274ca: rayon_core::join::join (src/join/mod.rs:105:5)",
"0x561da28274ca: halo2_proofs::arithmetic::recursive_butterfly_arithmetic (halo2_proofs/src/arithmetic.rs:250:9)",
"0x561da28277f2: halo2_proofs::arithmetic::best_fft (halo2_proofs/src/arithmetic.rs:232:9)",
"0x561da27eb80b: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:322:29)",
"0x561da27eb80b: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da27eb80b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27eb80b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27eb80b: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:251:13)",
"0x561da27eb80b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:178:19)",
"0x561da284ee41: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:319:40)",
"0x561da284ee41: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284ee41: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:319:40)",
"0x561da284ee41: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284ee41: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284ee41: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da28171e6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28171e6: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28171e6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da28171e6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28171e6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da28171e6: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da28171e6: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da28171e6: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da28171e6: <core::option::Option<T> as core::clone::Clone>::clone (src/circuit/value.rs:17:5)",
"0x561da28171e6: <halo2_proofs::circuit::value::Value<V> as core::clone::Clone>::clone (src/circuit/value.rs:17:5)",
"0x561da28171e6: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}}::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:407:37)",
"0x561da28171e6: halo2_proofs::circuit::Region<F>::assign_advice::{{closure}} (halo2_proofs/src/circuit.rs:227:29)",
"0x561da2806db3: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da2806db3: <halo2_proofs::plonk::prover::create_proof::{{closure}}::WitnessCollection<F> as halo2_proofs::plonk::circuit::Assignment<F>>::assign_advice (src/plonk/prover.rs:212:57)",
"0x561da2806db3: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouterRegion<F,CS> as halo2_proofs::circuit::layouter::RegionLayouter<F>>::assign_advice (circuit/floor_planner/single_pass.rs:285:9)",
"0x561da284bae0: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da284bae0: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:401:25)",
"0x561da284bae0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284bae0: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284bae0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ee9ba: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27ee9ba: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27ee9ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27ee9ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2807ea8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/nn_ops/eltwise_ops.rs:399:33)",
"0x561da2807ea8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2807ea8: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}} (src/nn_ops/eltwise_ops.rs:399:33)",
"0x561da280243f: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:112:13)",
"0x561da28502b9: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_region (halo2_proofs/src/circuit.rs:488:9)",
"0x561da28502b9: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt (src/nn_ops/eltwise_ops.rs:346:9)",
"0x561da28502b9: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:340:17)",
"0x561da28502b9: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da28502b9: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da28502b9: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27ec5db: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27ec5db: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27ec5db: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27ec5db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27ec5db: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da281f3ed: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da281f3ed: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da281f3ed: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da281f3ed: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da281f3ed: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:337:9)",
"0x561da281f3ed: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da281f3ed: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers (halo2_machinelearning/src/nn_chip.rs:337:9)",
"0x561da281f3ed: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize::{{closure}} (halo2_machinelearning/src/lib.rs:123:17)",
"0x561da281f3ed: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da281f3ed: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da281f3ed: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da281f3ed: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:120:22)",
"0x561da27f1344: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:242:9)",
"0x561da27f1344: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:186:38)",
"0x561da27f1344: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (src/vec/spec_from_elem.rs:25:31)",
"0x561da27f1344: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x561da27f1344: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f1344: halo2_proofs::plonk::circuit::compress_selectors::process::{{closure}} (plonk/circuit/compress_selectors.rs:107:18)",
"0x561da27f1344: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f1344: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f1344: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f1344: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f1344: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f1344: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f1344: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da283971a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/circuit/compress_selectors.rs:106:32)",
"0x561da283971a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da283971a: halo2_proofs::plonk::circuit::compress_selectors::process (plonk/circuit/compress_selectors.rs:106:32)",
"0x561da2822aa5: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2822aa5: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2822aa5: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2822aa5: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::{{closure}} (src/poly/evaluator.rs:215:17)",
"0x561da2822aa5: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2822aa5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da280939b: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da280939b: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da280939b: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da280939b: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da280939b: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da280939b: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2833d3f: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833d3f: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833d3f: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833d3f: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833d3f: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da27f42a6: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da27f42a6: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:255:25)",
"0x561da27f42a6: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f42a6: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27f42a6: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27f42a6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f42a6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282531e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282531e: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da282531e: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da282531e: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da282531e: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da282531e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809c92: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809c92: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809c92: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809c92: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809c92: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809c92: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2821e95: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2821e95: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2821e95: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2821e95: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2832d72: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2832d72: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2832d72: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2832d72: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2832d72: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da27f4b0a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4b0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4b0a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4b0a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4b0a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4b0a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4b0a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2850fc1: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:115:43)",
"0x561da2850fc1: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2850fc1: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:115:43)",
"0x561da2850fc1: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da2850fc1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da2850fc1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da2801984: std::collections::hash::map::HashMap<K,V,S>::insert (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da2801984: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da284ea59: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da284ea59: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da284ea59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da284ea59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da284ea59: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da284ea59: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da284ea59: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:310:42)",
"0x561da284ea59: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284ea59: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284ea59: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da283ce2a: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:301:38)",
"0x561da283ce2a: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27eb098: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da27eb098: halo2_proofs::plonk::circuit::compress_selectors::process::{{closure}} (plonk/circuit/compress_selectors.rs:87:17)",
"0x561da27eb098: core::iter::adapters::filter::filter_try_fold::{{closure}} (iter/adapters/filter.rs:44:25)",
"0x561da27eb098: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27eb098: <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter.rs:93:9)",
"0x561da27eb098: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:251:13)",
"0x561da27eb098: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:178:19)",
"0x561da280858a: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da280858a: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}} (src/nn_ops/eltwise_ops.rs:416:17)",
"0x561da27fa7d1: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da27fa7d1: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:482:23)",
"0x561da283cb47: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::ExtendedLagrangeCoeff> as core::ops::arith::MulAssign>::mul_assign (src/poly/evaluator.rs:438:17)",
"0x561da283cb47: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:288:29)",
"0x561da283cb47: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27ec481: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ec481: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ec481: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec481: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ec481: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ec481: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec481: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da282c8d8: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/examples/mlp_4d.rs:38:22)",
"0x561da282c8d8: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282c8d8: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:38:22)",
"0x561da27f183a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f183a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f183a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f183a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f183a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f183a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f183a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284ee78: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:325:41)",
"0x561da284ee78: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284ee78: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:325:41)",
"0x561da284ee78: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284ee78: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284ee78: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f1635: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f1635: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f1635: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f1635: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f1635: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f1635: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f1635: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284234e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/poly/multiopen.rs:223:43)",
"0x561da284234e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284234e: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:223:43)",
"0x561da27f71c4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f71c4: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f71c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/poly/commitment.rs:122:31)",
"0x561da27f71c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f71c4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f71c4: halo2_proofs::poly::commitment::Params<C>::commit (src/poly/commitment.rs:122:31)",
"0x561da27ef984: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ef984: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ef984: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef984: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ef984: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ef984: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef984: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28057fb: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/nn_chip.rs:321:69)",
"0x561da28057fb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28057fb: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:321:69)",
"0x561da284b7e5: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:303:39)",
"0x561da284b7e5: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:21)",
"0x561da284b7e5: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284b7e5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284b7e5: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284b7e5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ecb11: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ecb11: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ecb11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ecb11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ecb11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ecb11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ecb11: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da282ca53: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/examples/mlp_4d.rs:46:26)",
"0x561da282ca53: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282ca53: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:46:26)",
"0x561da27eff6b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eff6b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eff6b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eff6b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eff6b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eff6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eff6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2856984: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:396:35)",
"0x561da2856984: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2856984: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:396:35)",
"0x561da289a27e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289a27e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289a27e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da289a27e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da289a27e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da289a27e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da289a27e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da289822b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/sleep/mod.rs:69:34)",
"0x561da289822b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da289822b: rayon_core::sleep::Sleep::new (src/sleep/mod.rs:69:34)",
"0x561da289822b: rayon_core::registry::Registry::new (rayon-core-1.9.3/src/registry.rs:239:20)",
"0x561da289fc0b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289fc0b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289fc0b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da289fc0b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da289fc0b: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da289fc0b: alloc::slice::hack::to_vec (alloc/src/slice.rs:788:9)",
"0x561da289fc0b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da289fc0b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:413:9)",
"0x561da289fc0b: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:788:9)",
"0x561da289ea5f: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (num_cpus-1.13.1/src/linux.rs:263:19)",
"0x561da289ea5f: num_cpus::linux::MountInfo::parse_line (num_cpus-1.13.1/src/linux.rs:263:19)",
"0x561da289ea5f: core::ops::function::FnMut::call_mut (src/ops/function.rs:164:5)",
"0x561da289ea5f: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:290:13)",
"0x561da289ea5f: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2732:32)",
"0x561da289ea5f: core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (iter/adapters/filter_map.rs:47:20)",
"0x561da289ea5f: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da289ea5f: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:77:9)",
"0x561da289ea5f: core::iter::traits::iterator::Iterator::find_map (num_cpus-1.13.1/src/linux.rs:225:9)",
"0x561da289ea5f: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:61:9)",
"0x561da289ea5f: num_cpus::linux::MountInfo::load_cpu (num_cpus-1.13.1/src/linux.rs:225:9)",
"0x561da289ea5f: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:147:25)",
"0x561da289ea5f: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da281c400: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da281c400: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da281c400: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da281c400: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x561da281c400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1132:28)",
"0x561da281c400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:884:30)",
"0x561da281c400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:977:42)",
"0x561da283d0c0: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:307:25)",
"0x561da283d0c0: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f5e14: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27f5e14: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27f5e14: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27f5e14: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::LagrangeCoeff> as core::ops::arith::Mul>::mul (src/poly/evaluator.rs:374:25)",
"0x561da2810074: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}}::{{closure}}::{{closure}} (plonk/lookup/prover.rs:130:33)",
"0x561da2810074: halo2_proofs::plonk::circuit::Expression<F>::evaluate (src/plonk/circuit.rs:595:17)",
"0x561da27ef55f: halo2_proofs::plonk::lookup::prover::<impl halo2_proofs::plonk::lookup::Argument<F>>::commit_permuted::{{closure}}::{{closure}} (plonk/lookup/prover.rs:110:21)",
"0x561da27ef55f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27ef55f: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27ef55f: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ef55f: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27ef55f: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27ef55f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27ef55f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2816954: halo2_proofs::plonk::permutation::keygen::Assembly::build_vk (plonk/permutation/keygen.rs:145:17)",
"0x561da283cf96: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:16)",
"0x561da283cf96: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:307:25)",
"0x561da283cf96: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27fda28: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fda28: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fda28: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fda28: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::ExtendedLagrangeCoeff> as core::ops::arith::Mul<halo2_proofs::poly::evaluator::AstLeaf<E,halo2_proofs::poly::ExtendedLagrangeCoeff>>>::mul (src/poly/evaluator.rs:416:25)",
"0x561da28390bf: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:242:17)",
"0x561da28390bf: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da28390bf: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:241:20)",
"0x561da282e092: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da282e092: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da282e092: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da282e092: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da282e092: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da282e092: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da282e092: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da282e092: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da282e092: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:97:23)",
"0x561da2804c31: std::collections::hash::map::HashMap<K,V,S>::insert (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da2804c31: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da28019f6: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:112:13)",
"0x561da28398da: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:242:9)",
"0x561da28398da: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:186:38)",
"0x561da28398da: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (src/vec/spec_from_elem.rs:25:31)",
"0x561da28398da: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x561da28398da: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28398da: halo2_proofs::plonk::circuit::compress_selectors::process (plonk/circuit/compress_selectors.rs:130:21)",
"0x561da2844ddc: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2844ddc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2844ddc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2844ddc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2844ddc: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2844ddc: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2844ddc: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange (src/poly/domain.rs:179:21)",
"0x561da2844ddc: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:321:22)",
"0x561da27fb1f9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27fb1f9: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27fb1f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27fb1f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27fb1f9: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27fb1f9: alloc::slice::hack::to_vec (plonk/lookup/prover.rs:597:57)",
"0x561da27fb1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27fb1f9: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:413:9)",
"0x561da27fb1f9: halo2_proofs::plonk::lookup::prover::permute_expression_pair (plonk/lookup/prover.rs:597:57)",
"0x561da27f4908: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct::{{closure}} (plonk/vanishing/prover.rs:105:37)",
"0x561da27f4908: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27f4908: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27f4908: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f4908: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f4908: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f4908: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f4908: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2814dde: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2814dde: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da2814dde: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da2814dde: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1296:25)",
"0x561da2814dde: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:502:13)",
"0x561da284b3ba: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da284b3ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da284b3ba: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da284b3ba: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da284b3ba: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da284b3ba: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da284b3ba: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da284b3ba: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da284b3ba: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da284b3ba: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:346:51)",
"0x561da284b3ba: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284b3ba: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284b3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27eeac3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27eeac3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27eeac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27eeac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284a20d: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da284a20d: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:763:28)",
"0x561da284a20d: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Mul<F>>::mul (src/plonk/circuit.rs:763:28)",
"0x561da284a20d: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:312:21)",
"0x561da284a20d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284a20d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da284a20d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284a20d: <core::iter::adapters::skip::Skip<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/skip.rs:126:9)",
"0x561da284a20d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da284a20d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da2894c5d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2894c5d: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2894c5d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da2894c5d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2894c5d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da2894c5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da2894c5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2894c5d: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/permutation/keygen.rs:29:26)",
"0x561da2894c5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2894c5d: halo2_proofs::plonk::permutation::keygen::Assembly::new (plonk/permutation/keygen.rs:29:26)",
"0x561da283d094: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:16)",
"0x561da283d094: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:307:42)",
"0x561da283d094: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27e31b1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e31b1: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da27eb115: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da27eb115: halo2_proofs::plonk::circuit::compress_selectors::process::{{closure}} (plonk/circuit/compress_selectors.rs:88:17)",
"0x561da27eb115: core::iter::adapters::filter::filter_try_fold::{{closure}} (iter/adapters/filter.rs:44:25)",
"0x561da27eb115: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27eb115: <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter.rs:93:9)",
"0x561da27eb115: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:251:13)",
"0x561da27eb115: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:178:19)",
"0x561da27fa7e8: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da27fa7e8: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:482:23)",
"0x561da283cabc: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:289:35)",
"0x561da283cabc: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f0bf1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f0bf1: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f0bf1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f0bf1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f0bf1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f0bf1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f0bf1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28578cc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:625:36)",
"0x561da28578cc: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28578cc: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:625:36)",
"0x561da27f7b18: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f7b18: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f7b18: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f7b18: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f7b18: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f7b18: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f7b18: <halo2_proofs::poly::ExtendedLagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::constant_term (src/poly/evaluator.rs:573:9)",
"0x561da27f7b18: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:187:21)",
"0x561da282e26c: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:107:19)",
"0x561da2844b40: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2844b40: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2844b40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2844b40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2844b40: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2844b40: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2844b40: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange (src/poly/domain.rs:179:21)",
"0x561da2844b40: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:312:23)",
"0x561da27f822e: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:172:35)",
"0x561da27db37a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27db37a: hashbrown::raw::alloc::inner::do_alloc (src/raw/alloc.rs:11:15)",
"0x561da27db37a: hashbrown::raw::RawTableInner<A>::new_uninitialized (src/raw/mod.rs:1080:38)",
"0x561da27db37a: hashbrown::raw::RawTableInner<A>::fallible_with_capacity (src/raw/mod.rs:1109:30)",
"0x561da27db37a: hashbrown::raw::RawTableInner<A>::prepare_resize (src/raw/mod.rs:1353:29)",
"0x561da27db37a: hashbrown::raw::RawTableInner<A>::resize_inner (src/raw/mod.rs:680:13)",
"0x561da27db37a: hashbrown::raw::RawTableInner<A>::reserve_rehash_inner (src/raw/mod.rs:1403:13)",
"0x561da27db37a: hashbrown::raw::RawTable<T,A>::reserve_rehash (src/raw/mod.rs:680:13)",
"0x561da2806780: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:646:16)",
"0x561da2806780: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.12.3/src/map.rs:1014:9)",
"0x561da2806780: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.12.3/src/rustc_entry.rs:46:13)",
"0x561da2806780: std::collections::hash::map::HashMap<K,V,S>::entry (circuit/floor_planner/single_pass.rs:422:21)",
"0x561da2806780: <halo2_proofs::circuit::floor_planner::single_pass::SimpleTableLayouter<F,CS> as halo2_proofs::circuit::layouter::TableLayouter<F>>::assign_cell (circuit/floor_planner/single_pass.rs:422:21)",
"0x561da2814d64: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2814d64: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da2814d64: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da2814d64: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1296:25)",
"0x561da2814d64: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:506:33)",
"0x561da28113bb: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:325:80)",
"0x561da28113bb: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da28b545e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28b545e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28b545e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da28b545e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28b545e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da28b545e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da28b545e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28b2cb6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/arithmetic/fields.rs:242:34)",
"0x561da28b2cb6: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28b2cb6: pasta_curves::arithmetic::fields::SqrtTables<F>::new::{{closure}} (src/arithmetic/fields.rs:242:34)",
"0x561da28b2cb6: <core::iter::adapters::scan::Scan<I,St,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/scan.rs:45:9)",
"0x561da28b2cb6: pasta_curves::arithmetic::fields::SqrtTables<F>::new (src/arithmetic/fields.rs:253:22)",
"0x561da28ac48a: <pasta_curves::fields::fq::FQ_TABLES as core::ops::deref::Deref>::deref::__static_ref_initialize (src/fields/fq.rs:668:44)",
"0x561da28ac48a: core::ops::function::FnOnce::call_once (src/ops/function.rs:248:5)",
"0x561da28ac48a: lazy_static::lazy::Lazy<T>::get::{{closure}} (lazy_static-1.4.0/src/inline_lazy.rs:31:29)",
"0x561da28ac48a: std::sync::once::Once::call_once::{{closure}} (src/sync/once.rs:276:41)",
"0x561da28b2693: std::sync::once::Once::call_once (src/sync/once.rs:276:9)",
"0x561da28b2693: lazy_static::lazy::Lazy<T>::get (lazy_static-1.4.0/src/lib.rs:144:17)",
"0x561da28b2693: <pasta_curves::fields::fq::FQ_TABLES as core::ops::deref::Deref>::deref::__stability (lazy_static-1.4.0/src/lib.rs:142:21)",
"0x561da28b2693: <pasta_curves::fields::fq::FQ_TABLES as core::ops::deref::Deref>::deref (lazy_static-1.4.0/src/lib.rs:144:17)",
"0x561da28b2693: <pasta_curves::fields::fq::Fq as pasta_curves::arithmetic::fields::SqrtRatio>::sqrt_ratio (src/fields/fq.rs:714:9)",
"0x561da28b2693: pasta_curves::hashtocurve::map_to_curve_simple_swu (pasta_curves-0.4.0/src/hashtocurve.rs:152:28)",
"0x561da28a7e53: <pasta_curves::curves::Eq as pasta_curves::arithmetic::curves::CurveExt>::hash_to_curve::{{closure}} (pasta_curves-0.4.0/src/curves.rs:895:26)",
"0x561da2821d6e: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call (alloc/src/boxed.rs:1954:9)",
"0x561da2821d6e: halo2_proofs::poly::commitment::Params<C>::new::{{closure}} (src/poly/commitment.rs:62:26)",
"0x561da2821d6e: halo2_proofs::arithmetic::parallelize::{{closure}}::{{closure}} (halo2_proofs/src/arithmetic.rs:337:17)",
"0x561da2821d6e: rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (src/scope/mod.rs:544:47)",
"0x561da2821d6e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da27fa19f: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:449:48)",
"0x561da27fa6a1: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da27fa6a1: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:472:17)",
"0x561da289ca17: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da289ca17: alloc::boxed::Box<T>::new (crossbeam-epoch-0.9.10/src/atomic.rs:200:23)",
"0x561da289ca17: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.10/src/atomic.rs:200:23)",
"0x561da289ca17: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.10/src/atomic.rs:1159:35)",
"0x561da289ca17: crossbeam_epoch::atomic::Atomic<T>::init (crossbeam-epoch-0.9.10/src/atomic.rs:327:20)",
"0x561da289ca17: crossbeam_epoch::atomic::Atomic<T>::new (crossbeam-epoch-0.9.10/src/atomic.rs:311:9)",
"0x561da289ca17: crossbeam_deque::deque::Worker<T>::new_lifo (crossbeam-deque-0.8.2/src/deque.rs:250:38)",
"0x561da27ef763: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ef763: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ef763: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef763: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ef763: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ef763: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef763: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da285691a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:377:32)",
"0x561da285691a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da285691a: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:377:32)",
"0x561da2815f93: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:202:25)",
"0x561da2803e86: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2803e86: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:100:9)",
"0x561da27ecc79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ecc79: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ecc79: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27ecc79: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ecc79: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27ecc79: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da284244f: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:240:39)",
"0x561da27e3844: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3844: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3844: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3844: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:435:13)",
"0x561da2813331: core::iter::traits::iterator::Iterator::unzip (iter/traits/iterator.rs:3206:9)",
"0x561da2813331: halo2_proofs::plonk::lookup::Argument<F>::new (src/plonk/lookup.rs:18:54)",
"0x561da2813331: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup (src/plonk/circuit.rs:1081:27)",
"0x561da28b2e46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/arithmetic/fields.rs:242:34)",
"0x561da28b2e46: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28b2e46: pasta_curves::arithmetic::fields::SqrtTables<F>::new::{{closure}} (src/arithmetic/fields.rs:242:34)",
"0x561da28b2e46: <core::iter::adapters::scan::Scan<I,St,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/scan.rs:45:9)",
"0x561da28b2e46: pasta_curves::arithmetic::fields::SqrtTables<F>::new (src/arithmetic/fields.rs:255:26)",
"0x561da2824549: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2824549: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2824549: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2824549: halo2_proofs::arithmetic::best_multiexp::{{closure}} (halo2_proofs/src/arithmetic.rs:148:17)",
"0x561da2824549: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2824549: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da28092db: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da28092db: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da28092db: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da28092db: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da28092db: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da28092db: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da27fa748: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da27fa748: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:480:17)",
"0x561da27f194e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f194e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f194e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f194e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f194e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f194e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f194e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2805f52: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/src/nn_chip.rs:311:59)",
"0x561da2805f52: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2805f52: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}} (halo2_machinelearning/src/nn_chip.rs:311:59)",
"0x561da28036e3: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:112:13)",
"0x561da282c9ff: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282c9ff: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:46:26)",
"0x561da28498e0: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da28498e0: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:401:25)",
"0x561da28498e0: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da28498e0: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da28498e0: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27efd2a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27efd2a: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27efd2a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27efd2a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27ee94e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ee94e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ee94e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ee94e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ee94e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ee94e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ee94e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2894560: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2894560: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2894560: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2894560: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2894560: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2894560: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2894560: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2894560: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2894560: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:143:32)",
"0x561da282147e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282147e: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da282147e: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da282147e: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da282147e: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da282147e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da28095d2: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da28095d2: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da28095d2: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da28095d2: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da28095d2: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da28095d2: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da28255e5: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da28255e5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da28255e5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da28255e5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2833722: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833722: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833722: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833722: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833722: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da27f938c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f938c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f938c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f938c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f938c: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f938c: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f938c: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:277:34)",
"0x561da2827d83: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/arithmetic.rs:194:28)",
"0x561da2827d83: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2827d83: halo2_proofs::arithmetic::best_fft (halo2_proofs/src/arithmetic.rs:194:28)",
"0x561da27f6b27: halo2_proofs::poly::commitment::Params<C>::new (src/poly/commitment.rs:84:9)",
"0x561da27e2b59: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e2b59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da2807cda: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2807cda: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:385:25)",
"0x561da2807cda: halo2_proofs::circuit::value::Value<V>::and_then (src/circuit/value.rs:102:24)",
"0x561da2807cda: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}} (src/nn_ops/eltwise_ops.rs:378:50)",
"0x561da27f9fac: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:437:25)",
"0x561da27fa761: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da27fa761: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:480:17)",
"0x561da283ce5a: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:301:38)",
"0x561da283ce5a: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da289826d: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da289826d: alloc::boxed::Box<T>::new (crossbeam-deque-0.8.2/src/deque.rs:1232:35)",
"0x561da289826d: <crossbeam_deque::deque::Injector<T> as core::default::Default>::default (crossbeam-deque-0.8.2/src/deque.rs:1232:35)",
"0x561da289826d: crossbeam_deque::deque::Injector<T>::new (crossbeam-deque-0.8.2/src/deque.rs:1258:9)",
"0x561da289826d: rayon_core::registry::Registry::new (rayon-core-1.9.3/src/registry.rs:240:28)",
"0x561da28430a8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28430a8: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28430a8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da28430a8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28430a8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da28430a8: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28430a8: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:98:39)",
"0x561da283cafe: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:288:37)",
"0x561da283cafe: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27fd8b9: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fd8b9: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd8b9: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd8b9: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Add<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::add (src/poly/evaluator.rs:342:34)",
"0x561da27f9e39: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:431:46)",
"0x561da28165c6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28165c6: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28165c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da28165c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28165c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da28165c6: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da28165c6: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da28165c6: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da28165c6: halo2_proofs::plonk::permutation::keygen::Assembly::build_vk (plonk/permutation/keygen.rs:121:40)",
"0x561da27f4ef0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4ef0: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4ef0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4ef0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4ef0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4ef0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4ef0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fc13a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27fc13a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27fc13a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fc13a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27fc13a: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fc13a: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27fc13a: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_extended (src/poly/domain.rs:208:21)",
"0x561da27fc13a: <halo2_proofs::poly::ExtendedLagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::empty_poly (src/poly/evaluator.rs:564:9)",
"0x561da27fc13a: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate (src/poly/evaluator.rs:212:26)",
"0x561da27fc13a: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:82:22)",
"0x561da27fee48: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27fee48: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27fee48: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fee48: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27fee48: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da28442a8: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28442a8: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange_assigned (src/poly/domain.rs:191:21)",
"0x561da28442a8: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:266:21)",
"0x561da27ea4fc: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ea4fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ea4fc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27ea4fc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ea4fc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27ea4fc: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27ea4fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27ea4fc: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da27ea4fc: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da27ea4fc: <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next (src/vec/mod.rs:2379:9)",
"0x561da27ea4fc: alloc::vec::Vec<T,A>::extend_with (src/vec/mod.rs:2411:33)",
"0x561da280bea3: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:16:9)",
"0x561da284e5ab: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da284e5ab: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:273:25)",
"0x561da284e5ab: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e5ab: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e5ab: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27fa2ed: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:449:48)",
"0x561da27fd858: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fd858: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd858: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fd858: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Add<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::add (src/poly/evaluator.rs:342:18)",
"0x561da27f4b6e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f4b6e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f4b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f4b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28496da: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28496da: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28496da: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da28496da: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28496da: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da28496da: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da28496da: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da28496da: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da28496da: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da28496da: halo2_proofs::plonk::keygen::keygen_pk::{{closure}} (src/plonk/keygen.rs:291:49)",
"0x561da28496da: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da28496da: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da28496da: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f50de: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f50de: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f50de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f50de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284474b: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/keygen.rs:289:31)",
"0x561da284474b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284474b: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:289:31)",
"0x561da27f0142: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f0142: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f0142: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0142: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f0142: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f0142: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f0142: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2808fcb: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/poly/evaluator.rs:586:9)",
"0x561da2808fcb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2808fcb: <halo2_proofs::poly::ExtendedLagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::linear_term (src/poly/evaluator.rs:586:9)",
"0x561da27f7b66: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:197:44)",
"0x561da284abe5: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:117:29)",
"0x561da284abe5: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284abe5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284abe5: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f189e: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f189e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f189e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f189e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fa096: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:440:17)",
"0x561da2822ede: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2822ede: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2822ede: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2822ede: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da2822ede: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2822ede: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809812: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809812: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809812: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809812: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809812: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809812: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2823425: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2823425: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2823425: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2823425: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2833f82: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833f82: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833f82: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833f82: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833f82: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da27f6e71: halo2_proofs::poly::commitment::Params<C>::new (src/poly/commitment.rs:104:22)",
"0x561da2839026: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:242:18)",
"0x561da2839026: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da2839026: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:241:20)",
"0x561da28009ac: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28009ac: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_table (circuit/floor_planner/single_pass.rs:189:13)",
"0x561da281f05b: <halo2_proofs::circuit::NamespacedLayouter<F,L> as halo2_proofs::circuit::Layouter<F>>::assign_table (halo2_proofs/src/circuit.rs:497:9)",
"0x561da281f05b: halo2_machinelearning::nn_ops::lookup_ops::DecompTable<F,_>::layout (src/nn_ops/lookup_ops.rs:24:9)",
"0x561da281f05b: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::synthesize (halo2_machinelearning/src/lib.rs:105:9)",
"0x561da27f5e7f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27f5e7f: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27f5e7f: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27f5e7f: <halo2_proofs::poly::evaluator::Ast<E,F,halo2_proofs::poly::LagrangeCoeff> as core::ops::arith::Mul>::mul (src/poly/evaluator.rs:374:41)",
"0x561da27fa3bf: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:464:24)",
"0x561da27f9e99: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:16)",
"0x561da27f9e99: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:431:27)",
"0x561da2822562: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2822562: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2822562: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2822562: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2811315: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:325:32)",
"0x561da2811315: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27f84bf: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f84bf: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f84bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f84bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f84bf: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f84bf: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f84bf: <halo2_proofs::poly::LagrangeCoeff as halo2_proofs::poly::evaluator::BasisOps>::constant_term (src/poly/evaluator.rs:529:9)",
"0x561da27f84bf: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:205:21)",
"0x561da27f8327: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:180:35)",
"0x561da27f8094: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::recurse (src/poly/evaluator.rs:164:35)",
"0x561da27e3456: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e3456: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da2843ba7: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2843ba7: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:186:13)",
"0x561da27fc045: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27fc045: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fc045: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27fc045: halo2_proofs::poly::evaluator::Ast<E,F,B>::distribute_powers (src/poly/evaluator.rs:272:31)",
"0x561da27fc045: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:81:22)",
"0x561da284d2fe: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da284d2fe: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da284d2fe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da284d2fe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da284d2fe: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da284d2fe: alloc::slice::hack::to_vec (plonk/vanishing/prover.rs:93:44)",
"0x561da284d2fe: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da284d2fe: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:413:9)",
"0x561da284d2fe: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct::{{closure}} (plonk/vanishing/prover.rs:93:44)",
"0x561da284d2fe: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d2fe: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d2fe: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f30c3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f30c3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f30c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f30c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fc390: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/vanishing/prover.rs:91:24)",
"0x561da27fc390: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27fc390: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:91:24)",
"0x561da27ebbc5: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ebbc5: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ebbc5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27ebbc5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ebbc5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ebbc5: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27ebbc5: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da2806abd: hashbrown::raw::RawTable<T,A>::reserve (src/raw/mod.rs:646:16)",
"0x561da2806abd: hashbrown::map::HashMap<K,V,S,A>::reserve (hashbrown-0.12.3/src/map.rs:1014:9)",
"0x561da2806abd: hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry (hashbrown-0.12.3/src/rustc_entry.rs:46:13)",
"0x561da2806abd: std::collections::hash::map::HashMap<K,V,S>::entry (circuit/floor_planner/single_pass.rs:422:21)",
"0x561da2806abd: <halo2_proofs::circuit::floor_planner::single_pass::SimpleTableLayouter<F,CS> as halo2_proofs::circuit::layouter::TableLayouter<F>>::assign_cell (circuit/floor_planner/single_pass.rs:422:21)",
"0x561da280071e: halo2_proofs::circuit::Table<F>::assign_cell (halo2_proofs/src/circuit.rs:386:9)",
"0x561da280071e: halo2_machinelearning::nn_ops::lookup_ops::DecompTable<F,_>::layout::{{closure}} (src/nn_ops/lookup_ops.rs:29:21)",
"0x561da280071e: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_table (circuit/floor_planner/single_pass.rs:161:13)",
"0x561da27e328a: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e328a: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da28115b4: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28115b4: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1220:9)",
"0x561da284e737: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:291:30)",
"0x561da284e737: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e737: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e737: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f4563: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da27f4563: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:255:25)",
"0x561da27f4563: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f4563: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27f4563: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27f4563: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f4563: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f4563: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f4563: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da283e5a1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283e5a1: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da283e5a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da283e5a1: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x561da283e5a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x561da283e5a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:573:47)",
"0x561da283e5a1: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x561da283e5a1: alloc::collections::btree::mem::replace (collections/btree/mem.rs:29:28)",
"0x561da283e5a1: alloc::collections::btree::mem::take_mut (collections/btree/node.rs:573:9)",
"0x561da283e5a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level (collections/btree/node.rs:573:9)",
"0x561da283e5a1: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:375:21)",
"0x561da283e5a1: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert (btree/map/entry.rs:165:30)",
"0x561da27fa4a7: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:9)",
"0x561da27fa4a7: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:466:22)",
"0x561da27fa84b: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:480:17)",
"0x561da284e575: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da284e575: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange_assigned (src/poly/domain.rs:191:21)",
"0x561da284e575: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:273:30)",
"0x561da284e575: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e575: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e575: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da282d605: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da282d605: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da282d605: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da282d605: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da282d605: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da282d605: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da282d605: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da282d605: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da282d605: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da282d605: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:45:22)",
"0x561da27f3253: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f3253: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f3253: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f3253: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f3253: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f3253: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f3253: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2804d24: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2804d24: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2804d24: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2804d24: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2804d24: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2804d24: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2804d24: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance::{{closure}} (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2804d24: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:112:13)",
"0x561da281697c: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da281697c: halo2_proofs::plonk::permutation::keygen::Assembly::build_vk (plonk/permutation/keygen.rs:144:13)",
"0x561da283e653: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283e653: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da283e653: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da283e653: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x561da283e653: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x561da283e653: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:356:32)",
"0x561da283e653: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert (btree/map/entry.rs:165:30)",
"0x561da27f10c0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f10c0: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f10c0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f10c0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f10c0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f10c0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f10c0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2848961: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/poly.rs:173:21)",
"0x561da2848961: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2848961: halo2_proofs::poly::Polynomial<halo2_proofs::plonk::assigned::Assigned<F>,halo2_proofs::poly::LagrangeCoeff>::invert (halo2_proofs/src/poly.rs:173:21)",
"0x561da2848961: halo2_proofs::poly::batch_invert_assigned::{{closure}} (halo2_proofs/src/poly.rs:161:13)",
"0x561da2848961: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da2848961: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da2848961: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ee87a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27ee87a: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27ee87a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27ee87a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2818360: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da2818360: halo2_proofs::circuit::AssignedCell<V,F>::copy_advice (halo2_proofs/src/circuit.rs:162:13)",
"0x561da280811b: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}} (src/nn_ops/eltwise_ops.rs:350:29)",
"0x561da2893c81: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da2893c81: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da28948ce: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28948ce: halo2_proofs::plonk::permutation::Argument::add_column (src/plonk/permutation.rs:63:13)",
"0x561da2820391: halo2_proofs::plonk::circuit::ConstraintSystem<F>::enable_equality (src/plonk/circuit.rs:1054:9)",
"0x561da2820391: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure (halo2_machinelearning/src/lib.rs:42:9)",
"0x561da289e62b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289e62b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289e62b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da289e62b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da289e62b: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da289e62b: alloc::slice::hack::to_vec (alloc/src/slice.rs:788:9)",
"0x561da289e62b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da289e62b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:413:9)",
"0x561da289e62b: alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned (alloc/src/slice.rs:788:9)",
"0x561da289e62b: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (num_cpus-1.13.1/src/linux.rs:292:19)",
"0x561da289e62b: num_cpus::linux::Subsys::parse_line::{{closure}} (num_cpus-1.13.1/src/linux.rs:292:19)",
"0x561da289e62b: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da289e62b: num_cpus::linux::Subsys::parse_line (num_cpus-1.13.1/src/linux.rs:291:9)",
"0x561da289e62b: core::ops::function::FnMut::call_mut (src/ops/function.rs:164:5)",
"0x561da289e62b: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:290:13)",
"0x561da289e62b: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2732:32)",
"0x561da289e62b: core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (iter/adapters/filter_map.rs:47:20)",
"0x561da289e62b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da289e62b: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:77:9)",
"0x561da289e62b: core::iter::traits::iterator::Iterator::find_map (num_cpus-1.13.1/src/linux.rs:274:9)",
"0x561da289e62b: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:61:9)",
"0x561da289e62b: num_cpus::linux::Subsys::load_cpu (num_cpus-1.13.1/src/linux.rs:274:9)",
"0x561da289e62b: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:146:24)",
"0x561da289e62b: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da289e7a7: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289e7a7: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289e7a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/boxed.rs:645:18)",
"0x561da289e7a7: alloc::raw_vec::RawVec<T>::with_capacity (alloc/src/raw_vec.rs:93:9)",
"0x561da289e7a7: alloc::boxed::Box<[T]>::new_uninit_slice (alloc/src/boxed.rs:645:18)",
"0x561da289e7a7: std::io::buffered::bufreader::buffer::Buffer::with_capacity (io/buffered/bufreader.rs:94:33)",
"0x561da289e7a7: std::io::buffered::bufreader::BufReader<R>::with_capacity (io/buffered/bufreader.rs:94:33)",
"0x561da289e7a7: std::io::buffered::bufreader::BufReader<R>::new (io/buffered/bufreader.rs:73:9)",
"0x561da289e7a7: num_cpus::linux::MountInfo::load_cpu (num_cpus-1.13.1/src/linux.rs:223:20)",
"0x561da289e7a7: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:147:25)",
"0x561da289e7a7: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da283068c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283068c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da283068c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/poly/domain.rs:84:33)",
"0x561da283068c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da283068c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da283068c: halo2_proofs::poly::domain::EvaluationDomain<G>::new (src/poly/domain.rs:84:33)",
"0x561da27ec25e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ec25e: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ec25e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec25e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ec25e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ec25e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec25e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da2812394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/circuit.rs:1258:13)",
"0x561da2812394: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2812394: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1258:13)",
"0x561da2839a7a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2839a7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2839a7a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2839a7a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2839a7a: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2839a7a: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2839a7a: halo2_proofs::plonk::circuit::compress_selectors::process (plonk/circuit/compress_selectors.rs:183:42)",
"0x561da289ea9e: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (num_cpus-1.13.1/src/linux.rs:264:26)",
"0x561da289ea9e: num_cpus::linux::MountInfo::parse_line (num_cpus-1.13.1/src/linux.rs:264:26)",
"0x561da289ea9e: core::ops::function::FnMut::call_mut (src/ops/function.rs:164:5)",
"0x561da289ea9e: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:290:13)",
"0x561da289ea9e: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2732:32)",
"0x561da289ea9e: core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (iter/adapters/filter_map.rs:47:20)",
"0x561da289ea9e: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da289ea9e: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:77:9)",
"0x561da289ea9e: core::iter::traits::iterator::Iterator::find_map (num_cpus-1.13.1/src/linux.rs:225:9)",
"0x561da289ea9e: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:61:9)",
"0x561da289ea9e: num_cpus::linux::MountInfo::load_cpu (num_cpus-1.13.1/src/linux.rs:225:9)",
"0x561da289ea9e: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:147:25)",
"0x561da289ea9e: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da284958d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da284958d: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::register_poly (src/poly/evaluator.rs:119:9)",
"0x561da284958d: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:390:29)",
"0x561da284958d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284958d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284958d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ef7c3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27ef7c3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27ef7c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27ef7c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27e3825: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3825: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3825: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3825: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:434:13)",
"0x561da2818650: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da2818650: halo2_proofs::circuit::AssignedCell<V,F>::copy_advice (halo2_proofs/src/circuit.rs:162:13)",
"0x561da2807aeb: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}} (src/nn_ops/eltwise_ops.rs:350:29)",
"0x561da280216b: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:91:13)",
"0x561da27ec7d1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27ec7d1: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27ec7d1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27ec7d1: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27ec7d1: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27ec7d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27ec7d1: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da27ed73f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ed73f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ed73f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:136:27)",
"0x561da27ed73f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ed73f: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:136:27)",
"0x561da27ed73f: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27ed73f: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27ed73f: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da284390c: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:172:61)",
"0x561da27fa067: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da27fa067: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:440:17)",
"0x561da2815bef: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2815bef: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2815bef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2815bef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2815bef: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2815bef: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2815bef: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange (src/poly/domain.rs:179:21)",
"0x561da2815bef: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:192:40)",
"0x561da289e734: std::fs::OpenOptions::open (std/src/fs.rs:1027:9)",
"0x561da289e734: std::fs::File::open (std/src/fs.rs:352:9)",
"0x561da289e734: num_cpus::linux::MountInfo::load_cpu (num_cpus-1.13.1/src/linux.rs:222:26)",
"0x561da289e734: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:147:25)",
"0x561da289e734: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da284dc23: halo2_proofs::plonk::prover::create_proof::{{closure}}::{{closure}} (src/plonk/prover.rs:111:21)",
"0x561da284dc23: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284dc23: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284dc23: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27eaa01: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eaa01: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eaa01: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eaa01: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eaa01: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eaa01: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27eaa01: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da282caba: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/examples/mlp_4d.rs:48:27)",
"0x561da282caba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282caba: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:48:27)",
"0x561da280dc6a: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da280dc6a: alloc::slice::merge_sort (alloc/src/slice.rs:1077:9)",
"0x561da283a65d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283a65d: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da283a65d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da283a65d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da283a65d: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da283a65d: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da283a65d: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_coeff (src/poly/domain.rs:171:21)",
"0x561da283a65d: halo2_proofs::plonk::vanishing::prover::<impl halo2_proofs::plonk::vanishing::Argument<C>>::commit (plonk/vanishing/prover.rs:45:31)",
"0x561da280be58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280be58: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da280be58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da280be58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da280be58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da28442ec: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28442ec: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:266:16)",
"0x561da27f457e: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:255:25)",
"0x561da27f457e: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f457e: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27f457e: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27f457e: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f457e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f457e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f457e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da283ee25: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283ee25: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da283ee25: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da283ee25: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x561da283ee25: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x561da283ee25: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:356:32)",
"0x561da280d76e: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:968:17)",
"0x561da2841ae5: alloc::collections::btree::set::BTreeSet<T,A>::insert (collections/btree/set.rs:914:9)",
"0x561da2841ae5: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:186:13)",
"0x561da27fce75: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27fce75: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27fce75: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fce75: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27fce75: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fce75: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27fce75: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_coeff (src/poly/domain.rs:171:21)",
"0x561da27fce75: halo2_proofs::plonk::vanishing::prover::Constructed<C>::evaluate (plonk/vanishing/prover.rs:136:19)",
"0x561da2857c59: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:656:21)",
"0x561da27f990d: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:396:17)",
"0x561da2825070: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2825070: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2825070: alloc::raw_vec::RawVec<T,A>::with_capacity_in (poly/commitment/prover.rs:160:23)",
"0x561da2825070: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2825070: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da2825070: halo2_proofs::poly::commitment::prover::parallel_generator_collapse::{{closure}} (poly/commitment/prover.rs:160:23)",
"0x561da2825070: halo2_proofs::arithmetic::parallelize::{{closure}}::{{closure}} (halo2_proofs/src/arithmetic.rs:337:17)",
"0x561da2825070: rayon_core::scope::Scope::spawn::{{closure}}::{{closure}} (src/scope/mod.rs:544:47)",
"0x561da2825070: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da283248c: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da283248c: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da283248c: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da283248c: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da283248c: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da283248c: rayon_core::scope::ScopeBase::execute_job (src/scope/mod.rs:640:29)",
"0x561da283248c: rayon_core::scope::Scope::spawn::{{closure}} (src/scope/mod.rs:544:17)",
"0x561da283248c: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:167:9)",
"0x561da280922c: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:629:9)",
"0x561da2821fc5: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2821fc5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2821fc5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2821fc5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2832a02: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2832a02: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2832a02: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2832a02: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2832a02: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da284b42d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da284b42d: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::register_poly (src/poly/evaluator.rs:119:9)",
"0x561da284b42d: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:346:21)",
"0x561da284b42d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284b42d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284b42d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f1d33: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f1d33: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f1d33: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f1d33: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f1299: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f1299: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f1299: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1299: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f1299: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f1299: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1299: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fafea: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct::{{closure}}::{{closure}} (plonk/lookup/prover.rs:459:37)",
"0x561da27fafea: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27fafea: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct::{{closure}} (plonk/lookup/prover.rs:457:21)",
"0x561da28d54e6: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28d54e6: std::sys::unix::thread::Thread::new (sys/unix/thread.rs:52:31)",
"0x561da289b002: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:532:17)",
"0x561da289b002: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:459:32)",
"0x561da289b002: std::thread::Builder::spawn (src/thread/mod.rs:391:18)",
"0x561da2815e93: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:200:24)",
"0x561da28b2d7e: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/arithmetic/fields.rs:242:34)",
"0x561da28b2d7e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28b2d7e: pasta_curves::arithmetic::fields::SqrtTables<F>::new::{{closure}} (src/arithmetic/fields.rs:242:34)",
"0x561da28b2d7e: <core::iter::adapters::scan::Scan<I,St,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/scan.rs:45:9)",
"0x561da28b2d7e: pasta_curves::arithmetic::fields::SqrtTables<F>::new (src/arithmetic/fields.rs:254:22)",
"0x561da2812206: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:242:9)",
"0x561da2812206: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:186:38)",
"0x561da2812206: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (src/vec/spec_from_elem.rs:25:31)",
"0x561da2812206: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x561da2812206: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2812206: halo2_proofs::plonk::circuit::ConstraintSystem<F>::compress_selectors (src/plonk/circuit.rs:1245:27)",
"0x561da2844d90: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:317:19)",
"0x561da27f2453: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f2453: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f2453: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f2453: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2839084: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da2839084: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:242:17)",
"0x561da2839084: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da2839084: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:241:20)",
"0x561da27f398f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f398f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f398f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f398f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f398f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f398f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f398f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da283bcd6: rayon_core::registry::Registry::in_worker_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:472:13)",
"0x561da283bcd6: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:445:16)",
"0x561da283bcd6: std::thread::local::LocalKey<T>::with (src/thread/local.rs:421:9)",
"0x561da28535d4: rayon_core::registry::Registry::in_worker_cold (rayon-core-1.9.3/src/registry.rs:461:9)",
"0x561da28535d4: rayon_core::registry::in_worker (rayon-core-1.9.3/src/registry.rs:879:13)",
"0x561da2836c9d: rayon_core::scope::scope (src/scope/mod.rs:308:5)",
"0x561da2836c9d: halo2_proofs::arithmetic::parallelize (halo2_proofs/src/arithmetic.rs:332:5)",
"0x561da2836c9d: <halo2_proofs::poly::Polynomial<F,B> as core::ops::arith::Mul<F>>::mul (halo2_proofs/src/poly.rs:294:9)",
"0x561da2836c9d: halo2_proofs::poly::multiopen::prover::create_proof::{{closure}} (poly/multiopen/prover.rs:50:45)",
"0x561da2836c9d: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:59:13)",
"0x561da28b2fbd: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28b2fbd: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28b2fbd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:55:25)",
"0x561da28b2fbd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28b2fbd: <u8 as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:55:25)",
"0x561da28b2fbd: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28b2fbd: pasta_curves::arithmetic::fields::SqrtTables<F>::new (src/arithmetic/fields.rs:259:32)",
"0x561da27ef878: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ef878: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ef878: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef878: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ef878: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ef878: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef878: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fc414: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/vanishing/prover.rs:96:32)",
"0x561da27fc414: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27fc414: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:96:32)",
"0x561da2804067: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da2804067: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da2804067: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da2804067: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da2804067: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2804067: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2804067: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance::{{closure}} (halo2_machinelearning/src/nn_chip.rs:235:17)",
"0x561da2804067: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:112:13)",
"0x561da28d18f1: std::env::var (std/src/env.rs:228:5)",
"0x561da28d18f1: std::sys_common::thread::min_stack (src/sys_common/thread.rs:11:15)",
"0x561da289adab: core::ops::function::FnOnce::call_once (src/ops/function.rs:248:5)",
"0x561da289adab: core::option::Option<T>::unwrap_or_else (src/thread/mod.rs:475:26)",
"0x561da289adab: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:475:26)",
"0x561da289adab: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:459:32)",
"0x561da289adab: std::thread::Builder::spawn (src/thread/mod.rs:391:18)",
"0x561da284ca03: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da284ca03: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da284ca03: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da284ca03: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da284ca03: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da284ca03: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da284ca03: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284ca03: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_proofs/src/poly.rs:141:13)",
"0x561da284ca03: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da284ca03: halo2_proofs::poly::batch_invert_assigned::{{closure}} (halo2_proofs/src/poly.rs:141:13)",
"0x561da284ca03: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284ca03: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284ca03: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27f4a5c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f4a5c: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f4a5c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f4a5c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27f3e6f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f3e6f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f3e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f3e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f3e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f3e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f3e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fb758: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2649:9)",
"0x561da27fb758: core::iter::traits::iterator::Iterator::collect (core/src/result.rs:2101:49)",
"0x561da27fb758: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}} (core/src/result.rs:2101:49)",
"0x561da27fb758: core::iter::adapters::try_process (iter/adapters/mod.rs:164:17)",
"0x561da27fb758: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter (plonk/lookup/prover.rs:613:35)",
"0x561da27fb758: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27fb758: halo2_proofs::plonk::lookup::prover::permute_expression_pair (plonk/lookup/prover.rs:613:35)",
"0x561da27f3874: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f3874: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f3874: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f3874: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f3874: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f3874: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f3874: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da283d031: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:307:62)",
"0x561da283d031: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27ef303: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ef303: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ef303: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef303: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ef303: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ef303: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef303: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27eb05d: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (plonk/circuit/compress_selectors.rs:81:46)",
"0x561da27eb05d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27eb05d: halo2_proofs::plonk::circuit::compress_selectors::process::{{closure}} (plonk/circuit/compress_selectors.rs:81:46)",
"0x561da27eb05d: core::iter::adapters::filter::filter_try_fold::{{closure}} (iter/adapters/filter.rs:44:25)",
"0x561da27eb05d: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27eb05d: <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter.rs:93:9)",
"0x561da27eb05d: <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place (src/vec/in_place_collect.rs:251:13)",
"0x561da27eb05d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:178:19)",
"0x561da281633c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da281633c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da281633c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (plonk/permutation/keygen.rs:107:32)",
"0x561da281633c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da281633c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da281633c: halo2_proofs::plonk::permutation::keygen::Assembly::build_vk (plonk/permutation/keygen.rs:107:32)",
"0x561da28291ac: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28291ac: alloc::boxed::Box<T>::new (src/plonk/circuit.rs:763:28)",
"0x561da28291ac: <halo2_proofs::plonk::circuit::Expression<F> as core::ops::arith::Mul<F>>::mul (src/plonk/circuit.rs:763:28)",
"0x561da28291ac: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}}::{{closure}} (src/nn_ops/eltwise_ops.rs:301:21)",
"0x561da28291ac: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da2810ccc: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da2810ccc: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da2810ccc: core::iter::traits::iterator::Iterator::reduce (iter/traits/iterator.rs:2458:21)",
"0x561da2810ccc: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:295:28)",
"0x561da2810ccc: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da28261b6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28261b6: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28261b6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da28261b6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28261b6: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da28261b6: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28261b6: halo2_proofs::arithmetic::kate_division (halo2_proofs/src/arithmetic.rs:308:17)",
"0x561da2837294: halo2_proofs::poly::multiopen::prover::create_proof::{{closure}}::{{closure}} (poly/multiopen/prover.rs:74:21)",
"0x561da2837294: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da2837294: halo2_proofs::poly::multiopen::prover::create_proof::{{closure}} (poly/multiopen/prover.rs:71:28)",
"0x561da2837294: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:67:24)",
"0x561da27ed0fe: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ed0fe: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ed0fe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27ed0fe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ed0fe: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27ed0fe: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27ed0fe: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27ed0fe: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da27ed0fe: <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next (src/vec/mod.rs:2379:9)",
"0x561da27ed0fe: alloc::vec::Vec<T,A>::extend_with (src/vec/mod.rs:2411:33)",
"0x561da27ed0fe: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:16:9)",
"0x561da27ed0fe: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2845759: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:207:20)",
"0x561da2844856: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2844856: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2844856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da2844856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2844856: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2844856: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2844856: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange (src/poly/domain.rs:179:21)",
"0x561da2844856: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:305:18)",
"0x561da27efc13: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27efc13: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27efc13: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27efc13: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27effcc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:399:13)",
"0x561da27effcc: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da27effcc: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:399:13)",
"0x561da27effcc: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da27effcc: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da27effcc: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27effcc: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27effcc: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27effcc: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27effcc: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27ed029: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ed029: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ed029: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27ed029: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ed029: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27ed029: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27e2c45: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e2c45: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:298:24)",
"0x561da28416cd: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28416cd: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:167:13)",
"0x561da283d0ab: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:9)",
"0x561da283d0ab: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:307:42)",
"0x561da283d0ab: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f43f4: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f43f4: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f43f4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f43f4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f43f4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f43f4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f43f4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28b2bf2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/arithmetic/fields.rs:242:34)",
"0x561da28b2bf2: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28b2bf2: pasta_curves::arithmetic::fields::SqrtTables<F>::new::{{closure}} (src/arithmetic/fields.rs:242:34)",
"0x561da28b2bf2: <core::iter::adapters::scan::Scan<I,St,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/scan.rs:45:9)",
"0x561da28b2bf2: pasta_curves::arithmetic::fields::SqrtTables<F>::new (src/arithmetic/fields.rs:252:22)",
"0x561da28120aa: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da28120aa: halo2_proofs::plonk::circuit::ConstraintSystem<F>::query_advice_index (src/plonk/circuit.rs:1111:9)",
"0x561da28120aa: halo2_proofs::plonk::circuit::ConstraintSystem<F>::query_any_index (src/plonk/circuit.rs:1134:28)",
"0x561da284d20d: halo2_proofs::plonk::circuit::ConstraintSystem<F>::enable_equality (src/plonk/circuit.rs:1053:9)",
"0x561da284d20d: <halo2_machinelearning::NNCircuit<F> as halo2_proofs::plonk::circuit::Circuit<F>>::configure::{{closure}} (halo2_machinelearning/src/lib.rs:49:17)",
"0x561da284d20d: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284d20d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284d20d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da2843a20: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:178:41)",
"0x561da283ec27: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283ec27: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da283ec27: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da283ec27: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x561da283ec27: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x561da283ec27: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:356:32)",
"0x561da283ec27: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert (btree/map/entry.rs:165:30)",
"0x561da28415b1: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:155:25)",
"0x561da2814d19: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2814d19: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da2814d19: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da2814d19: <alloc::boxed::Box<T,A> as core::clone::Clone>::clone (alloc/src/boxed.rs:1296:25)",
"0x561da2814d19: <halo2_proofs::plonk::circuit::Expression<F> as core::clone::Clone>::clone (src/plonk/circuit.rs:506:13)",
"0x561da2821635: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2821635: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2821635: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2821635: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate::{{closure}} (src/poly/evaluator.rs:215:17)",
"0x561da2821635: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2821635: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da280915b: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da280915b: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da280915b: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da280915b: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da280915b: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da280915b: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2832c4f: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2832c4f: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2832c4f: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2832c4f: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2832c4f: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da2815f38: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2815f38: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:201:13)",
"0x561da27f9eb3: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub>::sub (src/poly/evaluator.rs:350:9)",
"0x561da27f9eb3: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:431:27)",
"0x561da27ffdc4: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da27ffdc4: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffdc4: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da27ffdc4: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Add>::add (src/poly/evaluator.rs:326:18)",
"0x561da2807f5a: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da2807f5a: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as halo2_machinelearning::nn_ops::eltwise_ops::EltwiseInstructions<F>>::apply_elt::{{closure}} (src/nn_ops/eltwise_ops.rs:416:17)",
"0x561da2809b2c: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:629:9)",
"0x561da282c8e8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282c8e8: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:42:21)",
"0x561da2894fa0: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2894fa0: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2894fa0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:27:21)",
"0x561da2894fa0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2894fa0: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:27:21)",
"0x561da2894fa0: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2894fa0: halo2_proofs::plonk::permutation::keygen::Assembly::new (plonk/permutation/keygen.rs:39:25)",
"0x561da282c869: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282c869: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:38:22)",
"0x561da283e941: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283e941: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da283e941: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da283e941: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x561da283e941: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x561da283e941: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:356:32)",
"0x561da283e941: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert (btree/map/entry.rs:165:30)",
"0x561da2841d91: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:193:9)",
"0x561da282e741: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:114:26)",
"0x561da27ed3a6: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ed3a6: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ed3a6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27ed3a6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ed3a6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27ed3a6: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27ed3a6: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27ed3a6: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2856a43: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da2856a43: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:417:49)",
"0x561da2820f3e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2820f3e: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2820f3e: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2820f3e: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da2820f3e: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2820f3e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809a52: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809a52: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809a52: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809a52: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809a52: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809a52: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2824765: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2824765: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2824765: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2824765: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2832e92: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2832e92: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2832e92: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2832e92: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2832e92: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da284393d: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:174:21)",
"0x561da2838f88: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:9)",
"0x561da2838f88: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:237:38)",
"0x561da2838f88: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da2838f88: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:235:17)",
"0x561da284dfed: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da284dfed: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:287:33)",
"0x561da284dfed: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284dfed: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:85:27)",
"0x561da284dfed: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284dfed: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/enumerate.rs:91:9)",
"0x561da284dfed: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f0521: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f0521: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f0521: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f0521: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f0521: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f0521: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f0521: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2815de7: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2815de7: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2815de7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2815de7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2815de7: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2815de7: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2815de7: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2815de7: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2815de7: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da2815de7: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:199:31)",
"0x561da27efbb3: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27efbb3: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27efbb3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efbb3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27efbb3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27efbb3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27efbb3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2815ed5: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2815ed5: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2815ed5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2815ed5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2815ed5: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2815ed5: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2815ed5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2815ed5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2815ed5: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da2815ed5: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:201:24)",
"0x561da2802bfa: std::collections::hash::map::HashMap<K,V,S>::insert (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da2802bfa: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da28569eb: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da28569eb: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:416:44)",
"0x561da27fa398: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:462:49)",
"0x561da27f1430: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f1430: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f1430: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1430: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f1430: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f1430: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1430: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27ef656: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ef656: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ef656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ef656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ef656: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ef656: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282305f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282305f: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da282305f: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da282305f: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da282305f: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da282305f: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809992: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809992: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809992: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809992: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809992: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809992: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2821335: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2821335: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2821335: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2821335: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2833842: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833842: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833842: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833842: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833842: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da2822c3e: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2822c3e: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2822c3e: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2822c3e: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da2822c3e: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2822c3e: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809d52: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809d52: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809d52: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809d52: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809d52: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809d52: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2821095: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2821095: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2821095: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2821095: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2833962: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833962: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833962: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833962: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833962: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da283bad6: rayon_core::registry::Registry::in_worker_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:472:13)",
"0x561da283bad6: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:445:16)",
"0x561da283bad6: std::thread::local::LocalKey<T>::with (src/thread/local.rs:421:9)",
"0x561da2851b74: rayon_core::registry::Registry::in_worker_cold (rayon-core-1.9.3/src/registry.rs:461:9)",
"0x561da2851b74: rayon_core::registry::in_worker (rayon-core-1.9.3/src/registry.rs:879:13)",
"0x561da2836d47: rayon_core::scope::scope (src/scope/mod.rs:308:5)",
"0x561da2836d47: halo2_proofs::arithmetic::parallelize (halo2_proofs/src/arithmetic.rs:332:5)",
"0x561da2836d47: <halo2_proofs::poly::Polynomial<F,B> as core::ops::arith::Add<&halo2_proofs::poly::Polynomial<F,B>>>::add (halo2_proofs/src/poly.rs:188:9)",
"0x561da2836d47: halo2_proofs::poly::multiopen::prover::create_proof::{{closure}} (poly/multiopen/prover.rs:50:45)",
"0x561da2836d47: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:59:13)",
"0x561da280366c: std::collections::hash::map::HashMap<K,V,S>::insert (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da280366c: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da2844377: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:268:20)",
"0x561da2836b8f: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da2836b8f: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da2836b8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da2836b8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da2836b8f: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da2836b8f: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da2836b8f: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da2836b8f: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da2836b8f: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da2836b8f: halo2_proofs::poly::multiopen::prover::create_proof::{{closure}} (poly/multiopen/prover.rs:52:45)",
"0x561da2836b8f: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:59:13)",
"0x561da27f5483: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f5483: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f5483: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f5483: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f5483: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f5483: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f5483: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2804b3e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2804b3e: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:100:9)",
"0x561da27f1b5b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f1b5b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f1b5b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1b5b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f1b5b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f1b5b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f1b5b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27e362d: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e362d: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e362d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e362d: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:435:13)",
"0x561da280e2b8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280e2b8: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da280e2b8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da280e2b8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da280e2b8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da2836872: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da2836872: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:43:66)",
"0x561da283caca: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:288:37)",
"0x561da283caca: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da284563e: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da284563e: halo2_proofs::poly::domain::EvaluationDomain<G>::empty_lagrange_assigned (src/poly/domain.rs:191:21)",
"0x561da284563e: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:205:21)",
"0x561da280e61e: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da280e61e: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da280e61e: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da280e61e: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x561da280e61e: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x561da280e61e: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::new (collections/btree/node.rs:563:9)",
"0x561da280e61e: <alloc::collections::btree::map::BTreeMap<K,V,A> as core::clone::Clone>::clone::clone_subtree (collections/btree/map.rs:219:36)",
"0x561da2841fb1: <alloc::collections::btree::map::BTreeMap<K,V,A> as core::clone::Clone>::clone (collections/btree/map.rs:286:13)",
"0x561da2841fb1: <alloc::collections::btree::set::BTreeSet<T,A> as core::clone::Clone>::clone (collections/btree/set.rs:122:25)",
"0x561da2841fb1: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:211:35)",
"0x561da27f09c2: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f09c2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f09c2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f09c2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f09c2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f09c2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f09c2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2810e39: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da2810e39: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da2810e39: core::iter::traits::iterator::Iterator::reduce (iter/traits/iterator.rs:2458:21)",
"0x561da2810e39: halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_>::configure::{{closure}} (src/nn_ops/eltwise_ops.rs:306:29)",
"0x561da2810e39: halo2_proofs::plonk::circuit::ConstraintSystem<F>::create_gate (src/plonk/circuit.rs:1205:27)",
"0x561da27f569b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f569b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f569b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f569b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f569b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f569b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f569b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2810794: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2810794: halo2_proofs::plonk::circuit::ConstraintSystem<F>::query_fixed_index (src/plonk/circuit.rs:1096:9)",
"0x561da2810794: halo2_proofs::plonk::circuit::VirtualCells<F>::query_fixed (src/plonk/circuit.rs:1502:20)",
"0x561da284ad48: halo2_proofs::plonk::circuit::ConstraintSystem<F>::lookup::{{closure}} (src/plonk/circuit.rs:1073:29)",
"0x561da284ad48: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da284ad48: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da284ad48: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27eac5c: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27eac5c: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27eac5c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27eac5c: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da27f42c1: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:255:25)",
"0x561da27f42c1: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f42c1: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27f42c1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27f42c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f42c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2838f71: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da2838f71: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:237:38)",
"0x561da2838f71: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da2838f71: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct (plonk/permutation/prover.rs:235:17)",
"0x561da27f260a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f260a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f260a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f260a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f260a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f260a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f260a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da289e412: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289e412: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289e412: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/boxed.rs:645:18)",
"0x561da289e412: alloc::raw_vec::RawVec<T>::with_capacity (alloc/src/raw_vec.rs:93:9)",
"0x561da289e412: alloc::boxed::Box<[T]>::new_uninit_slice (alloc/src/boxed.rs:645:18)",
"0x561da289e412: std::io::buffered::bufreader::buffer::Buffer::with_capacity (io/buffered/bufreader.rs:94:33)",
"0x561da289e412: std::io::buffered::bufreader::BufReader<R>::with_capacity (io/buffered/bufreader.rs:94:33)",
"0x561da289e412: std::io::buffered::bufreader::BufReader<R>::new (io/buffered/bufreader.rs:73:9)",
"0x561da289e412: num_cpus::linux::Subsys::load_cpu (num_cpus-1.13.1/src/linux.rs:272:20)",
"0x561da289e412: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:146:24)",
"0x561da289e412: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da28223fe: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28223fe: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da28223fe: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da28223fe: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da28223fe: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da28223fe: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809512: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809512: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809512: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809512: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809512: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809512: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2822695: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2822695: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2822695: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2822695: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2833602: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2833602: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2833602: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2833602: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2833602: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da27fa802: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:480:17)",
"0x561da27ec6c5: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ec6c5: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ec6c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27ec6c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ec6c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ec6c5: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27ec6c5: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da289adff: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da289adff: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da289adff: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da289adff: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:482:49)",
"0x561da289adff: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:459:32)",
"0x561da289adff: std::thread::Builder::spawn (src/thread/mod.rs:391:18)",
"0x561da27f5361: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f5361: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f5361: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f5361: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f5361: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f5361: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f5361: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28579da: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:643:31)",
"0x561da28579da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28579da: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:643:31)",
"0x561da27f6548: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f6548: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f6548: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f6548: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f6548: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27f6548: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27f6548: halo2_proofs::poly::commitment::Params<C>::new (src/poly/commitment.rs:70:25)",
"0x561da27ec0a1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ec0a1: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ec0a1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec0a1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ec0a1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ec0a1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec0a1: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da282c93f: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/examples/mlp_4d.rs:42:21)",
"0x561da282c93f: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282c93f: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:42:21)",
"0x561da2806a59: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da2806a59: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da2806a59: alloc::vec::Vec<T,A>::extend_with (src/vec/mod.rs:2400:9)",
"0x561da2806a59: alloc::vec::Vec<T,A>::resize (src/vec/mod.rs:2256:13)",
"0x561da2806a59: <halo2_proofs::circuit::floor_planner::single_pass::SimpleTableLayouter<F,CS> as halo2_proofs::circuit::layouter::TableLayouter<F>>::assign_cell (circuit/floor_planner/single_pass.rs:445:13)",
"0x561da284f95d: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da284f95d: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:287:33)",
"0x561da284f95d: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284f95d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:85:27)",
"0x561da284f95d: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284f95d: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/enumerate.rs:91:9)",
"0x561da284f95d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f3d01: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f3d01: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f3d01: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f3d01: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f3d01: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f3d01: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f3d01: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27ed45c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ed45c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ed45c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:136:27)",
"0x561da27ed45c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ed45c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:136:27)",
"0x561da27ed45c: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27ed45c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27ed45c: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da284e603: <halo2_machinelearning::NeuralNetConfig<F> as core::clone::Clone>::clone (halo2_machinelearning/src/lib.rs:20:5)",
"0x561da284e603: halo2_proofs::plonk::prover::create_proof::{{closure}} (src/plonk/prover.rs:287:17)",
"0x561da284e603: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da284e603: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da284e603: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da2844af4: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:308:14)",
"0x561da27f454d: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da27f454d: halo2_proofs::plonk::permutation::prover::Committed<C,Ev>::construct::{{closure}} (plonk/permutation/prover.rs:255:25)",
"0x561da27f454d: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once (src/ops/function.rs:301:13)",
"0x561da27f454d: core::option::Option<T>::map (core/src/option.rs:929:29)",
"0x561da27f454d: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/map.rs:103:9)",
"0x561da27f454d: alloc::vec::Vec<T,A>::extend_desugared (src/vec/mod.rs:2749:35)",
"0x561da27f454d: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:18:9)",
"0x561da27f454d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:43:9)",
"0x561da27f454d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da2844d58: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:316:19)",
"0x561da28d0c33: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28d0c33: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28d0c33: alloc::raw_vec::RawVec<T,A>::with_capacity_in (io/buffered/bufwriter.rs:115:33)",
"0x561da28d0c33: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28d0c33: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da28d0c33: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x561da28d0c33: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x561da28d0c33: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x561da28d0c33: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:607:58)",
"0x561da28d0c33: std::sync::once_lock::OnceLock<T>::get_or_init_pin::{{closure}} (src/sync/once_lock.rs:265:25)",
"0x561da28d0c33: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:334:40)",
"0x561da28cd872: std::sync::once::Once::call_once_force (src/sync/once.rs:334:9)",
"0x561da28cd872: std::sync::once_lock::OnceLock<T>::get_or_init_pin (src/sync/once_lock.rs:264:9)",
"0x561da28cd872: std::io::stdio::stdout (src/io/stdio.rs:606:16)",
"0x561da28cd872: std::io::stdio::print_to (src/io/stdio.rs:1014:21)",
"0x561da28cd872: std::io::stdio::_print (src/io/stdio.rs:1027:5)",
"0x561da282ce8e: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:82:5)",
"0x561da282dff5: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da282dff5: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da282dff5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (poly/commitment/prover.rs:86:17)",
"0x561da282dff5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da282dff5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da282dff5: halo2_proofs::poly::commitment::prover::create_proof (poly/commitment/prover.rs:86:17)",
"0x561da289f126: std::fs::OpenOptions::open (std/src/fs.rs:1027:9)",
"0x561da289f126: std::fs::File::open (std/src/fs.rs:352:9)",
"0x561da289f126: num_cpus::linux::Cgroup::param (num_cpus-1.13.1/src/linux.rs:211:30)",
"0x561da289ec32: num_cpus::linux::Cgroup::quota_us (num_cpus-1.13.1/src/linux.rs:203:9)",
"0x561da289ec32: num_cpus::linux::Cgroup::cpu_quota (num_cpus-1.13.1/src/linux.rs:188:30)",
"0x561da289ec32: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:149:5)",
"0x561da289ec32: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da27f304c: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f304c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f304c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f304c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f304c: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f304c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f304c: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da283f072: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283f072: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:493:19)",
"0x561da283f072: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:457:15)",
"0x561da283f072: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x561da283f072: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x561da283f072: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:356:32)",
"0x561da2841a31: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:968:17)",
"0x561da2841a31: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:174:9)",
"0x561da27d9d80: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27d9d80: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da27e3b2d: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3b2d: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3b2d: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3b2d: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:435:13)",
"0x561da28211d7: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28211d7: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da28211d7: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da28211d7: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da28211d7: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da28211d7: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809212: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809212: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809212: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809212: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809212: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809212: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da282cb1b: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da282cb1b: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da282cb1b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da282cb1b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da282cb1b: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da282cb1b: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da282cb1b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da282cb1b: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da282cb1b: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:55:16)",
"0x561da281a849: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da281a849: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da281a849: alloc::raw_vec::RawVec<T,A>::with_capacity_in (ff-0.12.0/src/batch.rs:36:23)",
"0x561da281a849: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da281a849: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da281a849: <I as ff::batch::BatchInvert<F>>::batch_invert (ff-0.12.0/src/batch.rs:36:23)",
"0x561da27f958b: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:291:9)",
"0x561da283c566: rayon_core::registry::Registry::in_worker_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:472:13)",
"0x561da283c566: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:445:16)",
"0x561da283c566: std::thread::local::LocalKey<T>::with (src/thread/local.rs:421:9)",
"0x561da2851e14: rayon_core::registry::Registry::in_worker_cold (rayon-core-1.9.3/src/registry.rs:461:9)",
"0x561da2851e14: rayon_core::registry::in_worker (rayon-core-1.9.3/src/registry.rs:879:13)",
"0x561da27f9630: rayon_core::scope::scope (src/scope/mod.rs:308:5)",
"0x561da27f9630: halo2_proofs::arithmetic::parallelize (halo2_proofs/src/arithmetic.rs:332:5)",
"0x561da27f9630: halo2_proofs::plonk::lookup::prover::Permuted<C,Ev>::commit_product (plonk/lookup/prover.rs:296:9)",
"0x561da27f4763: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f4763: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f4763: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4763: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f4763: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f4763: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f4763: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28569d4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/plonk/prover.rs:408:38)",
"0x561da28569d4: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da28569d4: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:408:38)",
"0x561da2841b47: <alloc::collections::btree::map::BTreeMap<K,V,A> as core::clone::Clone>::clone (collections/btree/map.rs:286:13)",
"0x561da2841b47: <alloc::collections::btree::set::BTreeSet<T,A> as core::clone::Clone>::clone (collections/btree/set.rs:122:25)",
"0x561da2841b47: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:190:62)",
"0x561da289fcaa: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:0:0)",
"0x561da27dfe77: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27dfe77: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da289f765: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da289f765: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da289f765: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:1835:9)",
"0x561da289f765: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:85:18)",
"0x561da289f765: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2284:9)",
"0x561da289f765: std::io::read_until (src/io/mod.rs:0:0)",
"0x561da289f765: std::io::BufRead::read_line::{{closure}} (src/io/mod.rs:2193:44)",
"0x561da289f765: std::io::append_to_string (src/io/mod.rs:335:15)",
"0x561da289fa9b: std::io::BufRead::read_line (src/io/mod.rs:2193:18)",
"0x561da289fa9b: <std::io::Lines<B> as core::iter::traits::iterator::Iterator>::next (src/io/mod.rs:2813:15)",
"0x561da289e47b: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2237:29)",
"0x561da289e47b: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:77:9)",
"0x561da289e47b: core::iter::traits::iterator::Iterator::find_map (num_cpus-1.13.1/src/linux.rs:274:9)",
"0x561da289e47b: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:61:9)",
"0x561da289e47b: num_cpus::linux::Subsys::load_cpu (num_cpus-1.13.1/src/linux.rs:274:9)",
"0x561da289e47b: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:146:24)",
"0x561da289e47b: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da2848d8a: halo2_proofs::circuit::Region<F>::assign_advice (halo2_proofs/src/circuit.rs:225:13)",
"0x561da2848d8a: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::add_layers::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:325:29)",
"0x561da2848d8a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da2848d8a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:106:27)",
"0x561da2848d8a: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da2848d8a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:112:9)",
"0x561da2848d8a: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da27ef9f7: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27ef9f7: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27ef9f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27ef9f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282fa48: halo2_proofs::poly::domain::EvaluationDomain<G>::ifft (src/poly/domain.rs:375:9)",
"0x561da282fa48: halo2_proofs::poly::domain::EvaluationDomain<G>::extended_to_coeff (src/poly/domain.rs:306:9)",
"0x561da27fc301: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:88:22)",
"0x561da289e7fd: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2237:29)",
"0x561da289e7fd: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter_map.rs:77:9)",
"0x561da289e7fd: core::iter::traits::iterator::Iterator::find_map (num_cpus-1.13.1/src/linux.rs:225:9)",
"0x561da289e7fd: <core::iter::adapters::filter_map::FilterMap<I,F> as core::iter::traits::iterator::Iterator>::next (iter/adapters/filter_map.rs:61:9)",
"0x561da289e7fd: num_cpus::linux::MountInfo::load_cpu (num_cpus-1.13.1/src/linux.rs:225:9)",
"0x561da289e7fd: num_cpus::linux::load_cgroups (num_cpus-1.13.1/src/linux.rs:147:25)",
"0x561da289e7fd: num_cpus::linux::init_cgroups (num_cpus-1.13.1/src/linux.rs:129:26)",
"0x561da283b3bf: rayon_core::registry::Registry::in_worker_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:472:13)",
"0x561da283b3bf: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:445:16)",
"0x561da283b3bf: std::thread::local::LocalKey<T>::with (src/thread/local.rs:421:9)",
"0x561da285260e: rayon_core::registry::Registry::in_worker_cold (rayon-core-1.9.3/src/registry.rs:461:9)",
"0x561da285260e: rayon_core::registry::in_worker (rayon-core-1.9.3/src/registry.rs:879:13)",
"0x561da27f7692: rayon_core::scope::scope (src/scope/mod.rs:308:5)",
"0x561da27f7692: halo2_proofs::poly::evaluator::Evaluator<E,F,B>::evaluate (src/poly/evaluator.rs:213:9)",
"0x561da2841bc6: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2841bc6: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:190:9)",
"0x561da2825727: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2825727: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2825727: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2825727: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da2825727: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2825727: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809752: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809752: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809752: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809752: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809752: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809752: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da28232f5: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da28232f5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da28232f5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da28232f5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2832792: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2832792: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2832792: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2832792: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2832792: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da284164a: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da284164a: halo2_proofs::poly::multiopen::construct_intermediate_sets (src/poly/multiopen.rs:166:13)",
"0x561da28179b4: halo2_proofs::circuit::Region<F>::assign_advice_from_instance (halo2_proofs/src/circuit.rs:288:29)",
"0x561da27f5aa1: <halo2_machinelearning::nn_chip::ForwardLayerChip<F,Elt,_,_> as halo2_machinelearning::nn_chip::NNLayerInstructions<F>>::load_input_instance::{{closure}}::{{closure}} (halo2_machinelearning/src/nn_chip.rs:237:25)",
"0x561da27f5aa1: core::iter::adapters::map::map_try_fold::{{closure}} (iter/adapters/map.rs:91:28)",
"0x561da27f5aa1: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27f5aa1: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/map.rs:117:9)",
"0x561da27f5aa1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/mod.rs:195:9)",
"0x561da27f5aa1: core::iter::traits::iterator::Iterator::try_for_each (iter/adapters/mod.rs:178:9)",
"0x561da27f5aa1: <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::next (iter/adapters/mod.rs:178:9)",
"0x561da27f5aa1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:26:32)",
"0x561da27f5aa1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284568b: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da284568b: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:205:16)",
"0x561da2815fc4: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1768:13)",
"0x561da2815fc4: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:202:13)",
"0x561da28158d9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28158d9: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28158d9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (plonk/permutation/keygen.rs:170:30)",
"0x561da28158d9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28158d9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da28158d9: halo2_proofs::plonk::permutation::keygen::Assembly::build_pk (plonk/permutation/keygen.rs:170:30)",
"0x561da28a0fd9: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28a0fd9: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da28a0fd9: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da28a0fd9: <crossbeam_epoch::collector::Collector as core::default::Default>::default (crossbeam-epoch-0.9.10/src/collector.rs:32:21)",
"0x561da289a92a: core::ops::function::FnOnce::call_once (src/ops/function.rs:248:5)",
"0x561da289a92a: once_cell::sync::Lazy<T,F>::force::{{closure}} (once_cell-1.15.0/src/lib.rs:1260:28)",
"0x561da289a92a: once_cell::sync::OnceCell<T>::get_or_init::{{closure}} (once_cell-1.15.0/src/lib.rs:1072:57)",
"0x561da289a92a: once_cell::imp::OnceCell<T>::initialize::{{closure}} (once_cell-1.15.0/src/imp_std.rs:85:23)",
"0x561da28a1b81: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:290:13)",
"0x561da28a1b81: once_cell::imp::initialize_or_wait (once_cell-1.15.0/src/imp_std.rs:216:20)",
"0x561da27df4f2: once_cell::imp::OnceCell<T>::initialize (once_cell-1.15.0/src/imp_std.rs:81:9)",
"0x561da289acd9: once_cell::sync::OnceCell<T>::get_or_try_init (once_cell-1.15.0/src/lib.rs:1112:13)",
"0x561da289acd9: once_cell::sync::OnceCell<T>::get_or_init (once_cell-1.15.0/src/lib.rs:1072:19)",
"0x561da289acd9: once_cell::sync::Lazy<T,F>::force (once_cell-1.15.0/src/lib.rs:1259:13)",
"0x561da289acd9: <once_cell::sync::Lazy<T,F> as core::ops::deref::Deref>::deref (once_cell-1.15.0/src/lib.rs:1320:13)",
"0x561da289acd9: crossbeam_epoch::default::HANDLE::__init (src/thread/local.rs:353:25)",
"0x561da289acd9: crossbeam_epoch::default::HANDLE::__getit::{{closure}} (src/thread/local.rs:353:25)",
"0x561da289acd9: std::thread::local::lazy::LazyKeyInner<T>::initialize (src/thread/local.rs:809:25)",
"0x561da289cb5e: std::thread::local::fast::Key<T>::get (src/thread/local.rs:970:29)",
"0x561da289cb5e: crossbeam_epoch::default::HANDLE::__getit (src/thread/local.rs:345:21)",
"0x561da289cb5e: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:444:32)",
"0x561da289cb5e: crossbeam_epoch::default::with_handle (crossbeam-epoch-0.9.10/src/default.rs:51:5)",
"0x561da289cb5e: crossbeam_epoch::default::is_pinned (crossbeam-deque-0.8.2/src/deque.rs:637:12)",
"0x561da289cb5e: crossbeam_deque::deque::Stealer<T>::steal (crossbeam-deque-0.8.2/src/deque.rs:637:12)",
"0x561da27df283: rayon_core::registry::WorkerThread::steal::{{closure}} (rayon-core-1.9.3/src/registry.rs:778:27)",
"0x561da27df283: core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (iter/traits/iterator.rs:2732:32)",
"0x561da27df283: core::iter::adapters::filter::filter_try_fold::{{closure}} (iter/adapters/filter.rs:44:44)",
"0x561da27df283: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut (src/ops/function.rs:290:13)",
"0x561da27df283: core::iter::traits::iterator::Iterator::try_fold (iter/traits/iterator.rs:2238:21)",
"0x561da27df283: <core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/chain.rs:74:19)",
"0x561da27df283: <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::try_fold (iter/adapters/filter.rs:93:9)",
"0x561da27df283: core::iter::traits::iterator::Iterator::find_map (rayon-core-1.9.3/src/registry.rs:773:23)",
"0x561da27df283: rayon_core::registry::WorkerThread::steal (rayon-core-1.9.3/src/registry.rs:773:23)",
"0x561da27df283: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:725:29)",
"0x561da27df283: core::option::Option<T>::or_else (core/src/option.rs:1371:21)",
"0x561da27df283: rayon_core::registry::WorkerThread::wait_until_cold (rayon-core-1.9.3/src/registry.rs:723:32)",
"0x561da28439d9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28439d9: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28439d9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da28439d9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28439d9: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da28439d9: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da28439d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da28439d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da28439d9: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da28439d9: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:178:66)",
"0x561da28a08ae: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28a08ae: alloc::boxed::Box<T>::new (crossbeam-epoch-0.9.10/src/atomic.rs:200:23)",
"0x561da28a08ae: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.10/src/atomic.rs:200:23)",
"0x561da28a08ae: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.10/src/atomic.rs:1159:35)",
"0x561da28a08ae: crossbeam_epoch::atomic::Owned<T>::new (crossbeam-epoch-0.9.10/src/atomic.rs:1144:9)",
"0x561da28a08ae: crossbeam_epoch::internal::Local::register (crossbeam-epoch-0.9.10/src/internal.rs:321:25)",
"0x561da289ac65: crossbeam_epoch::default::HANDLE::__init (src/thread/local.rs:353:25)",
"0x561da289ac65: crossbeam_epoch::default::HANDLE::__getit::{{closure}} (src/thread/local.rs:353:25)",
"0x561da289ac65: std::thread::local::lazy::LazyKeyInner<T>::initialize (src/thread/local.rs:809:25)",
"0x561da282c7c2: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282c7c2: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:35:21)",
"0x561da27eec8a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27eec8a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27eec8a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27eec8a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27eec8a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27eec8a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27eec8a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da284432a: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:242:9)",
"0x561da284432a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:186:38)",
"0x561da284432a: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (src/vec/spec_from_elem.rs:25:31)",
"0x561da284432a: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x561da284432a: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da284432a: halo2_proofs::plonk::keygen::keygen_pk (src/plonk/keygen.rs:268:25)",
"0x561da27ed625: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ed625: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ed625: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da27ed625: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ed625: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da27ed625: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da27ed625: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da27ed625: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da27ed625: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeConfig<F,_,_> as core::clone::Clone>::clone (src/nn_ops/eltwise_ops.rs:227:5)",
"0x561da27ed625: <halo2_machinelearning::nn_ops::eltwise_ops::NormalizeChip<F,_,_> as core::clone::Clone>::clone (src/nn_ops/eltwise_ops.rs:239:5)",
"0x561da27ed625: <halo2_machinelearning::nn_chip::ForwardLayerConfig<F,Elt,_,_> as core::clone::Clone>::clone (halo2_machinelearning/src/nn_chip.rs:33:5)",
"0x561da27ed625: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:143:32)",
"0x561da282c743: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282c743: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:25:22)",
"0x561da283b5c6: rayon_core::registry::Registry::in_worker_cold::{{closure}} (rayon-core-1.9.3/src/registry.rs:472:13)",
"0x561da283b5c6: std::thread::local::LocalKey<T>::try_with (src/thread/local.rs:445:16)",
"0x561da283b5c6: std::thread::local::LocalKey<T>::with (src/thread/local.rs:421:9)",
"0x561da2852b44: rayon_core::registry::Registry::in_worker_cold (rayon-core-1.9.3/src/registry.rs:461:9)",
"0x561da2852b44: rayon_core::registry::in_worker (rayon-core-1.9.3/src/registry.rs:879:13)",
"0x561da2843313: rayon_core::scope::scope (src/scope/mod.rs:308:5)",
"0x561da2843313: halo2_proofs::arithmetic::parallelize (halo2_proofs/src/arithmetic.rs:332:5)",
"0x561da2843313: halo2_proofs::plonk::permutation::prover::<impl halo2_proofs::plonk::permutation::Argument>::commit (plonk/permutation/prover.rs:107:17)",
"0x561da27f507a: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f507a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f507a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f507a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f507a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f507a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27f507a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da28983b2: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28983b2: alloc::boxed::Box<T>::new (alloc/src/sync.rs:346:25)",
"0x561da28983b2: alloc::sync::Arc<T>::new (alloc/src/sync.rs:346:25)",
"0x561da28983b2: rayon_core::registry::Registry::new (rayon-core-1.9.3/src/registry.rs:236:24)",
"0x561da27f1e4d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27f1e4d: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27f1e4d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f1e4d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27f1e4d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27f1e4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x561da27f1e4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da27fc528: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27fc528: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27fc528: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fc528: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27fc528: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da27fc528: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da27fc528: halo2_proofs::plonk::vanishing::prover::Committed<C>::construct (plonk/vanishing/prover.rs:107:33)",
"0x561da2856a9b: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da2856a9b: halo2_proofs::plonk::prover::create_proof (src/plonk/prover.rs:418:48)",
"0x561da27e3738: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da27e3738: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da27e3738: <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend_reserve (src/vec/mod.rs:2733:9)",
"0x561da27e3738: <(ExtendA,ExtendB) as core::iter::traits::collect::Extend<(A,B)>>::extend (iter/traits/collect.rs:434:13)",
"0x561da28368d7: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28368d7: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28368d7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_elem.rs:15:21)",
"0x561da28368d7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28368d7: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x561da28368d7: alloc::vec::from_elem (src/vec/mod.rs:2458:5)",
"0x561da28368d7: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:44:24)",
"0x561da27ec9a1: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da27ec9a1: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da27ec9a1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec9a1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da27ec9a1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da27ec9a1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da27ec9a1: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da282c7b2: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (halo2_machinelearning/examples/mlp_4d.rs:25:22)",
"0x561da282c7b2: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da282c7b2: mlp_4d::main (halo2_machinelearning/examples/mlp_4d.rs:25:22)",
"0x561da28a0ee3: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da28a0ee3: alloc::boxed::Box<T>::new (crossbeam-epoch-0.9.10/src/atomic.rs:200:23)",
"0x561da28a0ee3: <T as crossbeam_epoch::atomic::Pointable>::init (crossbeam-epoch-0.9.10/src/atomic.rs:200:23)",
"0x561da28a0ee3: crossbeam_epoch::atomic::Owned<T>::init (crossbeam-epoch-0.9.10/src/atomic.rs:1159:35)",
"0x561da28a0ee3: crossbeam_epoch::atomic::Owned<T>::new (crossbeam-epoch-0.9.10/src/atomic.rs:1144:9)",
"0x561da28a0ee3: crossbeam_epoch::sync::queue::Queue<T>::new (src/sync/queue.rs:50:24)",
"0x561da28a0ee3: crossbeam_epoch::internal::Global::new (crossbeam-epoch-0.9.10/src/internal.rs:178:20)",
"0x561da28a0ee3: <crossbeam_epoch::collector::Collector as core::default::Default>::default (crossbeam-epoch-0.9.10/src/collector.rs:32:30)",
"0x561da28023cc: std::collections::hash::map::HashMap<K,V,S>::insert (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da28023cc: <halo2_proofs::circuit::floor_planner::single_pass::SingleChipLayouter<F,CS> as halo2_proofs::circuit::Layouter<F>>::assign_region (circuit/floor_planner/single_pass.rs:104:13)",
"0x561da27f9f73: <halo2_proofs::poly::evaluator::Ast<E,F,B> as core::ops::arith::Sub<halo2_proofs::poly::evaluator::AstLeaf<E,B>>>::sub (src/poly/evaluator.rs:366:16)",
"0x561da27f9f73: halo2_proofs::plonk::lookup::prover::Committed<C,Ev>::construct (plonk/lookup/prover.rs:437:25)",
"0x561da28cb177: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/sync.rs:488:26)",
"0x561da28cb177: alloc::sync::Arc<T>::new_uninit::{{closure}} (alloc/src/sync.rs:488:26)",
"0x561da28cb177: alloc::sync::Arc<T>::try_allocate_for_layout (alloc/src/sync.rs:1176:19)",
"0x561da28cb177: alloc::sync::Arc<T>::allocate_for_layout (alloc/src/sync.rs:1154:13)",
"0x561da28cb177: alloc::sync::Arc<T>::new_uninit (alloc/src/sync.rs:486:27)",
"0x561da28cb177: std::thread::Thread::new (src/thread/mod.rs:1146:27)",
"0x561da289adbb: std::thread::Builder::spawn_unchecked_ (src/thread/mod.rs:477:25)",
"0x561da289adbb: std::thread::Builder::spawn_unchecked (src/thread/mod.rs:459:32)",
"0x561da289adbb: std::thread::Builder::spawn (src/thread/mod.rs:391:18)",
"0x561da2849735: halo2_proofs::plonk::keygen::keygen_pk::{{closure}} (src/plonk/keygen.rs:291:21)",
"0x561da2849735: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x561da2849735: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da2849735: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x561da283719d: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da283719d: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da283719d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da283719d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da283719d: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da283719d: alloc::slice::hack::to_vec (src/vec/mod.rs:2580:9)",
"0x561da283719d: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da283719d: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2580:9)",
"0x561da283719d: <halo2_proofs::poly::Polynomial<F,B> as core::clone::Clone>::clone (halo2_proofs/src/poly.rs:55:5)",
"0x561da283719d: <core::option::Option<T> as core::clone::Clone>::clone (poly/multiopen/prover.rs:73:23)",
"0x561da283719d: halo2_proofs::poly::multiopen::prover::create_proof::{{closure}} (poly/multiopen/prover.rs:73:23)",
"0x561da283719d: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2414:21)",
"0x561da283719d: halo2_proofs::poly::multiopen::prover::create_proof (poly/multiopen/prover.rs:67:24)",
"0x561da28ea8fa: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:0:0)",
"0x561da27e20c7: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e20c7: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da28ea7ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da28ea7ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da28ea7ca: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:1835:9)",
"0x561da28ea7ca: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:85:18)",
"0x561da28ea7ca: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2284:9)",
"0x561da28ea7ca: alloc::string::String::push_str (alloc/src/string.rs:2839:9)",
"0x561da28ea7ca: <alloc::string::String as core::fmt::Write>::write_str (alloc/src/string.rs:2839:9)",
"0x561da28ea7ca: <&mut W as core::fmt::Write>::write_str (src/fmt/mod.rs:199:9)",
"0x561da28ee441: core::fmt::Formatter::write_str (src/fmt/mod.rs:1633:9)",
"0x561da28ee441: core::fmt::builders::debug_struct_new (src/fmt/builders.rs:99:18)",
"0x561da28ee441: core::fmt::Formatter::debug_struct_fields_finish (src/fmt/mod.rs:2088:27)",
"0x561da281adc7: <halo2_proofs::plonk::PinnedVerificationKey<C> as core::fmt::Debug>::fmt (halo2_proofs/src/plonk.rs:115:10)",
"0x561da28ed75e: core::fmt::write (src/fmt/mod.rs:1202:17)",
"0x561da28eb07f: core::fmt::Write::write_fmt (src/fmt/mod.rs:192:9)",
"0x561da28eb07f: alloc::fmt::format::format_inner (alloc/src/fmt.rs:612:9)",
"0x561da2816f64: alloc::fmt::format::{{closure}} (alloc/src/fmt.rs:616:34)",
"0x561da2816f64: core::option::Option<T>::map_or_else (core/src/option.rs:1023:21)",
"0x561da2816f64: alloc::fmt::format (halo2_proofs/src/plonk.rs:77:17)",
"0x561da2816f64: halo2_proofs::plonk::VerifyingKey<C>::from_parts (alloc/src/macros.rs:118:19)",
"0x561da2845c54: halo2_proofs::plonk::keygen::keygen_vk (src/plonk/keygen.rs:237:8)",
"0x561da289a125: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da289a125: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da289a125: alloc::raw_vec::RawVec<T,A>::with_capacity_in (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da289a125: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da289a125: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:483:9)",
"0x561da289a125: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x561da289a125: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:164:20)",
"0x561da2898210: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (rayon-core-1.9.3/src/registry.rs:238:27)",
"0x561da2898210: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1836:9)",
"0x561da2898210: rayon_core::registry::Registry::new (rayon-core-1.9.3/src/registry.rs:238:27)",
"0x561da28d0629: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:237:9)",
"0x561da28d0629: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:45)",
"0x561da28d0629: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/slice.rs:159:25)",
"0x561da28d0629: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:641:20)",
"0x561da28d0629: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:159:25)",
"0x561da28d0629: alloc::slice::hack::to_vec (sys/unix/os_str.rs:213:22)",
"0x561da28d0629: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:438:9)",
"0x561da28d0629: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:413:9)",
"0x561da28d0629: std::sys::unix::os_str::Slice::to_owned (sys/unix/os_str.rs:213:22)",
"0x561da28d0629: std::ffi::os_str::OsStr::to_os_string (std/src/path.rs:2063:23)",
"0x561da28d0629: std::path::Path::to_path_buf (std/src/path.rs:2063:23)",
"0x561da28d0629: std::path::Path::_join (std/src/path.rs:2447:23)",
"0x561da289f0f0: std::path::Path::join (std/src/path.rs:2443:9)",
"0x561da289f0f0: num_cpus::linux::Cgroup::param (num_cpus-1.13.1/src/linux.rs:211:41)",
"0x561da28bd482: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:0:0)",
"0x561da27e0e67: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:400:19)",
"0x561da27e0e67: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:285:28)",
"0x561da28cddc7: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:289:13)",
"0x561da28cddc7: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:841:9)",
"0x561da28cddc7: std::io::default_read_to_end (src/io/mod.rs:362:13)",
"0x561da28cbddd: std::io::default_read_to_string::{{closure}} (src/io/mod.rs:426:40)",
"0x561da28cbddd: std::io::append_to_string (src/io/mod.rs:335:15)",
"0x561da28cbddd: std::io::default_read_to_string (src/io/mod.rs:426:14)",
"0x561da28cbddd: <std::fs::File as std::io::Read>::read_to_string (std/src/fs.rs:724:9)",
"0x561da289f1c8: num_cpus::linux::Cgroup::param (num_cpus-1.13.1/src/linux.rs:214:15)",
"0x561da27f47c3: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:831:9)",
"0x561da27f47c3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (src/vec/spec_extend.rs:40:17)",
"0x561da27f47c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:62:9)",
"0x561da27f47c3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x561da282210f: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da282210f: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da282210f: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da282210f: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da282210f: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da282210f: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2809692: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2809692: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2809692: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2809692: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2809692: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da2809692: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da2822d95: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da2822d95: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da2822d95: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da2822d95: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da2832b22: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da2832b22: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da2832b22: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da2832b22: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da2832b22: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)",
"0x561da2824ef8: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:326:11)",
"0x561da2824ef8: alloc::boxed::Box<T>::new (src/scope/mod.rs:543:27)",
"0x561da2824ef8: rayon_core::scope::Scope::spawn (src/scope/mod.rs:543:27)",
"0x561da2824ef8: halo2_proofs::arithmetic::parallelize::{{closure}} (halo2_proofs/src/arithmetic.rs:335:13)",
"0x561da2824ef8: rayon_core::scope::scope::{{closure}}::{{closure}} (src/scope/mod.rs:310:52)",
"0x561da2824ef8: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da28098d2: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da28098d2: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da28098d2: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da28098d2: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da28098d2: rayon_core::scope::ScopeBase::execute_job_closure (src/scope/mod.rs:650:15)",
"0x561da28098d2: rayon_core::scope::ScopeBase::complete (src/scope/mod.rs:628:22)",
"0x561da28227c5: rayon_core::scope::scope::{{closure}} (src/scope/mod.rs:310:9)",
"0x561da28227c5: rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (rayon-core-1.9.3/src/registry.rs:468:21)",
"0x561da28227c5: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::call::{{closure}} (rayon-core-1.9.3/src/job.rs:113:21)",
"0x561da28227c5: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (src/panic/unwind_safe.rs:271:9)",
"0x561da28334e2: std::panicking::try::do_call (std/src/panicking.rs:492:40)",
"0x561da28334e2: std::panicking::try (std/src/panicking.rs:456:19)",
"0x561da28334e2: std::panic::catch_unwind (std/src/panic.rs:137:14)",
"0x561da28334e2: rayon_core::unwind::halt_unwinding (rayon-core-1.9.3/src/unwind.rs:17:5)",
"0x561da28334e2: <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute (rayon-core-1.9.3/src/job.rs:119:38)"
]
}